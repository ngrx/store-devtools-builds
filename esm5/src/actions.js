export var PERFORM_ACTION = 'PERFORM_ACTION';
export var REFRESH = 'REFRESH';
export var RESET = 'RESET';
export var ROLLBACK = 'ROLLBACK';
export var COMMIT = 'COMMIT';
export var SWEEP = 'SWEEP';
export var TOGGLE_ACTION = 'TOGGLE_ACTION';
export var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';
export var JUMP_TO_STATE = 'JUMP_TO_STATE';
export var JUMP_TO_ACTION = 'JUMP_TO_ACTION';
export var IMPORT_STATE = 'IMPORT_STATE';
var PerformAction = /** @class */ (function () {
    function PerformAction(action, timestamp) {
        this.action = action;
        this.timestamp = timestamp;
        this.type = PERFORM_ACTION;
        if (typeof action.type === 'undefined') {
            throw new Error('Actions may not have an undefined "type" property. ' +
                'Have you misspelled a constant?');
        }
    }
    return PerformAction;
}());
export { PerformAction };
var Refresh = /** @class */ (function () {
    function Refresh() {
        this.type = REFRESH;
    }
    return Refresh;
}());
export { Refresh };
var Reset = /** @class */ (function () {
    function Reset(timestamp) {
        this.timestamp = timestamp;
        this.type = RESET;
    }
    return Reset;
}());
export { Reset };
var Rollback = /** @class */ (function () {
    function Rollback(timestamp) {
        this.timestamp = timestamp;
        this.type = ROLLBACK;
    }
    return Rollback;
}());
export { Rollback };
var Commit = /** @class */ (function () {
    function Commit(timestamp) {
        this.timestamp = timestamp;
        this.type = COMMIT;
    }
    return Commit;
}());
export { Commit };
var Sweep = /** @class */ (function () {
    function Sweep() {
        this.type = SWEEP;
    }
    return Sweep;
}());
export { Sweep };
var ToggleAction = /** @class */ (function () {
    function ToggleAction(id) {
        this.id = id;
        this.type = TOGGLE_ACTION;
    }
    return ToggleAction;
}());
export { ToggleAction };
var SetActionsActive = /** @class */ (function () {
    function SetActionsActive(start, end, active) {
        if (active === void 0) { active = true; }
        this.start = start;
        this.end = end;
        this.active = active;
        this.type = SET_ACTIONS_ACTIVE;
    }
    return SetActionsActive;
}());
export { SetActionsActive };
var JumpToState = /** @class */ (function () {
    function JumpToState(index) {
        this.index = index;
        this.type = JUMP_TO_STATE;
    }
    return JumpToState;
}());
export { JumpToState };
var JumpToAction = /** @class */ (function () {
    function JumpToAction(actionId) {
        this.actionId = actionId;
        this.type = JUMP_TO_ACTION;
    }
    return JumpToAction;
}());
export { JumpToAction };
var ImportState = /** @class */ (function () {
    function ImportState(nextLiftedState) {
        this.nextLiftedState = nextLiftedState;
        this.type = IMPORT_STATE;
    }
    return ImportState;
}());
export { ImportState };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvc3JjL2FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUM7QUFDakMsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQztBQUM3QixNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyxJQUFNLE1BQU0sR0FBRyxRQUFRLENBQUM7QUFDL0IsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQztBQUM3QixNQUFNLENBQUMsSUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLG9CQUFvQixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxlQUFlLENBQUM7QUFDN0MsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFFM0MsSUFBQTtJQUdFLHVCQUFtQixNQUFjLEVBQVMsU0FBaUI7UUFBeEMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFTLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRjNDLGNBQWM7UUFHNUIsRUFBRSxDQUFDLENBQUMsT0FBTyxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FDYixxREFBcUQ7Z0JBQ25ELGlDQUFpQyxDQUNwQyxDQUFDO1NBQ0g7S0FDRjt3QkF4Qkg7SUF5QkMsQ0FBQTtBQVhELHlCQVdDO0FBRUQsSUFBQTs7b0JBQ2tCLE9BQU87O2tCQTVCekI7SUE2QkMsQ0FBQTtBQUZELG1CQUVDO0FBRUQsSUFBQTtJQUdFLGVBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLEtBQUs7S0FFbUI7Z0JBbEMxQztJQW1DQyxDQUFBO0FBSkQsaUJBSUM7QUFFRCxJQUFBO0lBR0Usa0JBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLFFBQVE7S0FFZ0I7bUJBeEMxQztJQXlDQyxDQUFBO0FBSkQsb0JBSUM7QUFFRCxJQUFBO0lBR0UsZ0JBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLE1BQU07S0FFa0I7aUJBOUMxQztJQStDQyxDQUFBO0FBSkQsa0JBSUM7QUFFRCxJQUFBOztvQkFDa0IsS0FBSzs7Z0JBbER2QjtJQW1EQyxDQUFBO0FBRkQsaUJBRUM7QUFFRCxJQUFBO0lBR0Usc0JBQW1CLEVBQVU7UUFBVixPQUFFLEdBQUYsRUFBRSxDQUFRO29CQUZiLGFBQWE7S0FFSTt1QkF4RG5DO0lBeURDLENBQUE7QUFKRCx3QkFJQztBQUVELElBQUE7SUFHRSwwQkFDUyxLQUFhLEVBQ2IsR0FBVyxFQUNYLE1BQXNCOzhDQUFBO1FBRnRCLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDYixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1gsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7b0JBTGYsa0JBQWtCO0tBTTlCOzJCQWxFTjtJQW1FQyxDQUFBO0FBUkQsNEJBUUM7QUFFRCxJQUFBO0lBR0UscUJBQW1CLEtBQWE7UUFBYixVQUFLLEdBQUwsS0FBSyxDQUFRO29CQUZoQixhQUFhO0tBRU87c0JBeEV0QztJQXlFQyxDQUFBO0FBSkQsdUJBSUM7QUFFRCxJQUFBO0lBR0Usc0JBQW1CLFFBQWdCO1FBQWhCLGFBQVEsR0FBUixRQUFRLENBQVE7b0JBRm5CLGNBQWM7S0FFUzt1QkE5RXpDO0lBK0VDLENBQUE7QUFKRCx3QkFJQztBQUVELElBQUE7SUFHRSxxQkFBbUIsZUFBb0I7UUFBcEIsb0JBQWUsR0FBZixlQUFlLENBQUs7b0JBRnZCLFlBQVk7S0FFZTtzQkFwRjdDO0lBcUZDLENBQUE7QUFKRCx1QkFJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcblxuZXhwb3J0IGNvbnN0IFBFUkZPUk1fQUNUSU9OID0gJ1BFUkZPUk1fQUNUSU9OJztcbmV4cG9ydCBjb25zdCBSRUZSRVNIID0gJ1JFRlJFU0gnO1xuZXhwb3J0IGNvbnN0IFJFU0VUID0gJ1JFU0VUJztcbmV4cG9ydCBjb25zdCBST0xMQkFDSyA9ICdST0xMQkFDSyc7XG5leHBvcnQgY29uc3QgQ09NTUlUID0gJ0NPTU1JVCc7XG5leHBvcnQgY29uc3QgU1dFRVAgPSAnU1dFRVAnO1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9BQ1RJT04gPSAnVE9HR0xFX0FDVElPTic7XG5leHBvcnQgY29uc3QgU0VUX0FDVElPTlNfQUNUSVZFID0gJ1NFVF9BQ1RJT05TX0FDVElWRSc7XG5leHBvcnQgY29uc3QgSlVNUF9UT19TVEFURSA9ICdKVU1QX1RPX1NUQVRFJztcbmV4cG9ydCBjb25zdCBKVU1QX1RPX0FDVElPTiA9ICdKVU1QX1RPX0FDVElPTic7XG5leHBvcnQgY29uc3QgSU1QT1JUX1NUQVRFID0gJ0lNUE9SVF9TVEFURSc7XG5cbmV4cG9ydCBjbGFzcyBQZXJmb3JtQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFBFUkZPUk1fQUNUSU9OO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhY3Rpb246IEFjdGlvbiwgcHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7XG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0FjdGlvbnMgbWF5IG5vdCBoYXZlIGFuIHVuZGVmaW5lZCBcInR5cGVcIiBwcm9wZXJ0eS4gJyArXG4gICAgICAgICAgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUmVmcmVzaCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBSRUZSRVNIO1xufVxuXG5leHBvcnQgY2xhc3MgUmVzZXQgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gUkVTRVQ7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgUm9sbGJhY2sgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gUk9MTEJBQ0s7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgQ29tbWl0IGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENPTU1JVDtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGltZXN0YW1wOiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTd2VlcCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTV0VFUDtcbn1cblxuZXhwb3J0IGNsYXNzIFRvZ2dsZUFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBUT0dHTEVfQUNUSU9OO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBpZDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgU2V0QWN0aW9uc0FjdGl2ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfQUNUSU9OU19BQ1RJVkU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHN0YXJ0OiBudW1iZXIsXG4gICAgcHVibGljIGVuZDogbnVtYmVyLFxuICAgIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW4gPSB0cnVlXG4gICkge31cbn1cblxuZXhwb3J0IGNsYXNzIEp1bXBUb1N0YXRlIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IEpVTVBfVE9fU1RBVEU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGluZGV4OiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBKdW1wVG9BY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gSlVNUF9UT19BQ1RJT047XG5cbiAgY29uc3RydWN0b3IocHVibGljIGFjdGlvbklkOiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBJbXBvcnRTdGF0ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBJTVBPUlRfU1RBVEU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIG5leHRMaWZ0ZWRTdGF0ZTogYW55KSB7fVxufVxuXG5leHBvcnQgdHlwZSBBbGwgPVxuICB8IFBlcmZvcm1BY3Rpb25cbiAgfCBSZWZyZXNoXG4gIHwgUmVzZXRcbiAgfCBSb2xsYmFja1xuICB8IENvbW1pdFxuICB8IFN3ZWVwXG4gIHwgVG9nZ2xlQWN0aW9uXG4gIHwgU2V0QWN0aW9uc0FjdGl2ZVxuICB8IEp1bXBUb1N0YXRlXG4gIHwgSnVtcFRvQWN0aW9uXG4gIHwgSW1wb3J0U3RhdGU7XG4iXX0=