{"version":3,"file":"store-devtools.umd.js","sources":["../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/config.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/actions.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/utils.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/extension.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/reducer.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/devtools.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/src/instrument.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/index.js","../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.esm5/modules/store-devtools/store-devtools.js"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nvar StoreDevtoolsConfig = /** @class */ (function () {\n    function StoreDevtoolsConfig() {\n    }\n    return StoreDevtoolsConfig;\n}());\nexport { StoreDevtoolsConfig };\nexport var STORE_DEVTOOLS_CONFIG = new InjectionToken('@ngrx/devtools Options');\nexport var INITIAL_OPTIONS = new InjectionToken('@ngrx/devtools Initial Config');\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9zdG9yZS1kZXZ0b29scy9zcmMvY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFZckQsSUFBQTs7OzhCQWJBO0lBc0JDLENBQUE7QUFURCwrQkFTQztBQUVELE1BQU0sQ0FBQyxJQUFNLHFCQUFxQixHQUFHLElBQUksY0FBYyxDQUNyRCx3QkFBd0IsQ0FDekIsQ0FBQztBQUNGLE1BQU0sQ0FBQyxJQUFNLGVBQWUsR0FBRyxJQUFJLGNBQWMsQ0FDL0MsK0JBQStCLENBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25SZWR1Y2VyLCBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBBY3Rpb25TYW5pdGl6ZXIgPSAoYWN0aW9uOiBBY3Rpb24sIGlkOiBudW1iZXIpID0+IEFjdGlvbjtcbmV4cG9ydCB0eXBlIFN0YXRlU2FuaXRpemVyID0gKHN0YXRlOiBhbnksIGluZGV4OiBudW1iZXIpID0+IGFueTtcbmV4cG9ydCB0eXBlIFNlcmlhbGl6YXRpb25PcHRpb25zID0ge1xuICBvcHRpb25zPzogYm9vbGVhbiB8IGFueTtcbiAgcmVwbGFjZXI/OiAoa2V5OiBhbnksIHZhbHVlOiBhbnkpID0+IHt9O1xuICByZXZpdmVyPzogKGtleTogYW55LCB2YWx1ZTogYW55KSA9PiB7fTtcbiAgaW1tdXRhYmxlPzogYW55O1xuICByZWZzPzogQXJyYXk8YW55Pjtcbn07XG5cbmV4cG9ydCBjbGFzcyBTdG9yZURldnRvb2xzQ29uZmlnIHtcbiAgbWF4QWdlOiBudW1iZXIgfCBmYWxzZTtcbiAgbW9uaXRvcjogQWN0aW9uUmVkdWNlcjxhbnksIGFueT47XG4gIGFjdGlvblNhbml0aXplcj86IEFjdGlvblNhbml0aXplcjtcbiAgc3RhdGVTYW5pdGl6ZXI/OiBTdGF0ZVNhbml0aXplcjtcbiAgbmFtZT86IHN0cmluZztcbiAgc2VyaWFsaXplPzogYm9vbGVhbiB8IFNlcmlhbGl6YXRpb25PcHRpb25zO1xuICBsb2dPbmx5PzogYm9vbGVhbjtcbiAgZmVhdHVyZXM/OiBhbnk7XG59XG5cbmV4cG9ydCBjb25zdCBTVE9SRV9ERVZUT09MU19DT05GSUcgPSBuZXcgSW5qZWN0aW9uVG9rZW48U3RvcmVEZXZ0b29sc0NvbmZpZz4oXG4gICdAbmdyeC9kZXZ0b29scyBPcHRpb25zJ1xuKTtcbmV4cG9ydCBjb25zdCBJTklUSUFMX09QVElPTlMgPSBuZXcgSW5qZWN0aW9uVG9rZW48U3RvcmVEZXZ0b29sc0NvbmZpZz4oXG4gICdAbmdyeC9kZXZ0b29scyBJbml0aWFsIENvbmZpZydcbik7XG5cbmV4cG9ydCB0eXBlIFN0b3JlRGV2dG9vbHNPcHRpb25zID1cbiAgfCBQYXJ0aWFsPFN0b3JlRGV2dG9vbHNDb25maWc+XG4gIHwgKCgpID0+IFBhcnRpYWw8U3RvcmVEZXZ0b29sc0NvbmZpZz4pO1xuIl19","export var PERFORM_ACTION = 'PERFORM_ACTION';\nexport var REFRESH = 'REFRESH';\nexport var RESET = 'RESET';\nexport var ROLLBACK = 'ROLLBACK';\nexport var COMMIT = 'COMMIT';\nexport var SWEEP = 'SWEEP';\nexport var TOGGLE_ACTION = 'TOGGLE_ACTION';\nexport var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nexport var JUMP_TO_STATE = 'JUMP_TO_STATE';\nexport var JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nexport var IMPORT_STATE = 'IMPORT_STATE';\nvar PerformAction = /** @class */ (function () {\n    function PerformAction(action, timestamp) {\n        this.action = action;\n        this.timestamp = timestamp;\n        this.type = PERFORM_ACTION;\n        if (typeof action.type === 'undefined') {\n            throw new Error('Actions may not have an undefined \"type\" property. ' +\n                'Have you misspelled a constant?');\n        }\n    }\n    return PerformAction;\n}());\nexport { PerformAction };\nvar Refresh = /** @class */ (function () {\n    function Refresh() {\n        this.type = REFRESH;\n    }\n    return Refresh;\n}());\nexport { Refresh };\nvar Reset = /** @class */ (function () {\n    function Reset(timestamp) {\n        this.timestamp = timestamp;\n        this.type = RESET;\n    }\n    return Reset;\n}());\nexport { Reset };\nvar Rollback = /** @class */ (function () {\n    function Rollback(timestamp) {\n        this.timestamp = timestamp;\n        this.type = ROLLBACK;\n    }\n    return Rollback;\n}());\nexport { Rollback };\nvar Commit = /** @class */ (function () {\n    function Commit(timestamp) {\n        this.timestamp = timestamp;\n        this.type = COMMIT;\n    }\n    return Commit;\n}());\nexport { Commit };\nvar Sweep = /** @class */ (function () {\n    function Sweep() {\n        this.type = SWEEP;\n    }\n    return Sweep;\n}());\nexport { Sweep };\nvar ToggleAction = /** @class */ (function () {\n    function ToggleAction(id) {\n        this.id = id;\n        this.type = TOGGLE_ACTION;\n    }\n    return ToggleAction;\n}());\nexport { ToggleAction };\nvar SetActionsActive = /** @class */ (function () {\n    function SetActionsActive(start, end, active) {\n        if (active === void 0) { active = true; }\n        this.start = start;\n        this.end = end;\n        this.active = active;\n        this.type = SET_ACTIONS_ACTIVE;\n    }\n    return SetActionsActive;\n}());\nexport { SetActionsActive };\nvar JumpToState = /** @class */ (function () {\n    function JumpToState(index) {\n        this.index = index;\n        this.type = JUMP_TO_STATE;\n    }\n    return JumpToState;\n}());\nexport { JumpToState };\nvar JumpToAction = /** @class */ (function () {\n    function JumpToAction(actionId) {\n        this.actionId = actionId;\n        this.type = JUMP_TO_ACTION;\n    }\n    return JumpToAction;\n}());\nexport { JumpToAction };\nvar ImportState = /** @class */ (function () {\n    function ImportState(nextLiftedState) {\n        this.nextLiftedState = nextLiftedState;\n        this.type = IMPORT_STATE;\n    }\n    return ImportState;\n}());\nexport { ImportState };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvc3JjL2FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxJQUFNLE9BQU8sR0FBRyxTQUFTLENBQUM7QUFDakMsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQztBQUM3QixNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyxJQUFNLE1BQU0sR0FBRyxRQUFRLENBQUM7QUFDL0IsTUFBTSxDQUFDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQztBQUM3QixNQUFNLENBQUMsSUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLG9CQUFvQixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxJQUFNLGFBQWEsR0FBRyxlQUFlLENBQUM7QUFDN0MsTUFBTSxDQUFDLElBQU0sY0FBYyxHQUFHLGdCQUFnQixDQUFDO0FBQy9DLE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFFM0MsSUFBQTtJQUdFLHVCQUFtQixNQUFjLEVBQVMsU0FBaUI7UUFBeEMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFTLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRjNDLGNBQWM7UUFHNUIsRUFBRSxDQUFDLENBQUMsT0FBTyxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FDYixxREFBcUQ7Z0JBQ25ELGlDQUFpQyxDQUNwQyxDQUFDO1NBQ0g7S0FDRjt3QkF4Qkg7SUF5QkMsQ0FBQTtBQVhELHlCQVdDO0FBRUQsSUFBQTs7b0JBQ2tCLE9BQU87O2tCQTVCekI7SUE2QkMsQ0FBQTtBQUZELG1CQUVDO0FBRUQsSUFBQTtJQUdFLGVBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLEtBQUs7S0FFbUI7Z0JBbEMxQztJQW1DQyxDQUFBO0FBSkQsaUJBSUM7QUFFRCxJQUFBO0lBR0Usa0JBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLFFBQVE7S0FFZ0I7bUJBeEMxQztJQXlDQyxDQUFBO0FBSkQsb0JBSUM7QUFFRCxJQUFBO0lBR0UsZ0JBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLE1BQU07S0FFa0I7aUJBOUMxQztJQStDQyxDQUFBO0FBSkQsa0JBSUM7QUFFRCxJQUFBOztvQkFDa0IsS0FBSzs7Z0JBbER2QjtJQW1EQyxDQUFBO0FBRkQsaUJBRUM7QUFFRCxJQUFBO0lBR0Usc0JBQW1CLEVBQVU7UUFBVixPQUFFLEdBQUYsRUFBRSxDQUFRO29CQUZiLGFBQWE7S0FFSTt1QkF4RG5DO0lBeURDLENBQUE7QUFKRCx3QkFJQztBQUVELElBQUE7SUFHRSwwQkFDUyxLQUFhLEVBQ2IsR0FBVyxFQUNYLE1BQXNCOzhDQUFBO1FBRnRCLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDYixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1gsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7b0JBTGYsa0JBQWtCO0tBTTlCOzJCQWxFTjtJQW1FQyxDQUFBO0FBUkQsNEJBUUM7QUFFRCxJQUFBO0lBR0UscUJBQW1CLEtBQWE7UUFBYixVQUFLLEdBQUwsS0FBSyxDQUFRO29CQUZoQixhQUFhO0tBRU87c0JBeEV0QztJQXlFQyxDQUFBO0FBSkQsdUJBSUM7QUFFRCxJQUFBO0lBR0Usc0JBQW1CLFFBQWdCO1FBQWhCLGFBQVEsR0FBUixRQUFRLENBQVE7b0JBRm5CLGNBQWM7S0FFUzt1QkE5RXpDO0lBK0VDLENBQUE7QUFKRCx3QkFJQztBQUVELElBQUE7SUFHRSxxQkFBbUIsZUFBb0I7UUFBcEIsb0JBQWUsR0FBZixlQUFlLENBQUs7b0JBRnZCLFlBQVk7S0FFZTtzQkFwRjdDO0lBcUZDLENBQUE7QUFKRCx1QkFJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcblxuZXhwb3J0IGNvbnN0IFBFUkZPUk1fQUNUSU9OID0gJ1BFUkZPUk1fQUNUSU9OJztcbmV4cG9ydCBjb25zdCBSRUZSRVNIID0gJ1JFRlJFU0gnO1xuZXhwb3J0IGNvbnN0IFJFU0VUID0gJ1JFU0VUJztcbmV4cG9ydCBjb25zdCBST0xMQkFDSyA9ICdST0xMQkFDSyc7XG5leHBvcnQgY29uc3QgQ09NTUlUID0gJ0NPTU1JVCc7XG5leHBvcnQgY29uc3QgU1dFRVAgPSAnU1dFRVAnO1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9BQ1RJT04gPSAnVE9HR0xFX0FDVElPTic7XG5leHBvcnQgY29uc3QgU0VUX0FDVElPTlNfQUNUSVZFID0gJ1NFVF9BQ1RJT05TX0FDVElWRSc7XG5leHBvcnQgY29uc3QgSlVNUF9UT19TVEFURSA9ICdKVU1QX1RPX1NUQVRFJztcbmV4cG9ydCBjb25zdCBKVU1QX1RPX0FDVElPTiA9ICdKVU1QX1RPX0FDVElPTic7XG5leHBvcnQgY29uc3QgSU1QT1JUX1NUQVRFID0gJ0lNUE9SVF9TVEFURSc7XG5cbmV4cG9ydCBjbGFzcyBQZXJmb3JtQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFBFUkZPUk1fQUNUSU9OO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhY3Rpb246IEFjdGlvbiwgcHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7XG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0FjdGlvbnMgbWF5IG5vdCBoYXZlIGFuIHVuZGVmaW5lZCBcInR5cGVcIiBwcm9wZXJ0eS4gJyArXG4gICAgICAgICAgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUmVmcmVzaCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBSRUZSRVNIO1xufVxuXG5leHBvcnQgY2xhc3MgUmVzZXQgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gUkVTRVQ7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgUm9sbGJhY2sgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gUk9MTEJBQ0s7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgQ29tbWl0IGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENPTU1JVDtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGltZXN0YW1wOiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTd2VlcCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTV0VFUDtcbn1cblxuZXhwb3J0IGNsYXNzIFRvZ2dsZUFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBUT0dHTEVfQUNUSU9OO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBpZDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgU2V0QWN0aW9uc0FjdGl2ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTRVRfQUNUSU9OU19BQ1RJVkU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHN0YXJ0OiBudW1iZXIsXG4gICAgcHVibGljIGVuZDogbnVtYmVyLFxuICAgIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW4gPSB0cnVlXG4gICkge31cbn1cblxuZXhwb3J0IGNsYXNzIEp1bXBUb1N0YXRlIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IEpVTVBfVE9fU1RBVEU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGluZGV4OiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBKdW1wVG9BY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gSlVNUF9UT19BQ1RJT047XG5cbiAgY29uc3RydWN0b3IocHVibGljIGFjdGlvbklkOiBudW1iZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBJbXBvcnRTdGF0ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBJTVBPUlRfU1RBVEU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIG5leHRMaWZ0ZWRTdGF0ZTogYW55KSB7fVxufVxuXG5leHBvcnQgdHlwZSBBbGwgPVxuICB8IFBlcmZvcm1BY3Rpb25cbiAgfCBSZWZyZXNoXG4gIHwgUmVzZXRcbiAgfCBSb2xsYmFja1xuICB8IENvbW1pdFxuICB8IFN3ZWVwXG4gIHwgVG9nZ2xlQWN0aW9uXG4gIHwgU2V0QWN0aW9uc0FjdGl2ZVxuICB8IEp1bXBUb1N0YXRlXG4gIHwgSnVtcFRvQWN0aW9uXG4gIHwgSW1wb3J0U3RhdGU7XG4iXX0=","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport * as Actions from './actions';\nexport function difference(first, second) {\n    return first.filter(function (item) { return second.indexOf(item) < 0; });\n}\n/**\n * Provides an app's view into the state of the lifted store.\n */\nexport function unliftState(liftedState) {\n    var computedStates = liftedState.computedStates, currentStateIndex = liftedState.currentStateIndex;\n    var state = computedStates[currentStateIndex].state;\n    return state;\n}\nexport function unliftAction(liftedState) {\n    return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nexport function liftAction(action) {\n    return new Actions.PerformAction(action, +Date.now());\n}\n/**\n * Sanitizes given actions with given function.\n */\nexport function sanitizeActions(actionSanitizer, actions) {\n    return Object.keys(actions).reduce(function (sanitizedActions, actionIdx) {\n        var idx = Number(actionIdx);\n        sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n        return sanitizedActions;\n    }, {});\n}\n/**\n * Sanitizes given action with given function.\n */\nexport function sanitizeAction(actionSanitizer, action, actionIdx) {\n    return __assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n}\n/**\n * Sanitizes given states with given function.\n */\nexport function sanitizeStates(stateSanitizer, states) {\n    return states.map(function (computedState, idx) {\n        return ({\n            state: sanitizeState(stateSanitizer, computedState.state, idx),\n            error: computedState.error,\n        });\n    });\n}\n/**\n * Sanitizes given state with given function.\n */\nexport function sanitizeState(stateSanitizer, state, stateIdx) {\n    return stateSanitizer(state, stateIdx);\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3NyYy91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdBLE9BQU8sS0FBSyxPQUFPLE1BQU0sV0FBVyxDQUFDO0FBU3JDLE1BQU0scUJBQXFCLEtBQVksRUFBRSxNQUFhO0lBQ3BELE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQXhCLENBQXdCLENBQUMsQ0FBQztDQUN2RDs7OztBQUtELE1BQU0sc0JBQXNCLFdBQXdCO0lBQzFDLElBQUEsMkNBQWMsRUFBRSxpREFBaUIsQ0FBaUI7SUFDbEQsSUFBQSwrQ0FBSyxDQUF1QztJQUVwRCxNQUFNLENBQUMsS0FBSyxDQUFDO0NBQ2Q7QUFFRCxNQUFNLHVCQUF1QixXQUF3QjtJQUNuRCxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO0NBQzlEOzs7O0FBS0QsTUFBTSxxQkFBcUIsTUFBYztJQUN2QyxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0NBQ3ZEOzs7O0FBS0QsTUFBTSwwQkFDSixlQUFnQyxFQUNoQyxPQUFzQjtJQUV0QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQ2hDLFVBQUMsZ0JBQWdCLEVBQUUsU0FBUztRQUMxQixJQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDOUIsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsY0FBYyxDQUNwQyxlQUFlLEVBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUNaLEdBQUcsQ0FDSixDQUFDO1FBQ0YsTUFBTSxDQUFDLGdCQUFnQixDQUFDO0tBQ3pCLEVBQ2MsRUFBRSxDQUNsQixDQUFDO0NBQ0g7Ozs7QUFLRCxNQUFNLHlCQUNKLGVBQWdDLEVBQ2hDLE1BQW9CLEVBQ3BCLFNBQWlCO0lBRWpCLE1BQU0sY0FDRCxNQUFNLElBQ1QsTUFBTSxFQUFFLGVBQWUsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxJQUNqRDtDQUNIOzs7O0FBS0QsTUFBTSx5QkFDSixjQUE4QixFQUM5QixNQUF1QjtJQUV2QixNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFDLGFBQWEsRUFBRSxHQUFHO1FBQUssT0FBQSxDQUFDO1lBQ3pDLEtBQUssRUFBRSxhQUFhLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDO1lBQzlELEtBQUssRUFBRSxhQUFhLENBQUMsS0FBSztTQUMzQixDQUFDO0lBSHdDLENBR3hDLENBQUMsQ0FBQztDQUNMOzs7O0FBS0QsTUFBTSx3QkFDSixjQUE4QixFQUM5QixLQUFVLEVBQ1YsUUFBZ0I7SUFFaEIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7Q0FDeEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCAqIGFzIEFjdGlvbnMgZnJvbSAnLi9hY3Rpb25zJztcbmltcG9ydCB7IEFjdGlvblNhbml0aXplciwgU3RhdGVTYW5pdGl6ZXIgfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQge1xuICBDb21wdXRlZFN0YXRlLFxuICBMaWZ0ZWRBY3Rpb24sXG4gIExpZnRlZEFjdGlvbnMsXG4gIExpZnRlZFN0YXRlLFxufSBmcm9tICcuL3JlZHVjZXInO1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZmVyZW5jZShmaXJzdDogYW55W10sIHNlY29uZDogYW55W10pIHtcbiAgcmV0dXJuIGZpcnN0LmZpbHRlcihpdGVtID0+IHNlY29uZC5pbmRleE9mKGl0ZW0pIDwgMCk7XG59XG5cbi8qKlxuICogUHJvdmlkZXMgYW4gYXBwJ3MgdmlldyBpbnRvIHRoZSBzdGF0ZSBvZiB0aGUgbGlmdGVkIHN0b3JlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5saWZ0U3RhdGUobGlmdGVkU3RhdGU6IExpZnRlZFN0YXRlKSB7XG4gIGNvbnN0IHsgY29tcHV0ZWRTdGF0ZXMsIGN1cnJlbnRTdGF0ZUluZGV4IH0gPSBsaWZ0ZWRTdGF0ZTtcbiAgY29uc3QgeyBzdGF0ZSB9ID0gY29tcHV0ZWRTdGF0ZXNbY3VycmVudFN0YXRlSW5kZXhdO1xuXG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVubGlmdEFjdGlvbihsaWZ0ZWRTdGF0ZTogTGlmdGVkU3RhdGUpOiBMaWZ0ZWRBY3Rpb24ge1xuICByZXR1cm4gbGlmdGVkU3RhdGUuYWN0aW9uc0J5SWRbbGlmdGVkU3RhdGUubmV4dEFjdGlvbklkIC0gMV07XG59XG5cbi8qKlxuICogTGlmdHMgYW4gYXBwJ3MgYWN0aW9uIGludG8gYW4gYWN0aW9uIG9uIHRoZSBsaWZ0ZWQgc3RvcmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaWZ0QWN0aW9uKGFjdGlvbjogQWN0aW9uKSB7XG4gIHJldHVybiBuZXcgQWN0aW9ucy5QZXJmb3JtQWN0aW9uKGFjdGlvbiwgK0RhdGUubm93KCkpO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBnaXZlbiBhY3Rpb25zIHdpdGggZ2l2ZW4gZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZUFjdGlvbnMoXG4gIGFjdGlvblNhbml0aXplcjogQWN0aW9uU2FuaXRpemVyLFxuICBhY3Rpb25zOiBMaWZ0ZWRBY3Rpb25zXG4pOiBMaWZ0ZWRBY3Rpb25zIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKGFjdGlvbnMpLnJlZHVjZShcbiAgICAoc2FuaXRpemVkQWN0aW9ucywgYWN0aW9uSWR4KSA9PiB7XG4gICAgICBjb25zdCBpZHggPSBOdW1iZXIoYWN0aW9uSWR4KTtcbiAgICAgIHNhbml0aXplZEFjdGlvbnNbaWR4XSA9IHNhbml0aXplQWN0aW9uKFxuICAgICAgICBhY3Rpb25TYW5pdGl6ZXIsXG4gICAgICAgIGFjdGlvbnNbaWR4XSxcbiAgICAgICAgaWR4XG4gICAgICApO1xuICAgICAgcmV0dXJuIHNhbml0aXplZEFjdGlvbnM7XG4gICAgfSxcbiAgICA8TGlmdGVkQWN0aW9ucz57fVxuICApO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBnaXZlbiBhY3Rpb24gd2l0aCBnaXZlbiBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplQWN0aW9uKFxuICBhY3Rpb25TYW5pdGl6ZXI6IEFjdGlvblNhbml0aXplcixcbiAgYWN0aW9uOiBMaWZ0ZWRBY3Rpb24sXG4gIGFjdGlvbklkeDogbnVtYmVyXG4pOiBMaWZ0ZWRBY3Rpb24ge1xuICByZXR1cm4ge1xuICAgIC4uLmFjdGlvbixcbiAgICBhY3Rpb246IGFjdGlvblNhbml0aXplcihhY3Rpb24uYWN0aW9uLCBhY3Rpb25JZHgpLFxuICB9O1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBnaXZlbiBzdGF0ZXMgd2l0aCBnaXZlbiBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplU3RhdGVzKFxuICBzdGF0ZVNhbml0aXplcjogU3RhdGVTYW5pdGl6ZXIsXG4gIHN0YXRlczogQ29tcHV0ZWRTdGF0ZVtdXG4pOiBDb21wdXRlZFN0YXRlW10ge1xuICByZXR1cm4gc3RhdGVzLm1hcCgoY29tcHV0ZWRTdGF0ZSwgaWR4KSA9PiAoe1xuICAgIHN0YXRlOiBzYW5pdGl6ZVN0YXRlKHN0YXRlU2FuaXRpemVyLCBjb21wdXRlZFN0YXRlLnN0YXRlLCBpZHgpLFxuICAgIGVycm9yOiBjb21wdXRlZFN0YXRlLmVycm9yLFxuICB9KSk7XG59XG5cbi8qKlxuICogU2FuaXRpemVzIGdpdmVuIHN0YXRlIHdpdGggZ2l2ZW4gZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZVN0YXRlKFxuICBzdGF0ZVNhbml0aXplcjogU3RhdGVTYW5pdGl6ZXIsXG4gIHN0YXRlOiBhbnksXG4gIHN0YXRlSWR4OiBudW1iZXJcbikge1xuICByZXR1cm4gc3RhdGVTYW5pdGl6ZXIoc3RhdGUsIHN0YXRlSWR4KTtcbn1cbiJdfQ==","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { empty, Observable } from 'rxjs';\nimport { filter, map, share, switchMap, takeUntil } from 'rxjs/operators';\nimport { PERFORM_ACTION } from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig, } from './config';\nimport { sanitizeAction, sanitizeActions, sanitizeState, sanitizeStates, unliftState, } from './utils';\nexport var ExtensionActionTypes = {\n    START: 'START',\n    DISPATCH: 'DISPATCH',\n    STOP: 'STOP',\n    ACTION: 'ACTION',\n};\nexport var REDUX_DEVTOOLS_EXTENSION = new InjectionToken('Redux Devtools Extension');\nvar DevtoolsExtension = /** @class */ (function () {\n    function DevtoolsExtension(devtoolsExtension, config) {\n        this.config = config;\n        this.instanceId = \"ngrx-store-\" + Date.now();\n        this.devtoolsExtension = devtoolsExtension;\n        this.createActionStreams();\n    }\n    DevtoolsExtension.prototype.notify = function (action, state) {\n        if (!this.devtoolsExtension) {\n            return;\n        }\n        // Check to see if the action requires a full update of the liftedState.\n        // If it is a simple action generated by the user's app, only send the\n        // action and the current state (fast).\n        //\n        // A full liftedState update (slow: serializes the entire liftedState) is\n        // only required when:\n        //   a) redux-devtools-extension fires the @@Init action (ignored by\n        //      @ngrx/store-devtools)\n        //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n        //      or @ngrx/store/update-reducers)\n        //   c) the state has been recomputed due to time-traveling\n        //   d) any action that is not a PerformAction to err on the side of\n        //      caution.\n        if (action.type === PERFORM_ACTION) {\n            var currentState = unliftState(state);\n            var sanitizedState = this.config.stateSanitizer\n                ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                : currentState;\n            var sanitizedAction = this.config.actionSanitizer\n                ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                : action;\n            this.extensionConnection.send(sanitizedAction, sanitizedState);\n        }\n        else {\n            // Requires full state update\n            var sanitizedLiftedState = __assign({}, state, { actionsById: this.config.actionSanitizer\n                    ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                    : state.actionsById, computedStates: this.config.stateSanitizer\n                    ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                    : state.computedStates });\n            this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.instanceId, this.config), this.instanceId);\n        }\n    };\n    DevtoolsExtension.prototype.createChangesObservable = function () {\n        var _this = this;\n        if (!this.devtoolsExtension) {\n            return empty();\n        }\n        return new Observable(function (subscriber) {\n            var connection = _this.devtoolsExtension.connect(_this.getExtensionConfig(_this.instanceId, _this.config));\n            _this.extensionConnection = connection;\n            connection.init();\n            connection.subscribe(function (change) { return subscriber.next(change); });\n            return connection.unsubscribe;\n        });\n    };\n    DevtoolsExtension.prototype.createActionStreams = function () {\n        var _this = this;\n        // Listens to all changes based on our instanceId\n        var changes$ = this.createChangesObservable().pipe(share());\n        // Listen for the start action\n        var start$ = changes$.pipe(filter(function (change) { return change.type === ExtensionActionTypes.START; }));\n        // Listen for the stop action\n        var stop$ = changes$.pipe(filter(function (change) { return change.type === ExtensionActionTypes.STOP; }));\n        // Listen for lifted actions\n        var liftedActions$ = changes$.pipe(filter(function (change) { return change.type === ExtensionActionTypes.DISPATCH; }), map(function (change) { return _this.unwrapAction(change.payload); }));\n        // Listen for unlifted actions\n        var actions$ = changes$.pipe(filter(function (change) { return change.type === ExtensionActionTypes.ACTION; }), map(function (change) { return _this.unwrapAction(change.payload); }));\n        var actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n        var liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n        this.start$ = start$.pipe(takeUntil(stop$));\n        // Only take the action sources between the start/stop events\n        this.actions$ = this.start$.pipe(switchMap(function () { return actionsUntilStop$; }));\n        this.liftedActions$ = this.start$.pipe(switchMap(function () { return liftedUntilStop$; }));\n    };\n    DevtoolsExtension.prototype.unwrapAction = function (action) {\n        return typeof action === 'string' ? eval(\"(\" + action + \")\") : action;\n    };\n    DevtoolsExtension.prototype.getExtensionConfig = function (instanceId, config) {\n        var extensionOptions = {\n            instanceId: instanceId,\n            name: config.name,\n            features: config.features,\n            serialize: config.serialize,\n        };\n        if (config.maxAge !== false /* support === 0 */) {\n            extensionOptions.maxAge = config.maxAge;\n        }\n        return extensionOptions;\n    };\n    DevtoolsExtension.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    DevtoolsExtension.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [REDUX_DEVTOOLS_EXTENSION,] },] },\n        { type: StoreDevtoolsConfig, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n    ]; };\n    return DevtoolsExtension;\n}());\nexport { DevtoolsExtension };\n\n//# sourceMappingURL=data:application/json;base64,","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { UPDATE, INIT, } from '@ngrx/store';\nimport { difference, liftAction } from './utils';\nimport * as Actions from './actions';\nimport { PerformAction } from './actions';\nexport var INIT_ACTION = { type: INIT };\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(reducer, action, state, error, errorHandler) {\n    if (error) {\n        return {\n            state: state,\n            error: 'Interrupted by an error up the chain',\n        };\n    }\n    var nextState = state;\n    var nextError;\n    try {\n        nextState = reducer(state, action);\n    }\n    catch (err) {\n        nextError = err.toString();\n        errorHandler.handleError(err.stack || err);\n    }\n    return {\n        state: nextState,\n        error: nextError,\n    };\n}\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler) {\n    // Optimization: exit early and return the same reference\n    // if we know nothing could have changed.\n    if (minInvalidatedStateIndex >= computedStates.length &&\n        computedStates.length === stagedActionIds.length) {\n        return computedStates;\n    }\n    var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n    for (var i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {\n        var actionId = stagedActionIds[i];\n        var action = actionsById[actionId].action;\n        var previousEntry = nextComputedStates[i - 1];\n        var previousState = previousEntry ? previousEntry.state : committedState;\n        var previousError = previousEntry ? previousEntry.error : undefined;\n        var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n        var entry = shouldSkip\n            ? previousEntry\n            : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n        nextComputedStates.push(entry);\n    }\n    return nextComputedStates;\n}\nexport function liftInitialState(initialCommittedState, monitorReducer) {\n    return {\n        monitorState: monitorReducer(undefined, {}),\n        nextActionId: 1,\n        actionsById: { 0: liftAction(INIT_ACTION) },\n        stagedActionIds: [0],\n        skippedActionIds: [],\n        committedState: initialCommittedState,\n        currentStateIndex: 0,\n        computedStates: [],\n    };\n}\n/**\n * Creates a history state reducer from an app's reducer.\n */\nexport function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options) {\n    if (options === void 0) { options = {}; }\n    /**\n       * Manages how the history actions modify the history state.\n       */\n    return function (reducer) {\n        return function (liftedState, liftedAction) {\n            var _a = liftedState || initialLiftedState, monitorState = _a.monitorState, actionsById = _a.actionsById, nextActionId = _a.nextActionId, stagedActionIds = _a.stagedActionIds, skippedActionIds = _a.skippedActionIds, committedState = _a.committedState, currentStateIndex = _a.currentStateIndex, computedStates = _a.computedStates;\n            if (!liftedState) {\n                // Prevent mutating initialLiftedState\n                actionsById = Object.create(actionsById);\n            }\n            function commitExcessActions(n) {\n                // Auto-commits n-number of excess actions.\n                var excess = n;\n                var idsToDelete = stagedActionIds.slice(1, excess + 1);\n                for (var i = 0; i < idsToDelete.length; i++) {\n                    if (computedStates[i + 1].error) {\n                        // Stop if error is found. Commit actions up to error.\n                        excess = i;\n                        idsToDelete = stagedActionIds.slice(1, excess + 1);\n                        break;\n                    }\n                    else {\n                        delete actionsById[idsToDelete[i]];\n                    }\n                }\n                skippedActionIds = skippedActionIds.filter(function (id) { return idsToDelete.indexOf(id) === -1; });\n                stagedActionIds = __spread([0], stagedActionIds.slice(excess + 1));\n                committedState = computedStates[excess].state;\n                computedStates = computedStates.slice(excess);\n                currentStateIndex =\n                    currentStateIndex > excess ? currentStateIndex - excess : 0;\n            }\n            // By default, aggressively recompute every state whatever happens.\n            // This has O(n) performance, so we'll override this to a sensible\n            // value whenever we feel like we don't have to recompute the states.\n            var minInvalidatedStateIndex = 0;\n            switch (liftedAction.type) {\n                case Actions.RESET: {\n                    // Get back to the state the store was created with.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    committedState = initialCommittedState;\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case Actions.COMMIT: {\n                    // Consider the last committed state the new starting point.\n                    // Squash any staged actions into a single committed state.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    committedState = computedStates[currentStateIndex].state;\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case Actions.ROLLBACK: {\n                    // Forget about any staged actions.\n                    // Start again from the last committed state.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case Actions.TOGGLE_ACTION: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var actionId_1 = liftedAction.id;\n                    var index = skippedActionIds.indexOf(actionId_1);\n                    if (index === -1) {\n                        skippedActionIds = __spread([actionId_1], skippedActionIds);\n                    }\n                    else {\n                        skippedActionIds = skippedActionIds.filter(function (id) { return id !== actionId_1; });\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(actionId_1);\n                    break;\n                }\n                case Actions.SET_ACTIONS_ACTIVE: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var start = liftedAction.start, end = liftedAction.end, active = liftedAction.active;\n                    var actionIds = [];\n                    for (var i = start; i < end; i++)\n                        actionIds.push(i);\n                    if (active) {\n                        skippedActionIds = difference(skippedActionIds, actionIds);\n                    }\n                    else {\n                        skippedActionIds = __spread(skippedActionIds, actionIds);\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                    break;\n                }\n                case Actions.JUMP_TO_STATE: {\n                    // Without recomputing anything, move the pointer that tell us\n                    // which state is considered the current one. Useful for sliders.\n                    currentStateIndex = liftedAction.index;\n                    // Optimization: we know the history has not changed.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case Actions.JUMP_TO_ACTION: {\n                    // Jumps to a corresponding state to a specific action.\n                    // Useful when filtering actions.\n                    var index = stagedActionIds.indexOf(liftedAction.actionId);\n                    if (index !== -1)\n                        currentStateIndex = index;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case Actions.SWEEP: {\n                    // Forget any actions that are currently being skipped.\n                    stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                    skippedActionIds = [];\n                    currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                    break;\n                }\n                case Actions.PERFORM_ACTION: {\n                    // Auto-commit as new actions come in.\n                    if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                        commitExcessActions(1);\n                    }\n                    if (currentStateIndex === stagedActionIds.length - 1) {\n                        currentStateIndex++;\n                    }\n                    var actionId = nextActionId++;\n                    // Mutation! This is the hottest path, and we optimize on purpose.\n                    // It is safe because we set a new key in a cache dictionary.\n                    actionsById[actionId] = liftedAction;\n                    stagedActionIds = __spread(stagedActionIds, [actionId]);\n                    // Optimization: we know that only the new action needs computing.\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    break;\n                }\n                case Actions.IMPORT_STATE: {\n                    // Completely replace everything.\n                    (_b = liftedAction.nextLiftedState, monitorState = _b.monitorState, actionsById = _b.actionsById, nextActionId = _b.nextActionId, stagedActionIds = _b.stagedActionIds, skippedActionIds = _b.skippedActionIds, committedState = _b.committedState, currentStateIndex = _b.currentStateIndex, \n                    // prettier-ignore\n                    computedStates = _b.computedStates);\n                    break;\n                }\n                case INIT: {\n                    // Always recompute states on hot reload and init.\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                case UPDATE: {\n                    var stateHasErrors = computedStates.filter(function (state) { return state.error; }).length > 0;\n                    if (stateHasErrors) {\n                        // Recompute all states\n                        minInvalidatedStateIndex = 0;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                    }\n                    else {\n                        if (currentStateIndex === stagedActionIds.length - 1) {\n                            currentStateIndex++;\n                        }\n                        // Add a new action to only recompute state\n                        var actionId = nextActionId++;\n                        actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                        stagedActionIds = __spread(stagedActionIds, [actionId]);\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                        // Recompute state history with latest reducer and update action\n                        computedStates = computedStates.map(function (cmp) {\n                            return (__assign({}, cmp, { state: reducer(cmp.state, liftedAction) }));\n                        });\n                        currentStateIndex = minInvalidatedStateIndex;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                        }\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                default: {\n                    // If the action is not recognized, it's a monitor action.\n                    // Optimization: a monitor action can't change history.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n            }\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n            monitorState = monitorReducer(monitorState, liftedAction);\n            return {\n                monitorState: monitorState,\n                actionsById: actionsById,\n                nextActionId: nextActionId,\n                stagedActionIds: stagedActionIds,\n                skippedActionIds: skippedActionIds,\n                committedState: committedState,\n                currentStateIndex: currentStateIndex,\n                computedStates: computedStates,\n            };\n            var _b;\n        };\n    };\n}\n\n//# sourceMappingURL=data:application/json;base64,","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Injectable, Inject, ErrorHandler } from '@angular/core';\nimport { ActionsSubject, INITIAL_STATE, ReducerObservable, ScannedActionsSubject, } from '@ngrx/store';\nimport { merge, queueScheduler, ReplaySubject, } from 'rxjs';\nimport { map, observeOn, scan, skip, withLatestFrom } from 'rxjs/operators';\nimport * as Actions from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig } from './config';\nimport { DevtoolsExtension } from './extension';\nimport { liftInitialState, liftReducerWith } from './reducer';\nimport { liftAction, unliftState } from './utils';\nvar DevtoolsDispatcher = /** @class */ (function (_super) {\n    __extends(DevtoolsDispatcher, _super);\n    function DevtoolsDispatcher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DevtoolsDispatcher.decorators = [\n        { type: Injectable }\n    ];\n    return DevtoolsDispatcher;\n}(ActionsSubject));\nexport { DevtoolsDispatcher };\nvar StoreDevtools = /** @class */ (function () {\n    function StoreDevtools(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n        var _this = this;\n        var liftedInitialState = liftInitialState(initialState, config.monitor);\n        var liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n        var liftedAction$ = merge(merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(map(liftAction)), dispatcher, extension.liftedActions$).pipe(observeOn(queueScheduler));\n        var liftedReducer$ = reducers$.pipe(map(liftReducer));\n        var liftedStateSubject = new ReplaySubject(1);\n        var liftedStateSubscription = liftedAction$\n            .pipe(withLatestFrom(liftedReducer$), scan(function (_a, _b) {\n            var liftedState = _a.state;\n            var _c = __read(_b, 2), action = _c[0], reducer = _c[1];\n            var reducedLiftedState = reducer(liftedState, action);\n            // // Extension should be sent the sanitized lifted state\n            extension.notify(action, reducedLiftedState);\n            return { state: reducedLiftedState, action: action };\n        }, { state: liftedInitialState, action: null }))\n            .subscribe(function (_a) {\n            var state = _a.state, action = _a.action;\n            liftedStateSubject.next(state);\n            if (action.type === Actions.PERFORM_ACTION) {\n                var unliftedAction = action.action;\n                scannedActions.next(unliftedAction);\n            }\n        });\n        var extensionStartSubscription = extension.start$.subscribe(function () {\n            _this.refresh();\n        });\n        var liftedState$ = liftedStateSubject.asObservable();\n        var state$ = liftedState$.pipe(map(unliftState));\n        this.extensionStartSubscription = extensionStartSubscription;\n        this.stateSubscription = liftedStateSubscription;\n        this.dispatcher = dispatcher;\n        this.liftedState = liftedState$;\n        this.state = state$;\n    }\n    StoreDevtools.prototype.dispatch = function (action) {\n        this.dispatcher.next(action);\n    };\n    StoreDevtools.prototype.next = function (action) {\n        this.dispatcher.next(action);\n    };\n    StoreDevtools.prototype.error = function (error) { };\n    StoreDevtools.prototype.complete = function () { };\n    StoreDevtools.prototype.performAction = function (action) {\n        this.dispatch(new Actions.PerformAction(action, +Date.now()));\n    };\n    StoreDevtools.prototype.refresh = function () {\n        this.dispatch(new Actions.Refresh());\n    };\n    StoreDevtools.prototype.reset = function () {\n        this.dispatch(new Actions.Reset(+Date.now()));\n    };\n    StoreDevtools.prototype.rollback = function () {\n        this.dispatch(new Actions.Rollback(+Date.now()));\n    };\n    StoreDevtools.prototype.commit = function () {\n        this.dispatch(new Actions.Commit(+Date.now()));\n    };\n    StoreDevtools.prototype.sweep = function () {\n        this.dispatch(new Actions.Sweep());\n    };\n    StoreDevtools.prototype.toggleAction = function (id) {\n        this.dispatch(new Actions.ToggleAction(id));\n    };\n    StoreDevtools.prototype.jumpToAction = function (actionId) {\n        this.dispatch(new Actions.JumpToAction(actionId));\n    };\n    StoreDevtools.prototype.jumpToState = function (index) {\n        this.dispatch(new Actions.JumpToState(index));\n    };\n    StoreDevtools.prototype.importState = function (nextLiftedState) {\n        this.dispatch(new Actions.ImportState(nextLiftedState));\n    };\n    StoreDevtools.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    StoreDevtools.ctorParameters = function () { return [\n        { type: DevtoolsDispatcher, },\n        { type: ActionsSubject, },\n        { type: ReducerObservable, },\n        { type: DevtoolsExtension, },\n        { type: ScannedActionsSubject, },\n        { type: ErrorHandler, },\n        { type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE,] },] },\n        { type: StoreDevtoolsConfig, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n    ]; };\n    return StoreDevtools;\n}());\nexport { StoreDevtools };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2dG9vbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3NyYy9kZXZ0b29scy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFhLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBR0wsY0FBYyxFQUNkLGFBQWEsRUFDYixpQkFBaUIsRUFDakIscUJBQXFCLEdBQ3RCLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFDTCxLQUFLLEVBR0wsY0FBYyxFQUNkLGFBQWEsR0FFZCxNQUFNLE1BQU0sQ0FBQztBQUNkLE9BQU8sRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUUsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNoRCxPQUFPLEVBQWUsZ0JBQWdCLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sU0FBUyxDQUFDOztJQUdWLHNDQUFjOzs7OztnQkFEckQsVUFBVTs7NkJBekJYO0VBMEJ3QyxjQUFjO1NBQXpDLGtCQUFrQjs7SUFVN0IsdUJBQ0UsVUFBOEIsRUFDOUIsUUFBd0IsRUFDeEIsU0FBNEIsRUFDNUIsU0FBNEIsRUFDNUIsY0FBcUMsRUFDckMsWUFBMEIsRUFDSCxjQUNRO1FBUmpDLGlCQTRFQztRQWxFQyxJQUFNLGtCQUFrQixHQUFHLGdCQUFnQixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDMUUsSUFBTSxXQUFXLEdBQUcsZUFBZSxDQUNqQyxZQUFZLEVBQ1osa0JBQWtCLEVBQ2xCLFlBQVksRUFDWixNQUFNLENBQUMsT0FBTyxFQUNkLE1BQU0sQ0FDUCxDQUFDO1FBRUYsSUFBTSxhQUFhLEdBQUcsS0FBSyxDQUN6QixLQUFLLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUNuRSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQ2hCLEVBQ0QsVUFBVSxFQUNWLFNBQVMsQ0FBQyxjQUFjLENBQ3pCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1FBRWxDLElBQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFFeEQsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGFBQWEsQ0FBYyxDQUFDLENBQUMsQ0FBQztRQUU3RCxJQUFNLHVCQUF1QixHQUFHLGFBQWE7YUFDMUMsSUFBSSxDQUNILGNBQWMsQ0FBQyxjQUFjLENBQUMsRUFDOUIsSUFBSSxDQU9GLFVBQUMsRUFBc0IsRUFBRSxFQUFpQjtnQkFBdkMsc0JBQWtCO2dCQUFJLGtCQUFpQixFQUFoQixjQUFNLEVBQUUsZUFBTztZQUN2QyxJQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7O1lBR3hELFNBQVMsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLGtCQUFrQixDQUFDLENBQUM7WUFFN0MsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUM7U0FDOUMsRUFDRCxFQUFFLEtBQUssRUFBRSxrQkFBa0IsRUFBRSxNQUFNLEVBQUUsSUFBVyxFQUFFLENBQ25ELENBQ0Y7YUFDQSxTQUFTLENBQUMsVUFBQyxFQUFpQjtnQkFBZixnQkFBSyxFQUFFLGtCQUFNO1lBQ3pCLGtCQUFrQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUUvQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO2dCQUMzQyxJQUFNLGNBQWMsR0FBSSxNQUFnQyxDQUFDLE1BQU0sQ0FBQztnQkFFaEUsY0FBYyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUNyQztTQUNGLENBQUMsQ0FBQztRQUVMLElBQU0sMEJBQTBCLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUM7WUFDNUQsS0FBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2hCLENBQUMsQ0FBQztRQUVILElBQU0sWUFBWSxHQUFHLGtCQUFrQixDQUFDLFlBQVksRUFFbkQsQ0FBQztRQUNGLElBQU0sTUFBTSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFFbkQsSUFBSSxDQUFDLDBCQUEwQixHQUFHLDBCQUEwQixDQUFDO1FBQzdELElBQUksQ0FBQyxpQkFBaUIsR0FBRyx1QkFBdUIsQ0FBQztRQUNqRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQztRQUNoQyxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztLQUNyQjtJQUVELGdDQUFRLEdBQVIsVUFBUyxNQUFjO1FBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzlCO0lBRUQsNEJBQUksR0FBSixVQUFLLE1BQVc7UUFDZCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUM5QjtJQUVELDZCQUFLLEdBQUwsVUFBTSxLQUFVLEtBQUk7SUFFcEIsZ0NBQVEsR0FBUixlQUFhO0lBRWIscUNBQWEsR0FBYixVQUFjLE1BQVc7UUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUMvRDtJQUVELCtCQUFPLEdBQVA7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7S0FDdEM7SUFFRCw2QkFBSyxHQUFMO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQy9DO0lBRUQsZ0NBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUNsRDtJQUVELDhCQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDaEQ7SUFFRCw2QkFBSyxHQUFMO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsb0NBQVksR0FBWixVQUFhLEVBQVU7UUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUM3QztJQUVELG9DQUFZLEdBQVosVUFBYSxRQUFnQjtRQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0tBQ25EO0lBRUQsbUNBQVcsR0FBWCxVQUFZLEtBQWE7UUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztLQUMvQztJQUVELG1DQUFXLEdBQVgsVUFBWSxlQUFvQjtRQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0tBQ3pEOztnQkF4SUYsVUFBVTs7OztnQkFGRSxrQkFBa0I7Z0JBdEI3QixjQUFjO2dCQUVkLGlCQUFpQjtnQkFlVixpQkFBaUI7Z0JBZHhCLHFCQUFxQjtnQkFQaUIsWUFBWTtnREEyQy9DLE1BQU0sU0FBQyxhQUFhO2dCQXZCTyxtQkFBbUIsdUJBd0I5QyxNQUFNLFNBQUMscUJBQXFCOzt3QkE1Q2pDOztTQTZCYSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBPbkRlc3Ryb3ksIEVycm9ySGFuZGxlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQWN0aW9uLFxuICBBY3Rpb25SZWR1Y2VyLFxuICBBY3Rpb25zU3ViamVjdCxcbiAgSU5JVElBTF9TVEFURSxcbiAgUmVkdWNlck9ic2VydmFibGUsXG4gIFNjYW5uZWRBY3Rpb25zU3ViamVjdCxcbn0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHtcbiAgbWVyZ2UsXG4gIE9ic2VydmFibGUsXG4gIE9ic2VydmVyLFxuICBxdWV1ZVNjaGVkdWxlcixcbiAgUmVwbGF5U3ViamVjdCxcbiAgU3Vic2NyaXB0aW9uLFxufSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgb2JzZXJ2ZU9uLCBzY2FuLCBza2lwLCB3aXRoTGF0ZXN0RnJvbSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0ICogYXMgQWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xuaW1wb3J0IHsgU1RPUkVfREVWVE9PTFNfQ09ORklHLCBTdG9yZURldnRvb2xzQ29uZmlnIH0gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHsgRGV2dG9vbHNFeHRlbnNpb24gfSBmcm9tICcuL2V4dGVuc2lvbic7XG5pbXBvcnQgeyBMaWZ0ZWRTdGF0ZSwgbGlmdEluaXRpYWxTdGF0ZSwgbGlmdFJlZHVjZXJXaXRoIH0gZnJvbSAnLi9yZWR1Y2VyJztcbmltcG9ydCB7IGxpZnRBY3Rpb24sIHVubGlmdFN0YXRlIH0gZnJvbSAnLi91dGlscyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZXZ0b29sc0Rpc3BhdGNoZXIgZXh0ZW5kcyBBY3Rpb25zU3ViamVjdCB7fVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3RvcmVEZXZ0b29scyBpbXBsZW1lbnRzIE9ic2VydmVyPGFueT4ge1xuICBwcml2YXRlIHN0YXRlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHByaXZhdGUgZXh0ZW5zaW9uU3RhcnRTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcHVibGljIGRpc3BhdGNoZXI6IEFjdGlvbnNTdWJqZWN0O1xuICBwdWJsaWMgbGlmdGVkU3RhdGU6IE9ic2VydmFibGU8TGlmdGVkU3RhdGU+O1xuICBwdWJsaWMgc3RhdGU6IE9ic2VydmFibGU8YW55PjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBkaXNwYXRjaGVyOiBEZXZ0b29sc0Rpc3BhdGNoZXIsXG4gICAgYWN0aW9ucyQ6IEFjdGlvbnNTdWJqZWN0LFxuICAgIHJlZHVjZXJzJDogUmVkdWNlck9ic2VydmFibGUsXG4gICAgZXh0ZW5zaW9uOiBEZXZ0b29sc0V4dGVuc2lvbixcbiAgICBzY2FubmVkQWN0aW9uczogU2Nhbm5lZEFjdGlvbnNTdWJqZWN0LFxuICAgIGVycm9ySGFuZGxlcjogRXJyb3JIYW5kbGVyLFxuICAgIEBJbmplY3QoSU5JVElBTF9TVEFURSkgaW5pdGlhbFN0YXRlOiBhbnksXG4gICAgQEluamVjdChTVE9SRV9ERVZUT09MU19DT05GSUcpIGNvbmZpZzogU3RvcmVEZXZ0b29sc0NvbmZpZ1xuICApIHtcbiAgICBjb25zdCBsaWZ0ZWRJbml0aWFsU3RhdGUgPSBsaWZ0SW5pdGlhbFN0YXRlKGluaXRpYWxTdGF0ZSwgY29uZmlnLm1vbml0b3IpO1xuICAgIGNvbnN0IGxpZnRSZWR1Y2VyID0gbGlmdFJlZHVjZXJXaXRoKFxuICAgICAgaW5pdGlhbFN0YXRlLFxuICAgICAgbGlmdGVkSW5pdGlhbFN0YXRlLFxuICAgICAgZXJyb3JIYW5kbGVyLFxuICAgICAgY29uZmlnLm1vbml0b3IsXG4gICAgICBjb25maWdcbiAgICApO1xuXG4gICAgY29uc3QgbGlmdGVkQWN0aW9uJCA9IG1lcmdlKFxuICAgICAgbWVyZ2UoYWN0aW9ucyQuYXNPYnNlcnZhYmxlKCkucGlwZShza2lwKDEpKSwgZXh0ZW5zaW9uLmFjdGlvbnMkKS5waXBlKFxuICAgICAgICBtYXAobGlmdEFjdGlvbilcbiAgICAgICksXG4gICAgICBkaXNwYXRjaGVyLFxuICAgICAgZXh0ZW5zaW9uLmxpZnRlZEFjdGlvbnMkXG4gICAgKS5waXBlKG9ic2VydmVPbihxdWV1ZVNjaGVkdWxlcikpO1xuXG4gICAgY29uc3QgbGlmdGVkUmVkdWNlciQgPSByZWR1Y2VycyQucGlwZShtYXAobGlmdFJlZHVjZXIpKTtcblxuICAgIGNvbnN0IGxpZnRlZFN0YXRlU3ViamVjdCA9IG5ldyBSZXBsYXlTdWJqZWN0PExpZnRlZFN0YXRlPigxKTtcblxuICAgIGNvbnN0IGxpZnRlZFN0YXRlU3Vic2NyaXB0aW9uID0gbGlmdGVkQWN0aW9uJFxuICAgICAgLnBpcGUoXG4gICAgICAgIHdpdGhMYXRlc3RGcm9tKGxpZnRlZFJlZHVjZXIkKSxcbiAgICAgICAgc2NhbjxcbiAgICAgICAgICBbYW55LCBBY3Rpb25SZWR1Y2VyPExpZnRlZFN0YXRlLCBBY3Rpb25zLkFsbD5dLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHN0YXRlOiBMaWZ0ZWRTdGF0ZTtcbiAgICAgICAgICAgIGFjdGlvbjogYW55O1xuICAgICAgICAgIH1cbiAgICAgICAgPihcbiAgICAgICAgICAoeyBzdGF0ZTogbGlmdGVkU3RhdGUgfSwgW2FjdGlvbiwgcmVkdWNlcl0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlZHVjZWRMaWZ0ZWRTdGF0ZSA9IHJlZHVjZXIobGlmdGVkU3RhdGUsIGFjdGlvbik7XG5cbiAgICAgICAgICAgIC8vIC8vIEV4dGVuc2lvbiBzaG91bGQgYmUgc2VudCB0aGUgc2FuaXRpemVkIGxpZnRlZCBzdGF0ZVxuICAgICAgICAgICAgZXh0ZW5zaW9uLm5vdGlmeShhY3Rpb24sIHJlZHVjZWRMaWZ0ZWRTdGF0ZSk7XG5cbiAgICAgICAgICAgIHJldHVybiB7IHN0YXRlOiByZWR1Y2VkTGlmdGVkU3RhdGUsIGFjdGlvbiB9O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgeyBzdGF0ZTogbGlmdGVkSW5pdGlhbFN0YXRlLCBhY3Rpb246IG51bGwgYXMgYW55IH1cbiAgICAgICAgKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgoeyBzdGF0ZSwgYWN0aW9uIH0pID0+IHtcbiAgICAgICAgbGlmdGVkU3RhdGVTdWJqZWN0Lm5leHQoc3RhdGUpO1xuXG4gICAgICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQWN0aW9ucy5QRVJGT1JNX0FDVElPTikge1xuICAgICAgICAgIGNvbnN0IHVubGlmdGVkQWN0aW9uID0gKGFjdGlvbiBhcyBBY3Rpb25zLlBlcmZvcm1BY3Rpb24pLmFjdGlvbjtcblxuICAgICAgICAgIHNjYW5uZWRBY3Rpb25zLm5leHQodW5saWZ0ZWRBY3Rpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgIGNvbnN0IGV4dGVuc2lvblN0YXJ0U3Vic2NyaXB0aW9uID0gZXh0ZW5zaW9uLnN0YXJ0JC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBsaWZ0ZWRTdGF0ZSQgPSBsaWZ0ZWRTdGF0ZVN1YmplY3QuYXNPYnNlcnZhYmxlKCkgYXMgT2JzZXJ2YWJsZTxcbiAgICAgIExpZnRlZFN0YXRlXG4gICAgPjtcbiAgICBjb25zdCBzdGF0ZSQgPSBsaWZ0ZWRTdGF0ZSQucGlwZShtYXAodW5saWZ0U3RhdGUpKTtcblxuICAgIHRoaXMuZXh0ZW5zaW9uU3RhcnRTdWJzY3JpcHRpb24gPSBleHRlbnNpb25TdGFydFN1YnNjcmlwdGlvbjtcbiAgICB0aGlzLnN0YXRlU3Vic2NyaXB0aW9uID0gbGlmdGVkU3RhdGVTdWJzY3JpcHRpb247XG4gICAgdGhpcy5kaXNwYXRjaGVyID0gZGlzcGF0Y2hlcjtcbiAgICB0aGlzLmxpZnRlZFN0YXRlID0gbGlmdGVkU3RhdGUkO1xuICAgIHRoaXMuc3RhdGUgPSBzdGF0ZSQ7XG4gIH1cblxuICBkaXNwYXRjaChhY3Rpb246IEFjdGlvbikge1xuICAgIHRoaXMuZGlzcGF0Y2hlci5uZXh0KGFjdGlvbik7XG4gIH1cblxuICBuZXh0KGFjdGlvbjogYW55KSB7XG4gICAgdGhpcy5kaXNwYXRjaGVyLm5leHQoYWN0aW9uKTtcbiAgfVxuXG4gIGVycm9yKGVycm9yOiBhbnkpIHt9XG5cbiAgY29tcGxldGUoKSB7fVxuXG4gIHBlcmZvcm1BY3Rpb24oYWN0aW9uOiBhbnkpIHtcbiAgICB0aGlzLmRpc3BhdGNoKG5ldyBBY3Rpb25zLlBlcmZvcm1BY3Rpb24oYWN0aW9uLCArRGF0ZS5ub3coKSkpO1xuICB9XG5cbiAgcmVmcmVzaCgpIHtcbiAgICB0aGlzLmRpc3BhdGNoKG5ldyBBY3Rpb25zLlJlZnJlc2goKSk7XG4gIH1cblxuICByZXNldCgpIHtcbiAgICB0aGlzLmRpc3BhdGNoKG5ldyBBY3Rpb25zLlJlc2V0KCtEYXRlLm5vdygpKSk7XG4gIH1cblxuICByb2xsYmFjaygpIHtcbiAgICB0aGlzLmRpc3BhdGNoKG5ldyBBY3Rpb25zLlJvbGxiYWNrKCtEYXRlLm5vdygpKSk7XG4gIH1cblxuICBjb21taXQoKSB7XG4gICAgdGhpcy5kaXNwYXRjaChuZXcgQWN0aW9ucy5Db21taXQoK0RhdGUubm93KCkpKTtcbiAgfVxuXG4gIHN3ZWVwKCkge1xuICAgIHRoaXMuZGlzcGF0Y2gobmV3IEFjdGlvbnMuU3dlZXAoKSk7XG4gIH1cblxuICB0b2dnbGVBY3Rpb24oaWQ6IG51bWJlcikge1xuICAgIHRoaXMuZGlzcGF0Y2gobmV3IEFjdGlvbnMuVG9nZ2xlQWN0aW9uKGlkKSk7XG4gIH1cblxuICBqdW1wVG9BY3Rpb24oYWN0aW9uSWQ6IG51bWJlcikge1xuICAgIHRoaXMuZGlzcGF0Y2gobmV3IEFjdGlvbnMuSnVtcFRvQWN0aW9uKGFjdGlvbklkKSk7XG4gIH1cblxuICBqdW1wVG9TdGF0ZShpbmRleDogbnVtYmVyKSB7XG4gICAgdGhpcy5kaXNwYXRjaChuZXcgQWN0aW9ucy5KdW1wVG9TdGF0ZShpbmRleCkpO1xuICB9XG5cbiAgaW1wb3J0U3RhdGUobmV4dExpZnRlZFN0YXRlOiBhbnkpIHtcbiAgICB0aGlzLmRpc3BhdGNoKG5ldyBBY3Rpb25zLkltcG9ydFN0YXRlKG5leHRMaWZ0ZWRTdGF0ZSkpO1xuICB9XG59XG4iXX0=","import { InjectionToken, NgModule } from '@angular/core';\nimport { ReducerManagerDispatcher, StateObservable } from '@ngrx/store';\nimport { INITIAL_OPTIONS, STORE_DEVTOOLS_CONFIG, } from './config';\nimport { DevtoolsDispatcher, StoreDevtools } from './devtools';\nimport { DevtoolsExtension, REDUX_DEVTOOLS_EXTENSION, } from './extension';\nexport var IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken('Is Devtools Extension or Monitor Present');\nexport function createIsExtensionOrMonitorPresent(extension, config) {\n    return Boolean(extension) || config.monitor !== noMonitor;\n}\nexport function createReduxDevtoolsExtension() {\n    var extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n    if (typeof window === 'object' &&\n        typeof window[extensionKey] !== 'undefined') {\n        return window[extensionKey];\n    }\n    else {\n        return null;\n    }\n}\nexport function createStateObservable(devtools) {\n    return devtools.state;\n}\nexport function noMonitor() {\n    return null;\n}\nexport var DEFAULT_NAME = 'NgRx Store DevTools';\nexport function createConfig(_options) {\n    var DEFAULT_OPTIONS = {\n        maxAge: false,\n        monitor: noMonitor,\n        actionSanitizer: undefined,\n        stateSanitizer: undefined,\n        name: DEFAULT_NAME,\n        serialize: false,\n        logOnly: false,\n        features: false,\n    };\n    var options = typeof _options === 'function' ? _options() : _options;\n    var logOnly = options.logOnly\n        ? { pause: true, export: true, test: true }\n        : false;\n    var features = options.features || logOnly;\n    var config = Object.assign({}, DEFAULT_OPTIONS, { features: features }, options);\n    if (config.maxAge && config.maxAge < 2) {\n        throw new Error(\"Devtools 'maxAge' cannot be less than 2, got \" + config.maxAge);\n    }\n    return config;\n}\nvar StoreDevtoolsModule = /** @class */ (function () {\n    function StoreDevtoolsModule() {\n    }\n    StoreDevtoolsModule.instrument = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: StoreDevtoolsModule,\n            providers: [\n                DevtoolsExtension,\n                DevtoolsDispatcher,\n                StoreDevtools,\n                {\n                    provide: INITIAL_OPTIONS,\n                    useValue: options,\n                },\n                {\n                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                    deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                    useFactory: createIsExtensionOrMonitorPresent,\n                },\n                {\n                    provide: REDUX_DEVTOOLS_EXTENSION,\n                    useFactory: createReduxDevtoolsExtension,\n                },\n                {\n                    provide: STORE_DEVTOOLS_CONFIG,\n                    deps: [INITIAL_OPTIONS],\n                    useFactory: createConfig,\n                },\n                {\n                    provide: StateObservable,\n                    deps: [StoreDevtools],\n                    useFactory: createStateObservable,\n                },\n                {\n                    provide: ReducerManagerDispatcher,\n                    useExisting: DevtoolsDispatcher,\n                },\n            ],\n        };\n    };\n    StoreDevtoolsModule.decorators = [\n        { type: NgModule, args: [{},] }\n    ];\n    return StoreDevtoolsModule;\n}());\nexport { StoreDevtoolsModule };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdHJ1bWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvc3JjL2luc3RydW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxlQUFlLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHeEUsT0FBTyxFQUNMLGVBQWUsRUFDZixxQkFBcUIsR0FHdEIsTUFBTSxVQUFVLENBQUM7QUFDbEIsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMvRCxPQUFPLEVBQ0wsaUJBQWlCLEVBQ2pCLHdCQUF3QixHQUV6QixNQUFNLGFBQWEsQ0FBQztBQUVyQixNQUFNLENBQUMsSUFBTSwrQkFBK0IsR0FBRyxJQUFJLGNBQWMsQ0FDL0QsMENBQTBDLENBQzNDLENBQUM7QUFFRixNQUFNLDRDQUNKLFNBQXdDLEVBQ3hDLE1BQTJCO0lBRTNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUM7Q0FDM0Q7QUFFRCxNQUFNO0lBQ0osSUFBTSxZQUFZLEdBQUcsOEJBQThCLENBQUM7SUFFcEQsRUFBRSxDQUFDLENBQ0QsT0FBTyxNQUFNLEtBQUssUUFBUTtRQUMxQixPQUFRLE1BQWMsQ0FBQyxZQUFZLENBQUMsS0FBSyxXQUMzQyxDQUFDLENBQUMsQ0FBQztRQUNELE1BQU0sQ0FBRSxNQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDdEM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNOLE1BQU0sQ0FBQyxJQUFJLENBQUM7S0FDYjtDQUNGO0FBRUQsTUFBTSxnQ0FDSixRQUF1QjtJQUV2QixNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztDQUN2QjtBQUVELE1BQU07SUFDSixNQUFNLENBQUMsSUFBSSxDQUFDO0NBQ2I7QUFFRCxNQUFNLENBQUMsSUFBTSxZQUFZLEdBQUcscUJBQXFCLENBQUM7QUFFbEQsTUFBTSx1QkFDSixRQUE4QjtJQUU5QixJQUFNLGVBQWUsR0FBd0I7UUFDM0MsTUFBTSxFQUFFLEtBQUs7UUFDYixPQUFPLEVBQUUsU0FBUztRQUNsQixlQUFlLEVBQUUsU0FBUztRQUMxQixjQUFjLEVBQUUsU0FBUztRQUN6QixJQUFJLEVBQUUsWUFBWTtRQUNsQixTQUFTLEVBQUUsS0FBSztRQUNoQixPQUFPLEVBQUUsS0FBSztRQUNkLFFBQVEsRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFFRixJQUFJLE9BQU8sR0FBRyxPQUFPLFFBQVEsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7SUFDckUsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU87UUFDN0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7UUFDM0MsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNWLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksT0FBTyxDQUFDO0lBQzdDLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLGVBQWUsRUFBRSxFQUFFLFFBQVEsVUFBQSxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFekUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FDYixrREFBZ0QsTUFBTSxDQUFDLE1BQVEsQ0FDaEUsQ0FBQztLQUNIO0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQztDQUNmOzs7O0lBSVEsOEJBQVUsR0FBakIsVUFBa0IsT0FBa0M7UUFBbEMsd0JBQUEsRUFBQSxZQUFrQztRQUNsRCxNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFNBQVMsRUFBRTtnQkFDVCxpQkFBaUI7Z0JBQ2pCLGtCQUFrQjtnQkFDbEIsYUFBYTtnQkFDYjtvQkFDRSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsUUFBUSxFQUFFLE9BQU87aUJBQ2xCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSwrQkFBK0I7b0JBQ3hDLElBQUksRUFBRSxDQUFDLHdCQUF3QixFQUFFLHFCQUFxQixDQUFDO29CQUN2RCxVQUFVLEVBQUUsaUNBQWlDO2lCQUM5QztnQkFDRDtvQkFDRSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxVQUFVLEVBQUUsNEJBQTRCO2lCQUN6QztnQkFDRDtvQkFDRSxPQUFPLEVBQUUscUJBQXFCO29CQUM5QixJQUFJLEVBQUUsQ0FBQyxlQUFlLENBQUM7b0JBQ3ZCLFVBQVUsRUFBRSxZQUFZO2lCQUN6QjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO29CQUNyQixVQUFVLEVBQUUscUJBQXFCO2lCQUNsQztnQkFDRDtvQkFDRSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxXQUFXLEVBQUUsa0JBQWtCO2lCQUNoQzthQUNGO1NBQ0YsQ0FBQztLQUNIOztnQkF0Q0YsUUFBUSxTQUFDLEVBQUU7OzhCQW5GWjs7U0FvRmEsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWR1Y2VyTWFuYWdlckRpc3BhdGNoZXIsIFN0YXRlT2JzZXJ2YWJsZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtcbiAgSU5JVElBTF9PUFRJT05TLFxuICBTVE9SRV9ERVZUT09MU19DT05GSUcsXG4gIFN0b3JlRGV2dG9vbHNDb25maWcsXG4gIFN0b3JlRGV2dG9vbHNPcHRpb25zLFxufSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgeyBEZXZ0b29sc0Rpc3BhdGNoZXIsIFN0b3JlRGV2dG9vbHMgfSBmcm9tICcuL2RldnRvb2xzJztcbmltcG9ydCB7XG4gIERldnRvb2xzRXh0ZW5zaW9uLFxuICBSRURVWF9ERVZUT09MU19FWFRFTlNJT04sXG4gIFJlZHV4RGV2dG9vbHNFeHRlbnNpb24sXG59IGZyb20gJy4vZXh0ZW5zaW9uJztcblxuZXhwb3J0IGNvbnN0IElTX0VYVEVOU0lPTl9PUl9NT05JVE9SX1BSRVNFTlQgPSBuZXcgSW5qZWN0aW9uVG9rZW48Ym9vbGVhbj4oXG4gICdJcyBEZXZ0b29scyBFeHRlbnNpb24gb3IgTW9uaXRvciBQcmVzZW50J1xuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUlzRXh0ZW5zaW9uT3JNb25pdG9yUHJlc2VudChcbiAgZXh0ZW5zaW9uOiBSZWR1eERldnRvb2xzRXh0ZW5zaW9uIHwgbnVsbCxcbiAgY29uZmlnOiBTdG9yZURldnRvb2xzQ29uZmlnXG4pIHtcbiAgcmV0dXJuIEJvb2xlYW4oZXh0ZW5zaW9uKSB8fCBjb25maWcubW9uaXRvciAhPT0gbm9Nb25pdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVkdXhEZXZ0b29sc0V4dGVuc2lvbigpIHtcbiAgY29uc3QgZXh0ZW5zaW9uS2V5ID0gJ19fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18nO1xuXG4gIGlmIChcbiAgICB0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJlxuICAgIHR5cGVvZiAod2luZG93IGFzIGFueSlbZXh0ZW5zaW9uS2V5XSAhPT0gJ3VuZGVmaW5lZCdcbiAgKSB7XG4gICAgcmV0dXJuICh3aW5kb3cgYXMgYW55KVtleHRlbnNpb25LZXldO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZU9ic2VydmFibGUoXG4gIGRldnRvb2xzOiBTdG9yZURldnRvb2xzXG4pOiBPYnNlcnZhYmxlPGFueT4ge1xuICByZXR1cm4gZGV2dG9vbHMuc3RhdGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBub01vbml0b3IoKTogbnVsbCB7XG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgREVGQVVMVF9OQU1FID0gJ05nUnggU3RvcmUgRGV2VG9vbHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29uZmlnKFxuICBfb3B0aW9uczogU3RvcmVEZXZ0b29sc09wdGlvbnNcbik6IFN0b3JlRGV2dG9vbHNDb25maWcge1xuICBjb25zdCBERUZBVUxUX09QVElPTlM6IFN0b3JlRGV2dG9vbHNDb25maWcgPSB7XG4gICAgbWF4QWdlOiBmYWxzZSxcbiAgICBtb25pdG9yOiBub01vbml0b3IsXG4gICAgYWN0aW9uU2FuaXRpemVyOiB1bmRlZmluZWQsXG4gICAgc3RhdGVTYW5pdGl6ZXI6IHVuZGVmaW5lZCxcbiAgICBuYW1lOiBERUZBVUxUX05BTUUsXG4gICAgc2VyaWFsaXplOiBmYWxzZSxcbiAgICBsb2dPbmx5OiBmYWxzZSxcbiAgICBmZWF0dXJlczogZmFsc2UsXG4gIH07XG5cbiAgbGV0IG9wdGlvbnMgPSB0eXBlb2YgX29wdGlvbnMgPT09ICdmdW5jdGlvbicgPyBfb3B0aW9ucygpIDogX29wdGlvbnM7XG4gIGNvbnN0IGxvZ09ubHkgPSBvcHRpb25zLmxvZ09ubHlcbiAgICA/IHsgcGF1c2U6IHRydWUsIGV4cG9ydDogdHJ1ZSwgdGVzdDogdHJ1ZSB9XG4gICAgOiBmYWxzZTtcbiAgY29uc3QgZmVhdHVyZXMgPSBvcHRpb25zLmZlYXR1cmVzIHx8IGxvZ09ubHk7XG4gIGNvbnN0IGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfT1BUSU9OUywgeyBmZWF0dXJlcyB9LCBvcHRpb25zKTtcblxuICBpZiAoY29uZmlnLm1heEFnZSAmJiBjb25maWcubWF4QWdlIDwgMikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBEZXZ0b29scyAnbWF4QWdlJyBjYW5ub3QgYmUgbGVzcyB0aGFuIDIsIGdvdCAke2NvbmZpZy5tYXhBZ2V9YFxuICAgICk7XG4gIH1cblxuICByZXR1cm4gY29uZmlnO1xufVxuXG5ATmdNb2R1bGUoe30pXG5leHBvcnQgY2xhc3MgU3RvcmVEZXZ0b29sc01vZHVsZSB7XG4gIHN0YXRpYyBpbnN0cnVtZW50KG9wdGlvbnM6IFN0b3JlRGV2dG9vbHNPcHRpb25zID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFN0b3JlRGV2dG9vbHNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgRGV2dG9vbHNFeHRlbnNpb24sXG4gICAgICAgIERldnRvb2xzRGlzcGF0Y2hlcixcbiAgICAgICAgU3RvcmVEZXZ0b29scyxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IElOSVRJQUxfT1BUSU9OUyxcbiAgICAgICAgICB1c2VWYWx1ZTogb3B0aW9ucyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IElTX0VYVEVOU0lPTl9PUl9NT05JVE9SX1BSRVNFTlQsXG4gICAgICAgICAgZGVwczogW1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTiwgU1RPUkVfREVWVE9PTFNfQ09ORklHXSxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBjcmVhdGVJc0V4dGVuc2lvbk9yTW9uaXRvclByZXNlbnQsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBSRURVWF9ERVZUT09MU19FWFRFTlNJT04sXG4gICAgICAgICAgdXNlRmFjdG9yeTogY3JlYXRlUmVkdXhEZXZ0b29sc0V4dGVuc2lvbixcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFNUT1JFX0RFVlRPT0xTX0NPTkZJRyxcbiAgICAgICAgICBkZXBzOiBbSU5JVElBTF9PUFRJT05TXSxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBjcmVhdGVDb25maWcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBTdGF0ZU9ic2VydmFibGUsXG4gICAgICAgICAgZGVwczogW1N0b3JlRGV2dG9vbHNdLFxuICAgICAgICAgIHVzZUZhY3Rvcnk6IGNyZWF0ZVN0YXRlT2JzZXJ2YWJsZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFJlZHVjZXJNYW5hZ2VyRGlzcGF0Y2hlcixcbiAgICAgICAgICB1c2VFeGlzdGluZzogRGV2dG9vbHNEaXNwYXRjaGVyLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9O1xuICB9XG59XG4iXX0=","/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\nexport * from './public_api';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBTUEsY0FBYyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERPIE5PVCBFRElUXG4gKlxuICogVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGF0IGJ1aWxkXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==","/**\n * Generated bundle index. Do not edit.\n */\nexport * from './index';\nexport { INITIAL_OPTIONS as ɵngrx_modules_store_devtools_store_devtools_i, STORE_DEVTOOLS_CONFIG as ɵngrx_modules_store_devtools_store_devtools_h } from './src/config';\nexport { DevtoolsDispatcher as ɵngrx_modules_store_devtools_store_devtools_g } from './src/devtools';\nexport { DevtoolsExtension as ɵngrx_modules_store_devtools_store_devtools_k, REDUX_DEVTOOLS_EXTENSION as ɵngrx_modules_store_devtools_store_devtools_j } from './src/extension';\nexport { IS_EXTENSION_OR_MONITOR_PRESENT as ɵngrx_modules_store_devtools_store_devtools_a, createConfig as ɵngrx_modules_store_devtools_store_devtools_f, createIsExtensionOrMonitorPresent as ɵngrx_modules_store_devtools_store_devtools_b, createReduxDevtoolsExtension as ɵngrx_modules_store_devtools_store_devtools_c, createStateObservable as ɵngrx_modules_store_devtools_store_devtools_d, noMonitor as ɵngrx_modules_store_devtools_store_devtools_e } from './src/instrument';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZGV2dG9vbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3N0b3JlLWRldnRvb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUM7QUFFeEIsT0FBTyxFQUFDLGVBQWUsSUFBSSw2Q0FBNkMsRUFBQyxxQkFBcUIsSUFBSSw2Q0FBNkMsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNySyxPQUFPLEVBQUMsa0JBQWtCLElBQUksNkNBQTZDLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRyxPQUFPLEVBQUMsaUJBQWlCLElBQUksNkNBQTZDLEVBQUMsd0JBQXdCLElBQUksNkNBQTZDLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3SyxPQUFPLEVBQUMsK0JBQStCLElBQUksNkNBQTZDLEVBQUMsWUFBWSxJQUFJLDZDQUE2QyxFQUFDLGlDQUFpQyxJQUFJLDZDQUE2QyxFQUFDLDRCQUE0QixJQUFJLDZDQUE2QyxFQUFDLHFCQUFxQixJQUFJLDZDQUE2QyxFQUFDLFNBQVMsSUFBSSw2Q0FBNkMsRUFBQyxNQUFNLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IHtJTklUSUFMX09QVElPTlMgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfaSxTVE9SRV9ERVZUT09MU19DT05GSUcgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfaH0gZnJvbSAnLi9zcmMvY29uZmlnJztcbmV4cG9ydCB7RGV2dG9vbHNEaXNwYXRjaGVyIGFzIMm1bmdyeF9tb2R1bGVzX3N0b3JlX2RldnRvb2xzX3N0b3JlX2RldnRvb2xzX2d9IGZyb20gJy4vc3JjL2RldnRvb2xzJztcbmV4cG9ydCB7RGV2dG9vbHNFeHRlbnNpb24gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfayxSRURVWF9ERVZUT09MU19FWFRFTlNJT04gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfan0gZnJvbSAnLi9zcmMvZXh0ZW5zaW9uJztcbmV4cG9ydCB7SVNfRVhURU5TSU9OX09SX01PTklUT1JfUFJFU0VOVCBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19hLGNyZWF0ZUNvbmZpZyBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19mLGNyZWF0ZUlzRXh0ZW5zaW9uT3JNb25pdG9yUHJlc2VudCBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19iLGNyZWF0ZVJlZHV4RGV2dG9vbHNFeHRlbnNpb24gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfYyxjcmVhdGVTdGF0ZU9ic2VydmFibGUgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfZCxub01vbml0b3IgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfZX0gZnJvbSAnLi9zcmMvaW5zdHJ1bWVudCc7Il19"],"names":["InjectionToken","__assign","this","Actions.PerformAction","empty","Observable","share","filter","map","takeUntil","switchMap","Injectable","Inject","__read","INIT","Actions.RESET","Actions.COMMIT","Actions.ROLLBACK","Actions.TOGGLE_ACTION","Actions.SET_ACTIONS_ACTIVE","Actions.JUMP_TO_STATE","Actions.JUMP_TO_ACTION","Actions.SWEEP","Actions.PERFORM_ACTION","Actions.IMPORT_STATE","UPDATE","ActionsSubject","merge","skip","observeOn","queueScheduler","ReplaySubject","withLatestFrom","scan","Actions.Refresh","Actions.Reset","Actions.Rollback","Actions.Commit","Actions.Sweep","Actions.ToggleAction","Actions.JumpToAction","Actions.JumpToState","Actions.ImportState","ReducerObservable","ScannedActionsSubject","ErrorHandler","INITIAL_STATE","StateObservable","ReducerManagerDispatcher","NgModule"],"mappings":"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"}