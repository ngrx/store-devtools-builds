{"version":3,"sources":["modules/store-devtools/store-devtools.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","storeDevtools","ng","core","rxjs","operators","this","store","StoreDevtoolsConfig","STORE_DEVTOOLS_CONFIG","InjectionToken","INITIAL_OPTIONS","noMonitor","DEFAULT_NAME","createConfig","_options","DEFAULT_OPTIONS","maxAge","monitor","actionSanitizer","undefined","stateSanitizer","name","serialize","logOnly","features","pause","lock","persist","export","import","jump","skip","reorder","dispatch","test","options","config","Object","assign","Error","PERFORM_ACTION","REFRESH","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","IMPORT_STATE","LOCK_CHANGES","PAUSE_RECORDING","PerformAction","action","timestamp","type","Refresh","Reset","Rollback","Commit","Sweep","ToggleAction","id","JumpToState","index","JumpToAction","actionId","ImportState","nextLiftedState","LockChanges","status","PauseRecording","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","difference","first","second","filter","item","indexOf","unliftState","liftedState","computedStates","currentStateIndex","state","liftAction","Date","now","sanitizeActions","actions","keys","reduce","sanitizedActions","actionIdx","idx","Number","sanitizeAction","sanitizeStates","states","map","computedState","sanitizeState","error","stateIdx","shouldFilterActions","predicate","actionsSafelist","actionsBlocklist","filterLiftedState","safelist","blocklist","filteredStagedActionIds","filteredActionsById","filteredComputedStates","stagedActionIds","forEach","liftedAction","actionsById","isActionFiltered","push","blockedlist","predicateMatch","safelistMatch","match","join","blocklistMatch","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","__","constructor","create","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","DevtoolsDispatcher","_super","Injectable","ActionsSubject","__assign$1","__decorate$1","__metadata","k","v","metadata","__param","paramIndex","decorator","ExtensionActionTypes","START","DISPATCH","STOP","ACTION","REDUX_DEVTOOLS_EXTENSION","DevtoolsExtension","devtoolsExtension","dispatcher","createActionStreams","notify","_this","isLocked","isPaused","currentState","sanitizedState_1","sanitizedAction_1","nextActionId","sendToReduxDevtools","extensionConnection","send","sanitizedLiftedState_1","getExtensionConfig","createChangesObservable","Observable","subscriber","connection","connect","init","subscribe","change","next","unsubscribe","empty","changes$","pipe","share","start$","stop$","liftedActions$","unwrapAction","payload","concatMap","UPDATE","timeout","debounceTime","catchError","of","take","actionsUntilStop$","takeUntil","liftedUntilStop$","actions$","switchMap","eval","extensionOptions","err","console","warn","Inject","__assign$2","__read","o","m","Symbol","iterator","e","ar","done","value","__spread","concat","INIT_ACTION","INIT","RECOMPUTE","RECOMPUTE_ACTION","computeNextEntry","reducer","errorHandler","nextError","nextState","toString","handleError","stack","recomputeStates","minInvalidatedStateIndex","committedState","skippedActionIds","nextComputedStates","slice","lastIncludedActionId","previousEntry","previousState","previousError","entry","liftInitialState","initialCommittedState","monitorReducer","monitorState","0","liftReducerWith","initialLiftedState","_a","_b","commitExcessActions","excess","idsToDelete","commitChanges","Infinity","actionId_1","start","end","active","actionIds","Math","min","lastState","cmp","__decorate$2","__metadata$1","__param$1","__read$1","StoreDevtools","reducers$","extension","scannedActions","initialState","liftedInitialState","liftReducer","liftedAction$","merge","asObservable","observeOn","queueScheduler","liftedReducer$","liftedStateSubject","ReplaySubject","liftedStateSubscription","withLatestFrom","scan","_c","reducedLiftedState","extensionStartSubscription","refresh","liftedState$","state$","stateSubscription","complete","performAction","reset","rollback","commit","sweep","toggleAction","jumpToAction","jumpToState","importState","lockChanges","pauseRecording","INITIAL_STATE","ReducerObservable","ScannedActionsSubject","ErrorHandler","__decorate$3","IS_EXTENSION_OR_MONITOR_PRESENT","createIsExtensionOrMonitorPresent","Boolean","createReduxDevtoolsExtension","window","createStateObservable","devtools","StoreDevtoolsModule","StoreDevtoolsModule_1","instrument","ngModule","providers","provide","useValue","deps","useFactory","StateObservable","ReducerManagerDispatcher","useExisting","NgModule","ɵngrx_modules_store_devtools_store_devtools_f","ɵngrx_modules_store_devtools_store_devtools_e","ɵngrx_modules_store_devtools_store_devtools_h","ɵngrx_modules_store_devtools_store_devtools_g","ɵngrx_modules_store_devtools_store_devtools_k","ɵngrx_modules_store_devtools_store_devtools_j","ɵngrx_modules_store_devtools_store_devtools_i","ɵngrx_modules_store_devtools_store_devtools_a","ɵngrx_modules_store_devtools_store_devtools_b","ɵngrx_modules_store_devtools_store_devtools_c","ɵngrx_modules_store_devtools_store_devtools_d"],"mappings":";;;;;CAKC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,eAAgBA,QAAQ,QAASA,QAAQ,mBACzI,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,uBAAwB,CAAC,UAAW,gBAAiB,cAAe,OAAQ,kBAAmBJ,GACzHA,IAAzBD,EAASA,GAAUO,MAAsBC,KAAOR,EAAOQ,MAAQ,GAAIR,EAAOQ,KAAKC,cAAgB,IAAKT,EAAOU,GAAGC,KAAMX,EAAO,eAAgBA,EAAOY,KAAMZ,EAAOY,KAAKC,WAHzK,CAIEC,KAAM,SAAUZ,QAASS,KAAMI,MAAOH,KAAMC,WAAa,aAEvD,IAAIG,oBACA,SAASA,wBAITC,sBAAwB,IAAIN,KAAKO,eAAe,0BAChDC,gBAAkB,IAAIR,KAAKO,eAAe,iCAC9C,SAASE,YACL,OAAO,KAEX,IAAIC,aAAe,sBACnB,SAASC,aAAaC,GAClB,IAAIC,EAAkB,CAClBC,QAAQ,EACRC,QAASN,UACTO,qBAAiBC,EACjBC,oBAAgBD,EAChBE,KAAMT,aACNU,WAAW,EACXC,SAAS,EAGTC,SAAU,CACNC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,OAAQ,SACRC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,MAAM,IAGVC,EAA8B,mBAAbrB,EAA0BA,IAAaA,EAKxDsB,EAASC,OAAOC,OAAO,GAAIvB,EAAiB,CAAES,SADnCW,EAAQX,YAHTW,EAAQZ,SAChB,CAAEE,OAAO,EAAMG,QAAQ,EAAMM,MAAM,IAEKnB,EAAgBS,UACUW,GACxE,GAAIC,EAAOpB,QAAUoB,EAAOpB,OAAS,EACjC,MAAM,IAAIuB,MAAM,gDAAkDH,EAAOpB,QAE7E,OAAOoB,EAGX,IAAII,eAAiB,iBACjBC,QAAU,UACVC,MAAQ,QACRC,SAAW,WACXC,OAAS,SACTC,MAAQ,QACRC,cAAgB,gBAChBC,mBAAqB,qBACrBC,cAAgB,gBAChBC,eAAiB,iBACjBC,aAAe,eACfC,aAAe,eACfC,gBAAkB,kBAClBC,cACA,SAASA,cAAcC,EAAQC,GAI3B,GAHAlD,KAAKiD,OAASA,EACdjD,KAAKkD,UAAYA,EACjBlD,KAAKmD,KAAOhB,oBACe,IAAhBc,EAAOE,KACd,MAAM,IAAIjB,MAAM,uFAMxBkB,QACA,SAASA,UACLpD,KAAKmD,KAAOf,SAIhBiB,MACA,SAASA,MAAMH,GACXlD,KAAKkD,UAAYA,EACjBlD,KAAKmD,KAAOd,OAIhBiB,SACA,SAASA,SAASJ,GACdlD,KAAKkD,UAAYA,EACjBlD,KAAKmD,KAAOb,UAIhBiB,OACA,SAASA,OAAOL,GACZlD,KAAKkD,UAAYA,EACjBlD,KAAKmD,KAAOZ,QAIhBiB,MACA,SAASA,QACLxD,KAAKmD,KAAOX,OAIhBiB,aACA,SAASA,aAAaC,GAClB1D,KAAK0D,GAAKA,EACV1D,KAAKmD,KAAOV,eAIhBkB,YACA,SAASA,YAAYC,GACjB5D,KAAK4D,MAAQA,EACb5D,KAAKmD,KAAOR,eAIhBkB,aACA,SAASA,aAAaC,GAClB9D,KAAK8D,SAAWA,EAChB9D,KAAKmD,KAAOP,gBAIhBmB,YACA,SAASA,YAAYC,GACjBhE,KAAKgE,gBAAkBA,EACvBhE,KAAKmD,KAAON,cAIhBoB,YACA,SAASA,YAAYC,GACjBlE,KAAKkE,OAASA,EACdlE,KAAKmD,KAAOL,cAIhBqB,eACA,SAASA,eAAeD,GACpBlE,KAAKkE,OAASA,EACdlE,KAAKmD,KAAOJ,iBAKhBqB,SAAgD,WAShD,OARAA,SAAWpC,OAAOC,QAAU,SAASoC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOvC,OAAO4C,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAM/E,KAAMyE,YAEhC,SAASO,WAAWC,EAAOC,GACvB,OAAOD,EAAME,OAAO,SAAUC,GAAQ,OAAOF,EAAOG,QAAQD,GAAQ,IAKxE,SAASE,YAAYC,GACjB,IAAIC,EAAiBD,EAAYC,eAAgBC,EAAoBF,EAAYE,kBAKjF,OAAIA,GAAqBD,EAAed,OACtBc,EAAeA,EAAed,OAAS,GAAGgB,MAGhDF,EAAeC,GAAmBC,MAMlD,SAASC,WAAW1C,GAChB,OAAO,IAAID,cAAcC,GAAS2C,KAAKC,OAK3C,SAASC,gBAAgBjF,EAAiBkF,GACtC,OAAO/D,OAAOgE,KAAKD,GAASE,OAAO,SAAUC,EAAkBC,GAC3D,IAAIC,EAAMC,OAAOF,GAEjB,OADAD,EAAiBE,GAAOE,eAAezF,EAAiBkF,EAAQK,GAAMA,GAC/DF,GACR,IAKP,SAASI,eAAezF,EAAiBoC,EAAQkD,GAC7C,OAAO/B,SAAS,GAAInB,EAAQ,CAAEA,OAAQpC,EAAgBoC,EAAOA,OAAQkD,KAKzE,SAASI,eAAexF,EAAgByF,GACpC,OAAOA,EAAOC,IAAI,SAAUC,EAAeN,GAAO,MAAO,CACrDV,MAAOiB,cAAc5F,EAAgB2F,EAAchB,MAAOU,GAC1DQ,MAAOF,EAAcE,SAM7B,SAASD,cAAc5F,EAAgB2E,EAAOmB,GAC1C,OAAO9F,EAAe2E,EAAOmB,GAKjC,SAASC,oBAAoB/E,GACzB,OAAOA,EAAOgF,WAAahF,EAAOiF,iBAAmBjF,EAAOkF,iBAKhE,SAASC,kBAAkB3B,EAAawB,EAAWI,EAAUC,GACzD,IAAIC,EAA0B,GAC1BC,EAAsB,GACtBC,EAAyB,GAa7B,OAZAhC,EAAYiC,gBAAgBC,QAAQ,SAAU/D,EAAI0C,GAC9C,IAAIsB,EAAenC,EAAYoC,YAAYjE,GACtCgE,IAEDtB,GACAwB,iBAAiBrC,EAAYC,eAAeY,GAAMsB,EAAcX,EAAWI,EAAUC,KAGzFE,EAAoB5D,GAAMgE,EAC1BL,EAAwBQ,KAAKnE,GAC7B6D,EAAuBM,KAAKtC,EAAYC,eAAeY,QAEpDhC,SAAS,GAAImB,EAAa,CAAEiC,gBAAiBH,EAAyBM,YAAaL,EAAqB9B,eAAgB+B,IAKnI,SAASK,iBAAiBlC,EAAOzC,EAAQ8D,EAAWI,EAAUW,GAC1D,IAAIC,EAAiBhB,IAAcA,EAAUrB,EAAOzC,EAAOA,QACvD+E,EAAgBb,IAAalE,EAAOA,OAAOE,KAAK8E,MAAMd,EAASe,KAAK,MACpEC,EAAiBL,GAAe7E,EAAOA,OAAOE,KAAK8E,MAAMH,EAAYI,KAAK,MAC9E,OAAOH,GAAkBC,GAAiBG,EAG9C,IAAIC,WACIC,cAAgB,SAAUC,EAAGC,GAI7B,OAHAF,cAAgBrG,OAAOwG,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI5D,KAAK4D,EAAOA,EAAE1D,eAAeF,KAAI2D,EAAE3D,GAAK4D,EAAE5D,MACpD2D,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASI,IAAO3I,KAAK4I,YAAcN,EADnCD,cAAcC,EAAGC,GAEjBD,EAAE1D,UAAkB,OAAN2D,EAAavG,OAAO6G,OAAON,IAAMI,EAAG/D,UAAY2D,EAAE3D,UAAW,IAAI+D,KAT/EN,cAYJS,WAAoD,SAAUC,EAAYC,EAAQC,EAAKC,GACvF,IAA2HZ,EAAvHa,EAAI1E,UAAUC,OAAQ0E,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOlH,OAAOqH,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAI3E,EAAIwE,EAAWrE,OAAS,EAAGH,GAAK,EAAGA,KAAS+D,EAAIS,EAAWxE,MAAI6E,GAAKD,EAAI,EAAIb,EAAEc,GAAKD,EAAI,EAAIb,EAAEU,EAAQC,EAAKG,GAAKd,EAAEU,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKpH,OAAOwH,eAAeR,EAAQC,EAAKG,GAAIA,GAE5DK,mBAAoC,SAAUC,GAE9C,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAO3E,MAAM/E,KAAMyE,YAAczE,KAK/D,OAPAoI,UAAUqB,EAAoBC,GAITZ,WAAW,CAC5BjJ,KAAK8J,cACNF,GAPgC,CASrCxJ,MAAM2J,gBAEJC,WAAkD,WASlD,OARAA,WAAa7H,OAAOC,QAAU,SAASoC,GACnC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOvC,OAAO4C,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEOU,MAAM/E,KAAMyE,YAE9BqF,aAAsD,SAAUf,EAAYC,EAAQC,EAAKC,GACzF,IAA2HZ,EAAvHa,EAAI1E,UAAUC,OAAQ0E,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOlH,OAAOqH,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAI3E,EAAIwE,EAAWrE,OAAS,EAAGH,GAAK,EAAGA,KAAS+D,EAAIS,EAAWxE,MAAI6E,GAAKD,EAAI,EAAIb,EAAEc,GAAKD,EAAI,EAAIb,EAAEU,EAAQC,EAAKG,GAAKd,EAAEU,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKpH,OAAOwH,eAAeR,EAAQC,EAAKG,GAAIA,GAE5DW,WAAoD,SAAUC,EAAGC,GACjE,GAAuB,iBAAZX,SAAoD,mBAArBA,QAAQY,SAAyB,OAAOZ,QAAQY,SAASF,EAAGC,IAEtGE,QAA8C,SAAUC,EAAYC,GACpE,OAAO,SAAUrB,EAAQC,GAAOoB,EAAUrB,EAAQC,EAAKmB,KAEvDE,qBAAuB,CACvBC,MAAO,QACPC,SAAU,WACVC,KAAM,OACNC,OAAQ,UAERC,yBAA2B,IAAI9K,KAAKO,eAAe,4BACnDwK,kBAAmC,WACnC,SAASA,kBAAkBC,EAAmB9I,EAAQ+I,GAClD9K,KAAK+B,OAASA,EACd/B,KAAK8K,WAAaA,EAClB9K,KAAK6K,kBAAoBA,EACzB7K,KAAK+K,sBA+HT,OA7HAH,kBAAkBhG,UAAUoG,OAAS,SAAU/H,EAAQyC,GACnD,IAAIuF,EAAQjL,KACZ,GAAKA,KAAK6K,kBAgBV,GAAI5H,EAAOE,OAAShB,eAAgB,CAChC,GAAIuD,EAAMwF,UAAYxF,EAAMyF,SACxB,OAEJ,IAAIC,EAAe9F,YAAYI,GAC/B,GAAIoB,oBAAoB9G,KAAK+B,SACzB6F,iBAAiBwD,EAAcnI,EAAQjD,KAAK+B,OAAOgF,UAAW/G,KAAK+B,OAAOiF,gBAAiBhH,KAAK+B,OAAOkF,kBACvG,OAEJ,IAAIoE,EAAmBrL,KAAK+B,OAAOhB,eAC7B4F,cAAc3G,KAAK+B,OAAOhB,eAAgBqK,EAAc1F,EAAMD,mBAC9D2F,EACFE,EAAoBtL,KAAK+B,OAAOlB,gBAC9ByF,eAAetG,KAAK+B,OAAOlB,gBAAiBoC,EAAQyC,EAAM6F,cAC1DtI,EACNjD,KAAKwL,oBAAoB,WACrB,OAAOP,EAAMQ,oBAAoBC,KAAKJ,EAAmBD,SAG5D,CAED,IAAIM,EAAyB9B,WAAW,GAAInE,EAAO,CAAE8B,gBAAiB9B,EAAM8B,gBAAiBG,YAAa3H,KAAK+B,OAAOlB,gBAC5GiF,gBAAgB9F,KAAK+B,OAAOlB,gBAAiB6E,EAAMiC,aACnDjC,EAAMiC,YAAanC,eAAgBxF,KAAK+B,OAAOhB,eAC/CwF,eAAevG,KAAK+B,OAAOhB,eAAgB2E,EAAMF,gBACjDE,EAAMF,iBAChBxF,KAAKwL,oBAAoB,WACrB,OAAOP,EAAMJ,kBAAkBa,KAAK,KAAMC,EAAwBV,EAAMW,mBAAmBX,EAAMlJ,aAI7G6I,kBAAkBhG,UAAUiH,wBAA0B,WAClD,IAAIZ,EAAQjL,KACZ,OAAKA,KAAK6K,kBAGH,IAAI/K,KAAKgM,WAAW,SAAUC,GACjC,IAAIC,EAAaf,EAAMJ,kBAAkBoB,QAAQhB,EAAMW,mBAAmBX,EAAMlJ,SAIhF,OAHAkJ,EAAMQ,oBAAsBO,EAC5BA,EAAWE,OACXF,EAAWG,UAAU,SAAUC,GAAU,OAAOL,EAAWM,KAAKD,KACzDJ,EAAWM,cAPXxM,KAAKyM,SAUpB3B,kBAAkBhG,UAAUmG,oBAAsB,WAC9C,IAAIE,EAAQjL,KAERwM,EAAWxM,KAAK6L,0BAA0BY,KAAK1M,UAAU2M,SAEzDC,EAASH,EAASC,KAAK1M,UAAUoF,OAAO,SAAUiH,GAAU,OAAOA,EAAOjJ,OAASmH,qBAAqBC,SAExGqC,EAAQJ,EAASC,KAAK1M,UAAUoF,OAAO,SAAUiH,GAAU,OAAOA,EAAOjJ,OAASmH,qBAAqBG,QAEvGoC,EAAiBL,EAASC,KAAK1M,UAAUoF,OAAO,SAAUiH,GAAU,OAAOA,EAAOjJ,OAASmH,qBAAqBE,WAAczK,UAAU0G,IAAI,SAAU2F,GAAU,OAAOnB,EAAM6B,aAAaV,EAAOW,WAAchN,UAAUiN,UAAU,SAAU/J,GAC7O,OAAIA,EAAOE,OAASN,aASToI,EAAMH,WAAW2B,KAAK1M,UAAUoF,OAAO,SAAUlC,GAAU,OAAOA,EAAOE,OAASlD,MAAMgN,SAAYlN,UAAUmN,QAAQ,KAAOnN,UAAUoN,aAAa,KAAOpN,UAAU0G,IAAI,WAAc,OAAOxD,IAAYlD,UAAUqN,WAAW,WAAc,OAAOtN,KAAKuN,GAAGpK,KAAalD,UAAUuN,KAAK,IAGxRxN,KAAKuN,GAAGpK,MAKnBsK,EADWf,EAASC,KAAK1M,UAAUoF,OAAO,SAAUiH,GAAU,OAAOA,EAAOjJ,OAASmH,qBAAqBI,SAAY3K,UAAU0G,IAAI,SAAU2F,GAAU,OAAOnB,EAAM6B,aAAaV,EAAOW,YAC5JN,KAAK1M,UAAUyN,UAAUZ,IACtDa,EAAmBZ,EAAeJ,KAAK1M,UAAUyN,UAAUZ,IAC/D5M,KAAK2M,OAASA,EAAOF,KAAK1M,UAAUyN,UAAUZ,IAE9C5M,KAAK0N,SAAW1N,KAAK2M,OAAOF,KAAK1M,UAAU4N,UAAU,WAAc,OAAOJ,KAC1EvN,KAAK6M,eAAiB7M,KAAK2M,OAAOF,KAAK1M,UAAU4N,UAAU,WAAc,OAAOF,MAEpF7C,kBAAkBhG,UAAUkI,aAAe,SAAU7J,QACjD,MAAyB,iBAAXA,OAAsB2K,KAAK,IAAM3K,OAAS,KAAOA,QAEnE2H,kBAAkBhG,UAAUgH,mBAAqB,SAAU7J,GACvD,IAAI8L,EAAmB,CACnB7M,KAAMe,EAAOf,KACbG,SAAUY,EAAOZ,SACjBF,UAAWc,EAAOd,WAKtB,OAHsB,IAAlBc,EAAOpB,SACPkN,EAAiBlN,OAASoB,EAAOpB,QAE9BkN,GAEXjD,kBAAkBhG,UAAU4G,oBAAsB,SAAUE,GACxD,IACIA,IAEJ,MAAOoC,GACHC,QAAQC,KAAK,uEAAwEF,KAG7FlD,kBAAoBd,aAAa,CAC7BjK,KAAK8J,aACLQ,QAAQ,EAAGtK,KAAKoO,OAAOtD,2BACvBR,QAAQ,EAAGtK,KAAKoO,OAAO9N,wBACvB4J,WAAW,oBAAqB,CAAC/H,OAAQ9B,oBACrCuJ,sBACLmB,mBACIA,kBApI2B,GAuIlCsD,WAAkD,WASlD,OARAA,WAAalM,OAAOC,QAAU,SAASoC,GACnC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOvC,OAAO4C,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEOU,MAAM/E,KAAMyE,YAE9B0J,OAA4C,SAAUC,EAAG5J,GACzD,IAAI6J,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBhF,EAAYoF,EAA3BjK,EAAI8J,EAAEvJ,KAAKsJ,GAAOK,EAAK,GAC3B,IACI,WAAc,IAANjK,GAAgBA,KAAM,MAAQ4E,EAAI7E,EAAE8H,QAAQqC,MAAMD,EAAG5G,KAAKuB,EAAEuF,OAExE,MAAO/H,GAAS4H,EAAI,CAAE5H,MAAOA,GAC7B,QACI,IACQwC,IAAMA,EAAEsF,OAASL,EAAI9J,EAAU,SAAI8J,EAAEvJ,KAAKP,GAElD,QAAU,GAAIiK,EAAG,MAAMA,EAAE5H,OAE7B,OAAO6H,GAEPG,SAAgD,WAChD,IAAK,IAAIH,EAAK,GAAIlK,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAKkK,EAAKA,EAAGI,OAAOV,OAAO1J,UAAUF,KACpF,OAAOkK,GAEPK,YAAc,CAAE3L,KAAMlD,MAAM8O,MAC5BC,UAAY,iCACZC,iBAAmB,CAAE9L,KAAM6L,WAI/B,SAASE,iBAAiBC,EAASlM,EAAQyC,EAAOkB,EAAOwI,GACrD,GAAIxI,EACA,MAAO,CACHlB,MAAOA,EACPkB,MAAO,wCAGf,IACIyI,EADAC,EAAY5J,EAEhB,IACI4J,EAAYH,EAAQzJ,EAAOzC,GAE/B,MAAO6K,GACHuB,EAAYvB,EAAIyB,WAChBH,EAAaI,YAAY1B,EAAI2B,OAAS3B,GAE1C,MAAO,CACHpI,MAAO4J,EACP1I,MAAOyI,GAMf,SAASK,gBAAgBlK,EAAgBmK,EAA0BR,EAASS,EAAgBjI,EAAaH,EAAiBqI,EAAkBT,EAAcjE,GAGtJ,GAAIwE,GAA4BnK,EAAed,QAC3Cc,EAAed,SAAW8C,EAAgB9C,OAC1C,OAAOc,EAMX,IAJA,IAAIsK,EAAqBtK,EAAeuK,MAAM,EAAGJ,GAG7CK,EAAuBxI,EAAgB9C,QAAUyG,EAAW,EAAI,GAC3D5G,EAAIoL,EAA0BpL,EAAIyL,EAAsBzL,IAAK,CAClE,IAAIT,EAAW0D,EAAgBjD,GAC3BtB,EAAS0E,EAAY7D,GAAUb,OAC/BgN,EAAgBH,EAAmBvL,EAAI,GACvC2L,EAAgBD,EAAgBA,EAAcvK,MAAQkK,EACtDO,EAAgBF,EAAgBA,EAAcrJ,WAAQ9F,EAEtDsP,EADaP,EAAiBxK,QAAQvB,IAAa,EAEjDmM,EACAf,iBAAiBC,EAASlM,EAAQiN,EAAeC,EAAef,GACtEU,EAAmBjI,KAAKuI,GAO5B,OAHIjF,GACA2E,EAAmBjI,KAAKrC,EAAeA,EAAed,OAAS,IAE5DoL,EAEX,SAASO,iBAAiBC,EAAuBC,GAC7C,MAAO,CACHC,aAAcD,OAAezP,EAAW,IACxCyK,aAAc,EACd5D,YAAa,CAAE8I,EAAG9K,WAAWmJ,cAC7BtH,gBAAiB,CAAC,GAClBqI,iBAAkB,GAClBD,eAAgBU,EAChB7K,kBAAmB,EACnBD,eAAgB,GAChB0F,UAAU,EACVC,UAAU,GAMlB,SAASuF,gBAAgBJ,EAAuBK,EAAoBvB,EAAcmB,EAAgBzO,GAK9F,YAJgB,IAAZA,IAAsBA,EAAU,IAI7B,SAAUqN,GAAW,OAAO,SAAU5J,EAAamC,GACtD,IAAIkJ,EACAC,EAAKtL,GAAeoL,EAAoBH,EAAeK,EAAGL,aAAc7I,EAAckJ,EAAGlJ,YAAa4D,EAAesF,EAAGtF,aAAc/D,EAAkBqJ,EAAGrJ,gBAAiBqI,EAAmBgB,EAAGhB,iBAAkBD,EAAiBiB,EAAGjB,eAAgBnK,EAAoBoL,EAAGpL,kBAAmBD,EAAiBqL,EAAGrL,eAAgB0F,EAAW2F,EAAG3F,SAAUC,EAAW0F,EAAG1F,SAKhX,SAAS2F,EAAoBtM,GAIzB,IAFA,IAAIuM,EAASvM,EACTwM,EAAcxJ,EAAgBuI,MAAM,EAAGgB,EAAS,GAC3CxM,EAAI,EAAGA,EAAIyM,EAAYtM,OAAQH,IAAK,CACzC,GAAIiB,EAAejB,EAAI,GAAGqC,MAAO,CAG7BoK,EAAcxJ,EAAgBuI,MAAM,GADpCgB,EAASxM,GACuC,GAChD,aAGOoD,EAAYqJ,EAAYzM,IAGvCsL,EAAmBA,EAAiB1K,OAAO,SAAUzB,GAAM,OAAoC,IAA7BsN,EAAY3L,QAAQ3B,KACtF8D,EAAkBoH,SAAS,CAAC,GAAIpH,EAAgBuI,MAAMgB,EAAS,IAC/DnB,EAAiBpK,EAAeuL,GAAQrL,MACxCF,EAAiBA,EAAeuK,MAAMgB,GACtCtL,EACIA,EAAoBsL,EAAStL,EAAoBsL,EAAS,EAElE,SAASE,IAGLtJ,EAAc,CAAE8I,EAAG9K,WAAWmJ,cAC9BvD,EAAe,EACf/D,EAAkB,CAAC,GACnBqI,EAAmB,GACnBD,EAAiBpK,EAAeC,GAAmBC,MACnDD,EAAoB,EACpBD,EAAiB,GAnChBD,IAEDoC,EAAc3F,OAAO6G,OAAOlB,IAsChC,IAAIgI,EAA2B,EAC/B,OAAQjI,EAAavE,MACjB,KAAKL,aACDoI,EAAWxD,EAAaxD,OACxByL,EAA2BuB,EAAAA,EAC3B,MAEJ,KAAKnO,iBACDoI,EAAWzD,EAAaxD,SAKpBsD,EAAkBoH,SAASpH,EAAiB,CAAC+D,IAC7C5D,EAAY4D,GAAgB,IAAIvI,cAAc,CAC1CG,KAAM,yBACNyC,KAAKC,OACT0F,IACAoE,EAA2BnI,EAAgB9C,OAAS,EACpDc,EAAiBA,EAAeqJ,OAAOrJ,EAAeA,EAAed,OAAS,IAC1Ee,IAAsB+B,EAAgB9C,OAAS,GAC/Ce,IAEJkK,EAA2BuB,EAAAA,GAG3BD,IAEJ,MAEJ,KAAK5O,MAEDsF,EAAc,CAAE8I,EAAG9K,WAAWmJ,cAC9BvD,EAAe,EACf/D,EAAkB,CAAC,GACnBqI,EAAmB,GACnBD,EAAiBU,EACjB7K,EAAoB,EACpBD,EAAiB,GACjB,MAEJ,KAAKjD,OACD0O,IACA,MAEJ,KAAK3O,SAGDqF,EAAc,CAAE8I,EAAG9K,WAAWmJ,cAC9BvD,EAAe,EACf/D,EAAkB,CAAC,GACnBqI,EAAmB,GACnBpK,EAAoB,EACpBD,EAAiB,GACjB,MAEJ,KAAK/C,cAGD,IAAI0O,EAAazJ,EAAahE,GAC1BE,EAAQiM,EAAiBxK,QAAQ8L,GAEjCtB,GADW,IAAXjM,EACmBgL,SAAS,CAACuC,GAAatB,GAGvBA,EAAiB1K,OAAO,SAAUzB,GAAM,OAAOA,IAAOyN,IAG7ExB,EAA2BnI,EAAgBnC,QAAQ8L,GACnD,MAEJ,KAAKzO,mBAKD,IAFA,IAAI0O,EAAQ1J,EAAa0J,MAAOC,EAAM3J,EAAa2J,IAAKC,EAAS5J,EAAa4J,OAC1EC,EAAY,GACPhN,EAAI6M,EAAO7M,EAAI8M,EAAK9M,IACzBgN,EAAU1J,KAAKtD,GAEfsL,EADAyB,EACmBtM,WAAW6K,EAAkB0B,GAG7B3C,SAASiB,EAAkB0B,GAGlD5B,EAA2BnI,EAAgBnC,QAAQ+L,GACnD,MAEJ,KAAKzO,cAGD8C,EAAoBiC,EAAa9D,MAEjC+L,EAA2BuB,EAAAA,EAC3B,MAEJ,KAAKtO,gBAIc,KADXgB,EAAQ4D,EAAgBnC,QAAQqC,EAAa5D,aAE7C2B,EAAoB7B,GACxB+L,EAA2BuB,EAAAA,EAC3B,MAEJ,KAAK1O,MAEDgF,EAAkBxC,WAAWwC,EAAiBqI,GAC9CA,EAAmB,GACnBpK,EAAoB+L,KAAKC,IAAIhM,EAAmB+B,EAAgB9C,OAAS,GACzE,MAEJ,KAAKvC,eAED,GAAI+I,EACA,OAAO3F,GAAeoL,EAE1B,GAAIxF,GACC5F,GACGqC,iBAAiBrC,EAAYC,eAAeC,GAAoBiC,EAAc5F,EAAQiF,UAAWjF,EAAQkF,gBAAiBlF,EAAQmF,kBAAoB,CAK1J,IAAIyK,EAAYlM,EAAeA,EAAed,OAAS,GACvDc,EAAiBoJ,SAASpJ,EAAeuK,MAAM,GAAI,GAAI,CACnDb,iBAAiBC,EAASzH,EAAazE,OAAQyO,EAAUhM,MAAOgM,EAAU9K,MAAOwI,KAErFO,EAA2BuB,EAAAA,EAC3B,MAGApP,EAAQnB,QAAU6G,EAAgB9C,SAAW5C,EAAQnB,QACrDmQ,EAAoB,GAEpBrL,IAAsB+B,EAAgB9C,OAAS,GAC/Ce,IAEJ,IAAI3B,EAAWyH,IAGf5D,EAAY7D,GAAY4D,EAGxBiI,GAFAnI,EAAkBoH,SAASpH,EAAiB,CAAC1D,KAEFY,OAAS,EACpD,MAEJ,KAAK7B,aAEmC2N,GAAnCI,EAAKlJ,EAAa1D,iBAAmCwM,aAAc7I,EAAciJ,EAAGjJ,YAAa4D,EAAeqF,EAAGrF,aAAc/D,EAAkBoJ,EAAGpJ,gBAAiBqI,EAAmBe,EAAGf,iBAAkBD,EAAiBgB,EAAGhB,eAAgBnK,EAAoBmL,EAAGnL,kBAAmBD,EAAiBoL,EAAGpL,eAAgB0F,EAAW0F,EAAG1F,SAEhVC,EAAWyF,EAAGzF,SACd,MAEJ,KAAKlL,MAAM8O,KAEPY,EAA2B,EACvB7N,EAAQnB,QAAU6G,EAAgB9C,OAAS5C,EAAQnB,SAEnD6E,EAAiBkK,gBAAgBlK,EAAgBmK,EAA0BR,EAASS,EAAgBjI,EAAaH,EAAiBqI,EAAkBT,EAAcjE,GAClK2F,EAAoBtJ,EAAgB9C,OAAS5C,EAAQnB,QAErDgP,EAA2BuB,EAAAA,GAE/B,MAEJ,KAAKjR,MAAMgN,OACczH,EAAeL,OAAO,SAAUO,GAAS,OAAOA,EAAMkB,QAAUlC,OAAS,GAG1FiL,EAA2B,EACvB7N,EAAQnB,QAAU6G,EAAgB9C,OAAS5C,EAAQnB,SAEnD6E,EAAiBkK,gBAAgBlK,EAAgBmK,EAA0BR,EAASS,EAAgBjI,EAAaH,EAAiBqI,EAAkBT,EAAcjE,GAClK2F,EAAoBtJ,EAAgB9C,OAAS5C,EAAQnB,QAErDgP,EAA2BuB,EAAAA,KAM1B/F,GAAaD,IACVzF,IAAsB+B,EAAgB9C,OAAS,GAC/Ce,IAGA3B,EAAWyH,IACf5D,EAAY7D,GAAY,IAAId,cAAc0E,GAAe9B,KAAKC,OAC9D2B,EAAkBoH,SAASpH,EAAiB,CAAC1D,IAE7C0B,EAAiBkK,gBAAgBlK,EADjCmK,EAA2BnI,EAAgB9C,OAAS,EACuByK,EAASS,EAAgBjI,EAAaH,EAAiBqI,EAAkBT,EAAcjE,IAGtK3F,EAAiBA,EAAeiB,IAAI,SAAUkL,GAAO,OAAQzD,WAAW,GAAIyD,EAAK,CAAEjM,MAAOyJ,EAAQwC,EAAIjM,MAAOuJ,sBAC7GxJ,EAAoB+B,EAAgB9C,OAAS,EACzC5C,EAAQnB,QAAU6G,EAAgB9C,OAAS5C,EAAQnB,QACnDmQ,EAAoBtJ,EAAgB9C,OAAS5C,EAAQnB,QAGzDgP,EAA2BuB,EAAAA,GAE/B,MAEJ,QAGIvB,EAA2BuB,EAAAA,EAMnC,OAFA1L,EAAiBkK,gBAAgBlK,EAAgBmK,EAA0BR,EAASS,EAAgBjI,EAAaH,EAAiBqI,EAAkBT,EAAcjE,GAE3J,CACHqF,aAFJA,EAAeD,EAAeC,EAAc9I,GAGxCC,YAAaA,EACb4D,aAAcA,EACd/D,gBAAiBA,EACjBqI,iBAAkBA,EAClBD,eAAgBA,EAChBnK,kBAAmBA,EACnBD,eAAgBA,EAChB0F,SAAUA,EACVC,SAAUA,KAKtB,IAAIyG,aAAsD,SAAU7I,EAAYC,EAAQC,EAAKC,GACzF,IAA2HZ,EAAvHa,EAAI1E,UAAUC,OAAQ0E,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOlH,OAAOqH,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAI3E,EAAIwE,EAAWrE,OAAS,EAAGH,GAAK,EAAGA,KAAS+D,EAAIS,EAAWxE,MAAI6E,GAAKD,EAAI,EAAIb,EAAEc,GAAKD,EAAI,EAAIb,EAAEU,EAAQC,EAAKG,GAAKd,EAAEU,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKpH,OAAOwH,eAAeR,EAAQC,EAAKG,GAAIA,GAE5DyI,aAAsD,SAAU7H,EAAGC,GACnE,GAAuB,iBAAZX,SAAoD,mBAArBA,QAAQY,SAAyB,OAAOZ,QAAQY,SAASF,EAAGC,IAEtG6H,UAAgD,SAAU1H,EAAYC,GACtE,OAAO,SAAUrB,EAAQC,GAAOoB,EAAUrB,EAAQC,EAAKmB,KAEvD2H,SAA8C,SAAU3D,EAAG5J,GAC3D,IAAI6J,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBhF,EAAYoF,EAA3BjK,EAAI8J,EAAEvJ,KAAKsJ,GAAOK,EAAK,GAC3B,IACI,WAAc,IAANjK,GAAgBA,KAAM,MAAQ4E,EAAI7E,EAAE8H,QAAQqC,MAAMD,EAAG5G,KAAKuB,EAAEuF,OAExE,MAAO/H,GAAS4H,EAAI,CAAE5H,MAAOA,GAC7B,QACI,IACQwC,IAAMA,EAAEsF,OAASL,EAAI9J,EAAU,SAAI8J,EAAEvJ,KAAKP,GAElD,QAAU,GAAIiK,EAAG,MAAMA,EAAE5H,OAE7B,OAAO6H,GAEPuD,cAA+B,WAC/B,SAASA,EAAclH,EAAY4C,EAAUuE,EAAWC,EAAWC,EAAgB/C,EAAcgD,EAAcrQ,GAC3G,IAAIkJ,EAAQjL,KACRqS,EAAqBhC,iBAAiB+B,EAAcrQ,EAAOnB,SAC3D0R,EAAc5B,gBAAgB0B,EAAcC,EAAoBjD,EAAcrN,EAAOnB,QAASmB,GAC9FwQ,EAAgBzS,KAAK0S,MAAM1S,KAAK0S,MAAM9E,EAAS+E,eAAehG,KAAK1M,UAAU2B,KAAK,IAAKwQ,EAAUxE,UAAUjB,KAAK1M,UAAU0G,IAAId,aAAcmF,EAAYoH,EAAUrF,gBAAgBJ,KAAK1M,UAAU2S,UAAU5S,KAAK6S,iBAChNC,EAAiBX,EAAUxF,KAAK1M,UAAU0G,IAAI6L,IAC9CO,EAAqB,IAAI/S,KAAKgT,cAAc,GAC5CC,EAA0BR,EACzB9F,KAAK1M,UAAUiT,eAAeJ,GAAiB7S,UAAUkT,KAAK,SAAUrC,EAAIC,GAC7E,IAAItL,EAAcqL,EAAGlL,MACjBwN,EAAKnB,SAASlB,EAAI,GAAI5N,EAASiQ,EAAG,GAClCC,GAAqBhE,EAD2B+D,EAAG,IACtB3N,EAAatC,GAQ9C,OALIA,EAAOE,OAAShB,gBAAkB2E,oBAAoB/E,KACtDoR,EAAqBjM,kBAAkBiM,EAAoBpR,EAAOgF,UAAWhF,EAAOiF,gBAAiBjF,EAAOkF,mBAGhHiL,EAAUlH,OAAO/H,EAAQkQ,GAClB,CAAEzN,MAAOyN,EAAoBlQ,OAAQA,IAC7C,CAAEyC,MAAO2M,EAAoBpP,OAAQ,QACnCkJ,UAAU,SAAUyE,GACrB,IAAsB3N,EAAS2N,EAAG3N,OAClC4P,EAAmBxG,KADPuE,EAAGlL,OAEXzC,EAAOE,OAAShB,gBAEhBgQ,EAAe9F,KADMpJ,EAAOA,UAIhCmQ,EAA6BlB,EAAUvF,OAAOR,UAAU,WACxDlB,EAAMoI,YAENC,EAAeT,EAAmBJ,eAClCc,EAASD,EAAa7G,KAAK1M,UAAU0G,IAAInB,cAC7CtF,KAAKoT,2BAA6BA,EAClCpT,KAAKwT,kBAAoBT,EACzB/S,KAAK8K,WAAaA,EAClB9K,KAAKuF,YAAc+N,EACnBtT,KAAK0F,MAAQ6N,EAyDjB,OAvDAvB,EAAcpN,UAAUhD,SAAW,SAAUqB,GACzCjD,KAAK8K,WAAWuB,KAAKpJ,IAEzB+O,EAAcpN,UAAUyH,KAAO,SAAUpJ,GACrCjD,KAAK8K,WAAWuB,KAAKpJ,IAEzB+O,EAAcpN,UAAUgC,MAAQ,SAAUA,KAC1CoL,EAAcpN,UAAU6O,SAAW,aACnCzB,EAAcpN,UAAU8O,cAAgB,SAAUzQ,GAC9CjD,KAAK4B,SAAS,IAAIoB,cAAcC,GAAS2C,KAAKC,SAElDmM,EAAcpN,UAAUyO,QAAU,WAC9BrT,KAAK4B,SAAS,IAAIwB,UAEtB4O,EAAcpN,UAAU+O,MAAQ,WAC5B3T,KAAK4B,SAAS,IAAIyB,OAAOuC,KAAKC,SAElCmM,EAAcpN,UAAUgP,SAAW,WAC/B5T,KAAK4B,SAAS,IAAI0B,UAAUsC,KAAKC,SAErCmM,EAAcpN,UAAUiP,OAAS,WAC7B7T,KAAK4B,SAAS,IAAI2B,QAAQqC,KAAKC,SAEnCmM,EAAcpN,UAAUkP,MAAQ,WAC5B9T,KAAK4B,SAAS,IAAI4B,QAEtBwO,EAAcpN,UAAUmP,aAAe,SAAUrQ,GAC7C1D,KAAK4B,SAAS,IAAI6B,aAAaC,KAEnCsO,EAAcpN,UAAUoP,aAAe,SAAUlQ,GAC7C9D,KAAK4B,SAAS,IAAIiC,aAAaC,KAEnCkO,EAAcpN,UAAUqP,YAAc,SAAUrQ,GAC5C5D,KAAK4B,SAAS,IAAI+B,YAAYC,KAElCoO,EAAcpN,UAAUsP,YAAc,SAAUlQ,GAC5ChE,KAAK4B,SAAS,IAAImC,YAAYC,KAElCgO,EAAcpN,UAAUuP,YAAc,SAAUjQ,GAC5ClE,KAAK4B,SAAS,IAAIqC,YAAYC,KAElC8N,EAAcpN,UAAUwP,eAAiB,SAAUlQ,GAC/ClE,KAAK4B,SAAS,IAAIuC,eAAeD,KAErB0N,aAAa,CACzB/R,KAAK8J,aACLmI,UAAU,EAAGjS,KAAKoO,OAAOhO,MAAMoU,gBAC/BvC,UAAU,EAAGjS,KAAKoO,OAAO9N,wBACzB0R,aAAa,oBAAqB,CAACpI,mBAC/BxJ,MAAM2J,eACN3J,MAAMqU,kBACN1J,kBACA3K,MAAMsU,sBACN1U,KAAK2U,aAAcxS,OAAQ9B,uBAChC8R,GA/F2B,GAmG9ByC,aAAsD,SAAU1L,EAAYC,EAAQC,EAAKC,GACzF,IAA2HZ,EAAvHa,EAAI1E,UAAUC,OAAQ0E,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOlH,OAAOqH,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAI3E,EAAIwE,EAAWrE,OAAS,EAAGH,GAAK,EAAGA,KAAS+D,EAAIS,EAAWxE,MAAI6E,GAAKD,EAAI,EAAIb,EAAEc,GAAKD,EAAI,EAAIb,EAAEU,EAAQC,EAAKG,GAAKd,EAAEU,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKpH,OAAOwH,eAAeR,EAAQC,EAAKG,GAAIA,GAE5DsL,gCAAkC,IAAI7U,KAAKO,eAAe,4CAC9D,SAASuU,kCAAkCzC,EAAWnQ,GAClD,OAAO6S,QAAQ1C,IAAcnQ,EAAOnB,UAAYN,UAEpD,SAASuU,+BAEL,MAAsB,iBAAXC,aACyB,IAAzBA,OAAmB,6BACnBA,OAAmB,6BAGnB,KAGf,SAASC,sBAAsBC,GAC3B,OAAOA,EAAStP,MAEpB,IAAIuP,oBAAqC,WACrC,SAASA,KAyCT,IAAIC,EAIJ,OA3CAA,EAAwBD,EACxBA,EAAoBE,WAAa,SAAUrT,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,IAC7B,CACHsT,SAAUF,EACVG,UAAW,CACPzK,kBACAnB,mBACAuI,cACA,CACIsD,QAASjV,gBACTkV,SAAUzT,GAEd,CACIwT,QAASZ,gCACTc,KAAM,CAAC7K,yBAA0BxK,uBACjCsV,WAAYd,mCAEhB,CACIW,QAAS3K,yBACT8K,WAAYZ,8BAEhB,CACIS,QAASnV,sBACTqV,KAAM,CAACnV,iBACPoV,WAAYjV,cAEhB,CACI8U,QAASrV,MAAMyV,gBACfF,KAAM,CAACxD,eACPyD,WAAYV,uBAEhB,CACIO,QAASrV,MAAM0V,yBACfC,YAAanM,uBAMPyL,EAAwBT,aAAa,CACvD5U,KAAKgW,SAAS,KACfZ,GA7CiC,GA2DxC7V,QAAQ0W,8CAAgDzV,gBACxDjB,QAAQ2W,8CAAgD5V,sBACxDf,QAAQ4W,8CAAgDxV,aACxDpB,QAAQ6W,8CAAgD3V,UACxDlB,QAAQ8W,8CAAgDzM,mBACxDrK,QAAQ+W,8CAAgDvL,kBACxDxL,QAAQgX,8CAAgDzL,yBACxDvL,QAAQiX,8CAAgD3B,gCACxDtV,QAAQkX,8CAAgD3B,kCACxDvV,QAAQmX,8CAAgD1B,6BACxDzV,QAAQoX,8CAAgDzB,sBACxD3V,QAAQ6V,oBAAsBA,oBAC9B7V,QAAQ4P,UAAYA,UACpB5P,QAAQ4S,cAAgBA,cACxB5S,QAAQc,oBAAsBA,oBAE9B8B,OAAOwH,eAAepK,QAAS,aAAc,CAAEuP,OAAO","sourcesContent":["/**\n * @license NgRx 7.4.0+18.sha-f185d1a\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/store-devtools', ['exports', '@angular/core', '@ngrx/store', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.storeDevtools = {}), global.ng.core, global['@ngrx/store'], global.rxjs, global.rxjs.operators));\n}(this, function (exports, core, store, rxjs, operators) { 'use strict';\n\n    var StoreDevtoolsConfig = /** @class */ (function () {\n        function StoreDevtoolsConfig() {\n        }\n        return StoreDevtoolsConfig;\n    }());\n    var STORE_DEVTOOLS_CONFIG = new core.InjectionToken('@ngrx/devtools Options');\n    var INITIAL_OPTIONS = new core.InjectionToken('@ngrx/devtools Initial Config');\n    function noMonitor() {\n        return null;\n    }\n    var DEFAULT_NAME = 'NgRx Store DevTools';\n    function createConfig(_options) {\n        var DEFAULT_OPTIONS = {\n            maxAge: false,\n            monitor: noMonitor,\n            actionSanitizer: undefined,\n            stateSanitizer: undefined,\n            name: DEFAULT_NAME,\n            serialize: false,\n            logOnly: false,\n            // Add all features explicitely. This prevent buggy behavior for\n            // options like \"lock\" which might otherwise not show up.\n            features: {\n                pause: true,\n                lock: true,\n                persist: true,\n                export: true,\n                import: 'custom',\n                jump: true,\n                skip: true,\n                reorder: true,\n                dispatch: true,\n                test: true,\n            },\n        };\n        var options = typeof _options === 'function' ? _options() : _options;\n        var logOnly = options.logOnly\n            ? { pause: true, export: true, test: true }\n            : false;\n        var features = options.features || logOnly || DEFAULT_OPTIONS.features;\n        var config = Object.assign({}, DEFAULT_OPTIONS, { features: features }, options);\n        if (config.maxAge && config.maxAge < 2) {\n            throw new Error(\"Devtools 'maxAge' cannot be less than 2, got \" + config.maxAge);\n        }\n        return config;\n    }\n\n    var PERFORM_ACTION = 'PERFORM_ACTION';\n    var REFRESH = 'REFRESH';\n    var RESET = 'RESET';\n    var ROLLBACK = 'ROLLBACK';\n    var COMMIT = 'COMMIT';\n    var SWEEP = 'SWEEP';\n    var TOGGLE_ACTION = 'TOGGLE_ACTION';\n    var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\n    var JUMP_TO_STATE = 'JUMP_TO_STATE';\n    var JUMP_TO_ACTION = 'JUMP_TO_ACTION';\n    var IMPORT_STATE = 'IMPORT_STATE';\n    var LOCK_CHANGES = 'LOCK_CHANGES';\n    var PAUSE_RECORDING = 'PAUSE_RECORDING';\n    var PerformAction = /** @class */ (function () {\n        function PerformAction(action, timestamp) {\n            this.action = action;\n            this.timestamp = timestamp;\n            this.type = PERFORM_ACTION;\n            if (typeof action.type === 'undefined') {\n                throw new Error('Actions may not have an undefined \"type\" property. ' +\n                    'Have you misspelled a constant?');\n            }\n        }\n        return PerformAction;\n    }());\n    var Refresh = /** @class */ (function () {\n        function Refresh() {\n            this.type = REFRESH;\n        }\n        return Refresh;\n    }());\n    var Reset = /** @class */ (function () {\n        function Reset(timestamp) {\n            this.timestamp = timestamp;\n            this.type = RESET;\n        }\n        return Reset;\n    }());\n    var Rollback = /** @class */ (function () {\n        function Rollback(timestamp) {\n            this.timestamp = timestamp;\n            this.type = ROLLBACK;\n        }\n        return Rollback;\n    }());\n    var Commit = /** @class */ (function () {\n        function Commit(timestamp) {\n            this.timestamp = timestamp;\n            this.type = COMMIT;\n        }\n        return Commit;\n    }());\n    var Sweep = /** @class */ (function () {\n        function Sweep() {\n            this.type = SWEEP;\n        }\n        return Sweep;\n    }());\n    var ToggleAction = /** @class */ (function () {\n        function ToggleAction(id) {\n            this.id = id;\n            this.type = TOGGLE_ACTION;\n        }\n        return ToggleAction;\n    }());\n    var JumpToState = /** @class */ (function () {\n        function JumpToState(index) {\n            this.index = index;\n            this.type = JUMP_TO_STATE;\n        }\n        return JumpToState;\n    }());\n    var JumpToAction = /** @class */ (function () {\n        function JumpToAction(actionId) {\n            this.actionId = actionId;\n            this.type = JUMP_TO_ACTION;\n        }\n        return JumpToAction;\n    }());\n    var ImportState = /** @class */ (function () {\n        function ImportState(nextLiftedState) {\n            this.nextLiftedState = nextLiftedState;\n            this.type = IMPORT_STATE;\n        }\n        return ImportState;\n    }());\n    var LockChanges = /** @class */ (function () {\n        function LockChanges(status) {\n            this.status = status;\n            this.type = LOCK_CHANGES;\n        }\n        return LockChanges;\n    }());\n    var PauseRecording = /** @class */ (function () {\n        function PauseRecording(status) {\n            this.status = status;\n            this.type = PAUSE_RECORDING;\n        }\n        return PauseRecording;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || function () {\n        __assign = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function difference(first, second) {\n        return first.filter(function (item) { return second.indexOf(item) < 0; });\n    }\n    /**\n     * Provides an app's view into the state of the lifted store.\n     */\n    function unliftState(liftedState) {\n        var computedStates = liftedState.computedStates, currentStateIndex = liftedState.currentStateIndex;\n        // At start up NgRx dispatches init actions,\n        // When these init actions are being filtered out by the predicate or safe/block list options\n        // we don't have a complete computed states yet.\n        // At this point it could happen that we're out of bounds, when this happens we fall back to the last known state\n        if (currentStateIndex >= computedStates.length) {\n            var state_1 = computedStates[computedStates.length - 1].state;\n            return state_1;\n        }\n        var state = computedStates[currentStateIndex].state;\n        return state;\n    }\n    /**\n     * Lifts an app's action into an action on the lifted store.\n     */\n    function liftAction(action) {\n        return new PerformAction(action, +Date.now());\n    }\n    /**\n     * Sanitizes given actions with given function.\n     */\n    function sanitizeActions(actionSanitizer, actions) {\n        return Object.keys(actions).reduce(function (sanitizedActions, actionIdx) {\n            var idx = Number(actionIdx);\n            sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n            return sanitizedActions;\n        }, {});\n    }\n    /**\n     * Sanitizes given action with given function.\n     */\n    function sanitizeAction(actionSanitizer, action, actionIdx) {\n        return __assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n    }\n    /**\n     * Sanitizes given states with given function.\n     */\n    function sanitizeStates(stateSanitizer, states) {\n        return states.map(function (computedState, idx) { return ({\n            state: sanitizeState(stateSanitizer, computedState.state, idx),\n            error: computedState.error,\n        }); });\n    }\n    /**\n     * Sanitizes given state with given function.\n     */\n    function sanitizeState(stateSanitizer, state, stateIdx) {\n        return stateSanitizer(state, stateIdx);\n    }\n    /**\n     * Read the config and tell if actions should be filtered\n     */\n    function shouldFilterActions(config) {\n        return config.predicate || config.actionsSafelist || config.actionsBlocklist;\n    }\n    /**\n     * Return a full filtered lifted state\n     */\n    function filterLiftedState(liftedState, predicate, safelist, blocklist) {\n        var filteredStagedActionIds = [];\n        var filteredActionsById = {};\n        var filteredComputedStates = [];\n        liftedState.stagedActionIds.forEach(function (id, idx) {\n            var liftedAction = liftedState.actionsById[id];\n            if (!liftedAction)\n                return;\n            if (idx &&\n                isActionFiltered(liftedState.computedStates[idx], liftedAction, predicate, safelist, blocklist)) {\n                return;\n            }\n            filteredActionsById[id] = liftedAction;\n            filteredStagedActionIds.push(id);\n            filteredComputedStates.push(liftedState.computedStates[idx]);\n        });\n        return __assign({}, liftedState, { stagedActionIds: filteredStagedActionIds, actionsById: filteredActionsById, computedStates: filteredComputedStates });\n    }\n    /**\n     * Return true is the action should be ignored\n     */\n    function isActionFiltered(state, action, predicate, safelist, blockedlist) {\n        var predicateMatch = predicate && !predicate(state, action.action);\n        var safelistMatch = safelist && !action.action.type.match(safelist.join('|'));\n        var blocklistMatch = blockedlist && action.action.type.match(blockedlist.join('|'));\n        return predicateMatch || safelistMatch || blocklistMatch;\n    }\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var DevtoolsDispatcher = /** @class */ (function (_super) {\n        __extends(DevtoolsDispatcher, _super);\n        function DevtoolsDispatcher() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DevtoolsDispatcher = __decorate([\n            core.Injectable()\n        ], DevtoolsDispatcher);\n        return DevtoolsDispatcher;\n    }(store.ActionsSubject));\n\n    var __assign$1 = (undefined && undefined.__assign) || function () {\n        __assign$1 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$1.apply(this, arguments);\n    };\n    var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var __metadata = (undefined && undefined.__metadata) || function (k, v) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n    };\n    var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); }\n    };\n    var ExtensionActionTypes = {\n        START: 'START',\n        DISPATCH: 'DISPATCH',\n        STOP: 'STOP',\n        ACTION: 'ACTION',\n    };\n    var REDUX_DEVTOOLS_EXTENSION = new core.InjectionToken('Redux Devtools Extension');\n    var DevtoolsExtension = /** @class */ (function () {\n        function DevtoolsExtension(devtoolsExtension, config, dispatcher) {\n            this.config = config;\n            this.dispatcher = dispatcher;\n            this.devtoolsExtension = devtoolsExtension;\n            this.createActionStreams();\n        }\n        DevtoolsExtension.prototype.notify = function (action, state) {\n            var _this = this;\n            if (!this.devtoolsExtension) {\n                return;\n            }\n            // Check to see if the action requires a full update of the liftedState.\n            // If it is a simple action generated by the user's app and the recording\n            // is not locked/paused, only send the action and the current state (fast).\n            //\n            // A full liftedState update (slow: serializes the entire liftedState) is\n            // only required when:\n            //   a) redux-devtools-extension fires the @@Init action (ignored by\n            //      @ngrx/store-devtools)\n            //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n            //      or @ngrx/store/update-reducers)\n            //   c) the state has been recomputed due to time-traveling\n            //   d) any action that is not a PerformAction to err on the side of\n            //      caution.\n            if (action.type === PERFORM_ACTION) {\n                if (state.isLocked || state.isPaused) {\n                    return;\n                }\n                var currentState = unliftState(state);\n                if (shouldFilterActions(this.config) &&\n                    isActionFiltered(currentState, action, this.config.predicate, this.config.actionsSafelist, this.config.actionsBlocklist)) {\n                    return;\n                }\n                var sanitizedState_1 = this.config.stateSanitizer\n                    ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                    : currentState;\n                var sanitizedAction_1 = this.config.actionSanitizer\n                    ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                    : action;\n                this.sendToReduxDevtools(function () {\n                    return _this.extensionConnection.send(sanitizedAction_1, sanitizedState_1);\n                });\n            }\n            else {\n                // Requires full state update\n                var sanitizedLiftedState_1 = __assign$1({}, state, { stagedActionIds: state.stagedActionIds, actionsById: this.config.actionSanitizer\n                        ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                        : state.actionsById, computedStates: this.config.stateSanitizer\n                        ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                        : state.computedStates });\n                this.sendToReduxDevtools(function () {\n                    return _this.devtoolsExtension.send(null, sanitizedLiftedState_1, _this.getExtensionConfig(_this.config));\n                });\n            }\n        };\n        DevtoolsExtension.prototype.createChangesObservable = function () {\n            var _this = this;\n            if (!this.devtoolsExtension) {\n                return rxjs.empty();\n            }\n            return new rxjs.Observable(function (subscriber) {\n                var connection = _this.devtoolsExtension.connect(_this.getExtensionConfig(_this.config));\n                _this.extensionConnection = connection;\n                connection.init();\n                connection.subscribe(function (change) { return subscriber.next(change); });\n                return connection.unsubscribe;\n            });\n        };\n        DevtoolsExtension.prototype.createActionStreams = function () {\n            var _this = this;\n            // Listens to all changes\n            var changes$ = this.createChangesObservable().pipe(operators.share());\n            // Listen for the start action\n            var start$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.START; }));\n            // Listen for the stop action\n            var stop$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.STOP; }));\n            // Listen for lifted actions\n            var liftedActions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.DISPATCH; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }), operators.concatMap(function (action) {\n                if (action.type === IMPORT_STATE) {\n                    // State imports may happen in two situations:\n                    // 1. Explicitly by user\n                    // 2. User activated the \"persist state accross reloads\" option\n                    //    and now the state is imported during reload.\n                    // Because of option 2, we need to give possible\n                    // lazy loaded reducers time to instantiate.\n                    // As soon as there is no UPDATE action within 1 second,\n                    // it is assumed that all reducers are loaded.\n                    return _this.dispatcher.pipe(operators.filter(function (action) { return action.type === store.UPDATE; }), operators.timeout(1000), operators.debounceTime(1000), operators.map(function () { return action; }), operators.catchError(function () { return rxjs.of(action); }), operators.take(1));\n                }\n                else {\n                    return rxjs.of(action);\n                }\n            }));\n            // Listen for unlifted actions\n            var actions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.ACTION; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }));\n            var actionsUntilStop$ = actions$.pipe(operators.takeUntil(stop$));\n            var liftedUntilStop$ = liftedActions$.pipe(operators.takeUntil(stop$));\n            this.start$ = start$.pipe(operators.takeUntil(stop$));\n            // Only take the action sources between the start/stop events\n            this.actions$ = this.start$.pipe(operators.switchMap(function () { return actionsUntilStop$; }));\n            this.liftedActions$ = this.start$.pipe(operators.switchMap(function () { return liftedUntilStop$; }));\n        };\n        DevtoolsExtension.prototype.unwrapAction = function (action) {\n            return typeof action === 'string' ? eval(\"(\" + action + \")\") : action;\n        };\n        DevtoolsExtension.prototype.getExtensionConfig = function (config) {\n            var extensionOptions = {\n                name: config.name,\n                features: config.features,\n                serialize: config.serialize,\n            };\n            if (config.maxAge !== false /* support === 0 */) {\n                extensionOptions.maxAge = config.maxAge;\n            }\n            return extensionOptions;\n        };\n        DevtoolsExtension.prototype.sendToReduxDevtools = function (send) {\n            try {\n                send();\n            }\n            catch (err) {\n                console.warn('@ngrx/store-devtools: something went wrong inside the redux devtools', err);\n            }\n        };\n        DevtoolsExtension = __decorate$1([\n            core.Injectable(),\n            __param(0, core.Inject(REDUX_DEVTOOLS_EXTENSION)),\n            __param(1, core.Inject(STORE_DEVTOOLS_CONFIG)),\n            __metadata(\"design:paramtypes\", [Object, StoreDevtoolsConfig,\n                DevtoolsDispatcher])\n        ], DevtoolsExtension);\n        return DevtoolsExtension;\n    }());\n\n    var __assign$2 = (undefined && undefined.__assign) || function () {\n        __assign$2 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$2.apply(this, arguments);\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var INIT_ACTION = { type: store.INIT };\n    var RECOMPUTE = '@ngrx/store-devtools/recompute';\n    var RECOMPUTE_ACTION = { type: RECOMPUTE };\n    /**\n     * Computes the next entry in the log by applying an action.\n     */\n    function computeNextEntry(reducer, action, state, error, errorHandler) {\n        if (error) {\n            return {\n                state: state,\n                error: 'Interrupted by an error up the chain',\n            };\n        }\n        var nextState = state;\n        var nextError;\n        try {\n            nextState = reducer(state, action);\n        }\n        catch (err) {\n            nextError = err.toString();\n            errorHandler.handleError(err.stack || err);\n        }\n        return {\n            state: nextState,\n            error: nextError,\n        };\n    }\n    /**\n     * Runs the reducer on invalidated actions to get a fresh computation log.\n     */\n    function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused) {\n        // Optimization: exit early and return the same reference\n        // if we know nothing could have changed.\n        if (minInvalidatedStateIndex >= computedStates.length &&\n            computedStates.length === stagedActionIds.length) {\n            return computedStates;\n        }\n        var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n        // If the recording is paused, recompute all states up until the pause state,\n        // else recompute all states.\n        var lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n        for (var i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n            var actionId = stagedActionIds[i];\n            var action = actionsById[actionId].action;\n            var previousEntry = nextComputedStates[i - 1];\n            var previousState = previousEntry ? previousEntry.state : committedState;\n            var previousError = previousEntry ? previousEntry.error : undefined;\n            var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n            var entry = shouldSkip\n                ? previousEntry\n                : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n            nextComputedStates.push(entry);\n        }\n        // If the recording is paused, the last state will not be recomputed,\n        // because it's essentially not part of the state history.\n        if (isPaused) {\n            nextComputedStates.push(computedStates[computedStates.length - 1]);\n        }\n        return nextComputedStates;\n    }\n    function liftInitialState(initialCommittedState, monitorReducer) {\n        return {\n            monitorState: monitorReducer(undefined, {}),\n            nextActionId: 1,\n            actionsById: { 0: liftAction(INIT_ACTION) },\n            stagedActionIds: [0],\n            skippedActionIds: [],\n            committedState: initialCommittedState,\n            currentStateIndex: 0,\n            computedStates: [],\n            isLocked: false,\n            isPaused: false,\n        };\n    }\n    /**\n     * Creates a history state reducer from an app's reducer.\n     */\n    function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * Manages how the history actions modify the history state.\n         */\n        return function (reducer) { return function (liftedState, liftedAction) {\n            var _a;\n            var _b = liftedState || initialLiftedState, monitorState = _b.monitorState, actionsById = _b.actionsById, nextActionId = _b.nextActionId, stagedActionIds = _b.stagedActionIds, skippedActionIds = _b.skippedActionIds, committedState = _b.committedState, currentStateIndex = _b.currentStateIndex, computedStates = _b.computedStates, isLocked = _b.isLocked, isPaused = _b.isPaused;\n            if (!liftedState) {\n                // Prevent mutating initialLiftedState\n                actionsById = Object.create(actionsById);\n            }\n            function commitExcessActions(n) {\n                // Auto-commits n-number of excess actions.\n                var excess = n;\n                var idsToDelete = stagedActionIds.slice(1, excess + 1);\n                for (var i = 0; i < idsToDelete.length; i++) {\n                    if (computedStates[i + 1].error) {\n                        // Stop if error is found. Commit actions up to error.\n                        excess = i;\n                        idsToDelete = stagedActionIds.slice(1, excess + 1);\n                        break;\n                    }\n                    else {\n                        delete actionsById[idsToDelete[i]];\n                    }\n                }\n                skippedActionIds = skippedActionIds.filter(function (id) { return idsToDelete.indexOf(id) === -1; });\n                stagedActionIds = __spread([0], stagedActionIds.slice(excess + 1));\n                committedState = computedStates[excess].state;\n                computedStates = computedStates.slice(excess);\n                currentStateIndex =\n                    currentStateIndex > excess ? currentStateIndex - excess : 0;\n            }\n            function commitChanges() {\n                // Consider the last committed state the new starting point.\n                // Squash any staged actions into a single committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = computedStates[currentStateIndex].state;\n                currentStateIndex = 0;\n                computedStates = [];\n            }\n            // By default, aggressively recompute every state whatever happens.\n            // This has O(n) performance, so we'll override this to a sensible\n            // value whenever we feel like we don't have to recompute the states.\n            var minInvalidatedStateIndex = 0;\n            switch (liftedAction.type) {\n                case LOCK_CHANGES: {\n                    isLocked = liftedAction.status;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case PAUSE_RECORDING: {\n                    isPaused = liftedAction.status;\n                    if (isPaused) {\n                        // Add a pause action to signal the devtools-user the recording is paused.\n                        // The corresponding state will be overwritten on each update to always contain\n                        // the latest state (see Actions.PERFORM_ACTION).\n                        stagedActionIds = __spread(stagedActionIds, [nextActionId]);\n                        actionsById[nextActionId] = new PerformAction({\n                            type: '@ngrx/devtools/pause',\n                        }, +Date.now());\n                        nextActionId++;\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        computedStates = computedStates.concat(computedStates[computedStates.length - 1]);\n                        if (currentStateIndex === stagedActionIds.length - 2) {\n                            currentStateIndex++;\n                        }\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    else {\n                        commitChanges();\n                    }\n                    break;\n                }\n                case RESET: {\n                    // Get back to the state the store was created with.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    committedState = initialCommittedState;\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case COMMIT: {\n                    commitChanges();\n                    break;\n                }\n                case ROLLBACK: {\n                    // Forget about any staged actions.\n                    // Start again from the last committed state.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case TOGGLE_ACTION: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var actionId_1 = liftedAction.id;\n                    var index = skippedActionIds.indexOf(actionId_1);\n                    if (index === -1) {\n                        skippedActionIds = __spread([actionId_1], skippedActionIds);\n                    }\n                    else {\n                        skippedActionIds = skippedActionIds.filter(function (id) { return id !== actionId_1; });\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(actionId_1);\n                    break;\n                }\n                case SET_ACTIONS_ACTIVE: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var start = liftedAction.start, end = liftedAction.end, active = liftedAction.active;\n                    var actionIds = [];\n                    for (var i = start; i < end; i++)\n                        actionIds.push(i);\n                    if (active) {\n                        skippedActionIds = difference(skippedActionIds, actionIds);\n                    }\n                    else {\n                        skippedActionIds = __spread(skippedActionIds, actionIds);\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                    break;\n                }\n                case JUMP_TO_STATE: {\n                    // Without recomputing anything, move the pointer that tell us\n                    // which state is considered the current one. Useful for sliders.\n                    currentStateIndex = liftedAction.index;\n                    // Optimization: we know the history has not changed.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case JUMP_TO_ACTION: {\n                    // Jumps to a corresponding state to a specific action.\n                    // Useful when filtering actions.\n                    var index = stagedActionIds.indexOf(liftedAction.actionId);\n                    if (index !== -1)\n                        currentStateIndex = index;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case SWEEP: {\n                    // Forget any actions that are currently being skipped.\n                    stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                    skippedActionIds = [];\n                    currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                    break;\n                }\n                case PERFORM_ACTION: {\n                    // Ignore action and return state as is if recording is locked\n                    if (isLocked) {\n                        return liftedState || initialLiftedState;\n                    }\n                    if (isPaused ||\n                        (liftedState &&\n                            isActionFiltered(liftedState.computedStates[currentStateIndex], liftedAction, options.predicate, options.actionsSafelist, options.actionsBlocklist))) {\n                        // If recording is paused or if the action should be ignored, overwrite the last state\n                        // (corresponds to the pause action) and keep everything else as is.\n                        // This way, the app gets the new current state while the devtools\n                        // do not record another action.\n                        var lastState = computedStates[computedStates.length - 1];\n                        computedStates = __spread(computedStates.slice(0, -1), [\n                            computeNextEntry(reducer, liftedAction.action, lastState.state, lastState.error, errorHandler),\n                        ]);\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                    // Auto-commit as new actions come in.\n                    if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                        commitExcessActions(1);\n                    }\n                    if (currentStateIndex === stagedActionIds.length - 1) {\n                        currentStateIndex++;\n                    }\n                    var actionId = nextActionId++;\n                    // Mutation! This is the hottest path, and we optimize on purpose.\n                    // It is safe because we set a new key in a cache dictionary.\n                    actionsById[actionId] = liftedAction;\n                    stagedActionIds = __spread(stagedActionIds, [actionId]);\n                    // Optimization: we know that only the new action needs computing.\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    break;\n                }\n                case IMPORT_STATE: {\n                    // Completely replace everything.\n                    (_a = liftedAction.nextLiftedState, monitorState = _a.monitorState, actionsById = _a.actionsById, nextActionId = _a.nextActionId, stagedActionIds = _a.stagedActionIds, skippedActionIds = _a.skippedActionIds, committedState = _a.committedState, currentStateIndex = _a.currentStateIndex, computedStates = _a.computedStates, isLocked = _a.isLocked, \n                    // prettier-ignore\n                    isPaused = _a.isPaused);\n                    break;\n                }\n                case store.INIT: {\n                    // Always recompute states on hot reload and init.\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                case store.UPDATE: {\n                    var stateHasErrors = computedStates.filter(function (state) { return state.error; }).length > 0;\n                    if (stateHasErrors) {\n                        // Recompute all states\n                        minInvalidatedStateIndex = 0;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                    }\n                    else {\n                        // If not paused/locked, add a new action to signal devtools-user\n                        // that there was a reducer update.\n                        if (!isPaused && !isLocked) {\n                            if (currentStateIndex === stagedActionIds.length - 1) {\n                                currentStateIndex++;\n                            }\n                            // Add a new action to only recompute state\n                            var actionId = nextActionId++;\n                            actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                            stagedActionIds = __spread(stagedActionIds, [actionId]);\n                            minInvalidatedStateIndex = stagedActionIds.length - 1;\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        }\n                        // Recompute state history with latest reducer and update action\n                        computedStates = computedStates.map(function (cmp) { return (__assign$2({}, cmp, { state: reducer(cmp.state, RECOMPUTE_ACTION) })); });\n                        currentStateIndex = stagedActionIds.length - 1;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                        }\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                default: {\n                    // If the action is not recognized, it's a monitor action.\n                    // Optimization: a monitor action can't change history.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n            }\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n            monitorState = monitorReducer(monitorState, liftedAction);\n            return {\n                monitorState: monitorState,\n                actionsById: actionsById,\n                nextActionId: nextActionId,\n                stagedActionIds: stagedActionIds,\n                skippedActionIds: skippedActionIds,\n                committedState: committedState,\n                currentStateIndex: currentStateIndex,\n                computedStates: computedStates,\n                isLocked: isLocked,\n                isPaused: isPaused,\n            };\n        }; };\n    }\n\n    var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n    };\n    var __param$1 = (undefined && undefined.__param) || function (paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); }\n    };\n    var __read$1 = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var StoreDevtools = /** @class */ (function () {\n        function StoreDevtools(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n            var _this = this;\n            var liftedInitialState = liftInitialState(initialState, config.monitor);\n            var liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n            var liftedAction$ = rxjs.merge(rxjs.merge(actions$.asObservable().pipe(operators.skip(1)), extension.actions$).pipe(operators.map(liftAction)), dispatcher, extension.liftedActions$).pipe(operators.observeOn(rxjs.queueScheduler));\n            var liftedReducer$ = reducers$.pipe(operators.map(liftReducer));\n            var liftedStateSubject = new rxjs.ReplaySubject(1);\n            var liftedStateSubscription = liftedAction$\n                .pipe(operators.withLatestFrom(liftedReducer$), operators.scan(function (_a, _b) {\n                var liftedState = _a.state;\n                var _c = __read$1(_b, 2), action = _c[0], reducer = _c[1];\n                var reducedLiftedState = reducer(liftedState, action);\n                // On full state update\n                // If we have actions filters, we must filter completly our lifted state to be sync with the extension\n                if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n                    reducedLiftedState = filterLiftedState(reducedLiftedState, config.predicate, config.actionsSafelist, config.actionsBlocklist);\n                }\n                // Extension should be sent the sanitized lifted state\n                extension.notify(action, reducedLiftedState);\n                return { state: reducedLiftedState, action: action };\n            }, { state: liftedInitialState, action: null }))\n                .subscribe(function (_a) {\n                var state = _a.state, action = _a.action;\n                liftedStateSubject.next(state);\n                if (action.type === PERFORM_ACTION) {\n                    var unliftedAction = action.action;\n                    scannedActions.next(unliftedAction);\n                }\n            });\n            var extensionStartSubscription = extension.start$.subscribe(function () {\n                _this.refresh();\n            });\n            var liftedState$ = liftedStateSubject.asObservable();\n            var state$ = liftedState$.pipe(operators.map(unliftState));\n            this.extensionStartSubscription = extensionStartSubscription;\n            this.stateSubscription = liftedStateSubscription;\n            this.dispatcher = dispatcher;\n            this.liftedState = liftedState$;\n            this.state = state$;\n        }\n        StoreDevtools.prototype.dispatch = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.next = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.error = function (error) { };\n        StoreDevtools.prototype.complete = function () { };\n        StoreDevtools.prototype.performAction = function (action) {\n            this.dispatch(new PerformAction(action, +Date.now()));\n        };\n        StoreDevtools.prototype.refresh = function () {\n            this.dispatch(new Refresh());\n        };\n        StoreDevtools.prototype.reset = function () {\n            this.dispatch(new Reset(+Date.now()));\n        };\n        StoreDevtools.prototype.rollback = function () {\n            this.dispatch(new Rollback(+Date.now()));\n        };\n        StoreDevtools.prototype.commit = function () {\n            this.dispatch(new Commit(+Date.now()));\n        };\n        StoreDevtools.prototype.sweep = function () {\n            this.dispatch(new Sweep());\n        };\n        StoreDevtools.prototype.toggleAction = function (id) {\n            this.dispatch(new ToggleAction(id));\n        };\n        StoreDevtools.prototype.jumpToAction = function (actionId) {\n            this.dispatch(new JumpToAction(actionId));\n        };\n        StoreDevtools.prototype.jumpToState = function (index) {\n            this.dispatch(new JumpToState(index));\n        };\n        StoreDevtools.prototype.importState = function (nextLiftedState) {\n            this.dispatch(new ImportState(nextLiftedState));\n        };\n        StoreDevtools.prototype.lockChanges = function (status) {\n            this.dispatch(new LockChanges(status));\n        };\n        StoreDevtools.prototype.pauseRecording = function (status) {\n            this.dispatch(new PauseRecording(status));\n        };\n        StoreDevtools = __decorate$2([\n            core.Injectable(),\n            __param$1(6, core.Inject(store.INITIAL_STATE)),\n            __param$1(7, core.Inject(STORE_DEVTOOLS_CONFIG)),\n            __metadata$1(\"design:paramtypes\", [DevtoolsDispatcher,\n                store.ActionsSubject,\n                store.ReducerObservable,\n                DevtoolsExtension,\n                store.ScannedActionsSubject,\n                core.ErrorHandler, Object, StoreDevtoolsConfig])\n        ], StoreDevtools);\n        return StoreDevtools;\n    }());\n\n    var __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    var IS_EXTENSION_OR_MONITOR_PRESENT = new core.InjectionToken('Is Devtools Extension or Monitor Present');\n    function createIsExtensionOrMonitorPresent(extension, config) {\n        return Boolean(extension) || config.monitor !== noMonitor;\n    }\n    function createReduxDevtoolsExtension() {\n        var extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n        if (typeof window === 'object' &&\n            typeof window[extensionKey] !== 'undefined') {\n            return window[extensionKey];\n        }\n        else {\n            return null;\n        }\n    }\n    function createStateObservable(devtools) {\n        return devtools.state;\n    }\n    var StoreDevtoolsModule = /** @class */ (function () {\n        function StoreDevtoolsModule() {\n        }\n        StoreDevtoolsModule_1 = StoreDevtoolsModule;\n        StoreDevtoolsModule.instrument = function (options) {\n            if (options === void 0) { options = {}; }\n            return {\n                ngModule: StoreDevtoolsModule_1,\n                providers: [\n                    DevtoolsExtension,\n                    DevtoolsDispatcher,\n                    StoreDevtools,\n                    {\n                        provide: INITIAL_OPTIONS,\n                        useValue: options,\n                    },\n                    {\n                        provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                        deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                        useFactory: createIsExtensionOrMonitorPresent,\n                    },\n                    {\n                        provide: REDUX_DEVTOOLS_EXTENSION,\n                        useFactory: createReduxDevtoolsExtension,\n                    },\n                    {\n                        provide: STORE_DEVTOOLS_CONFIG,\n                        deps: [INITIAL_OPTIONS],\n                        useFactory: createConfig,\n                    },\n                    {\n                        provide: store.StateObservable,\n                        deps: [StoreDevtools],\n                        useFactory: createStateObservable,\n                    },\n                    {\n                        provide: store.ReducerManagerDispatcher,\n                        useExisting: DevtoolsDispatcher,\n                    },\n                ],\n            };\n        };\n        var StoreDevtoolsModule_1;\n        StoreDevtoolsModule = StoreDevtoolsModule_1 = __decorate$3([\n            core.NgModule({})\n        ], StoreDevtoolsModule);\n        return StoreDevtoolsModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_store_devtools_store_devtools_f = INITIAL_OPTIONS;\n    exports.ɵngrx_modules_store_devtools_store_devtools_e = STORE_DEVTOOLS_CONFIG;\n    exports.ɵngrx_modules_store_devtools_store_devtools_h = createConfig;\n    exports.ɵngrx_modules_store_devtools_store_devtools_g = noMonitor;\n    exports.ɵngrx_modules_store_devtools_store_devtools_k = DevtoolsDispatcher;\n    exports.ɵngrx_modules_store_devtools_store_devtools_j = DevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_i = REDUX_DEVTOOLS_EXTENSION;\n    exports.ɵngrx_modules_store_devtools_store_devtools_a = IS_EXTENSION_OR_MONITOR_PRESENT;\n    exports.ɵngrx_modules_store_devtools_store_devtools_b = createIsExtensionOrMonitorPresent;\n    exports.ɵngrx_modules_store_devtools_store_devtools_c = createReduxDevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_d = createStateObservable;\n    exports.StoreDevtoolsModule = StoreDevtoolsModule;\n    exports.RECOMPUTE = RECOMPUTE;\n    exports.StoreDevtools = StoreDevtools;\n    exports.StoreDevtoolsConfig = StoreDevtoolsConfig;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=store-devtools.umd.js.map\n"]}