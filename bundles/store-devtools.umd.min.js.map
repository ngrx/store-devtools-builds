{"version":3,"sources":["modules/store-devtools/store-devtools.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","storeDevtools","ng","core","rxjs","operators","this","store","StoreDevtoolsConfig","STORE_DEVTOOLS_CONFIG","InjectionToken","INITIAL_OPTIONS","noMonitor","DEFAULT_NAME","createConfig","_options","DEFAULT_OPTIONS","maxAge","monitor","actionSanitizer","undefined","stateSanitizer","name","serialize","logOnly","features","pause","lock","persist","export","import","jump","skip","reorder","dispatch","test","options","config","Object","assign","Error","PERFORM_ACTION","REFRESH","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","IMPORT_STATE","LOCK_CHANGES","PAUSE_RECORDING","PerformAction","action","timestamp","type","Refresh","Reset","Rollback","Commit","Sweep","ToggleAction","id","JumpToState","index","JumpToAction","actionId","ImportState","nextLiftedState","LockChanges","status","PauseRecording","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","difference","first","second","filter","item","indexOf","unliftState","liftedState","computedStates","currentStateIndex","state","liftAction","Date","now","sanitizeActions","actions","keys","reduce","sanitizedActions","actionIdx","idx","Number","sanitizeAction","sanitizeStates","states","map","computedState","sanitizeState","error","stateIdx","shouldFilterActions","predicate","actionsWhitelist","actionsBlacklist","filterLiftedState","whitelist","blacklist","filteredStagedActionIds","filteredActionsById","filteredComputedStates","stagedActionIds","forEach","liftedAction","actionsById","isActionFiltered","push","match","join","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","create","DevtoolsDispatcher","_super","apply","decorators","Injectable","ActionsSubject","__assign$1","ExtensionActionTypes","START","DISPATCH","STOP","ACTION","REDUX_DEVTOOLS_EXTENSION","DevtoolsExtension","devtoolsExtension","dispatcher","createActionStreams","notify","isLocked","isPaused","currentState","sanitizedState","sanitizedAction","nextActionId","extensionConnection","send","sanitizedLiftedState","getExtensionConfig","createChangesObservable","_this","Observable","subscriber","connection","connect","init","subscribe","change","next","unsubscribe","empty","changes$","pipe","share","start$","stop$","liftedActions$","unwrapAction","payload","concatMap","UPDATE","timeout","debounceTime","catchError","of","take","actionsUntilStop$","takeUntil","liftedUntilStop$","actions$","switchMap","eval","extensionOptions","ctorParameters","Inject","args","__assign$2","__read","o","m","Symbol","iterator","r","e","ar","done","value","__spread","concat","INIT_ACTION","INIT","computeNextEntry","reducer","errorHandler","nextError","nextState","err","toString","handleError","stack","recomputeStates","minInvalidatedStateIndex","committedState","skippedActionIds","nextComputedStates","slice","lastIncludedActionId","previousEntry","previousState","previousError","entry","liftInitialState","initialCommittedState","monitorReducer","monitorState","0","liftReducerWith","initialLiftedState","_a","commitExcessActions","excess","idsToDelete","commitChanges","_b","Infinity","actionId_1","start","end","active","actionIds","Math","min","lastState","cmp","__read$1","StoreDevtools","reducers$","extension","scannedActions","initialState","liftedInitialState","liftReducer","liftedAction$","merge","asObservable","observeOn","queueScheduler","liftedReducer$","liftedStateSubject","ReplaySubject","liftedStateSubscription","withLatestFrom","scan","_c","reducedLiftedState","extensionStartSubscription","refresh","liftedState$","state$","stateSubscription","complete","performAction","reset","rollback","commit","sweep","toggleAction","jumpToAction","jumpToState","importState","lockChanges","pauseRecording","ReducerObservable","ScannedActionsSubject","ErrorHandler","INITIAL_STATE","IS_EXTENSION_OR_MONITOR_PRESENT","createIsExtensionOrMonitorPresent","Boolean","createReduxDevtoolsExtension","window","createStateObservable","devtools","StoreDevtoolsModule","instrument","ngModule","providers","provide","useValue","deps","useFactory","StateObservable","ReducerManagerDispatcher","useExisting","NgModule","ɵngrx_modules_store_devtools_store_devtools_f","ɵngrx_modules_store_devtools_store_devtools_e","ɵngrx_modules_store_devtools_store_devtools_h","ɵngrx_modules_store_devtools_store_devtools_g","ɵngrx_modules_store_devtools_store_devtools_k","ɵngrx_modules_store_devtools_store_devtools_j","ɵngrx_modules_store_devtools_store_devtools_i","ɵngrx_modules_store_devtools_store_devtools_a","ɵngrx_modules_store_devtools_store_devtools_b","ɵngrx_modules_store_devtools_store_devtools_c","ɵngrx_modules_store_devtools_store_devtools_d","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.0+59.sha-df8fc60\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/store-devtools', ['exports', '@angular/core', '@ngrx/store', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.storeDevtools = {}),global.ng.core,global['@ngrx/store'],global.rxjs,global.rxjs.operators));\n}(this, (function (exports,core,store,rxjs,operators) { 'use strict';\n\n    var StoreDevtoolsConfig = /** @class */ (function () {\n        function StoreDevtoolsConfig() {\n        }\n        return StoreDevtoolsConfig;\n    }());\n    var STORE_DEVTOOLS_CONFIG = new core.InjectionToken('@ngrx/devtools Options');\n    var INITIAL_OPTIONS = new core.InjectionToken('@ngrx/devtools Initial Config');\n    function noMonitor() {\n        return null;\n    }\n    var DEFAULT_NAME = 'NgRx Store DevTools';\n    function createConfig(_options) {\n        var DEFAULT_OPTIONS = {\n            maxAge: false,\n            monitor: noMonitor,\n            actionSanitizer: undefined,\n            stateSanitizer: undefined,\n            name: DEFAULT_NAME,\n            serialize: false,\n            logOnly: false,\n            // Add all features explicitely. This prevent buggy behavior for\n            // options like \"lock\" which might otherwise not show up.\n            features: {\n                pause: true,\n                lock: true,\n                persist: true,\n                export: true,\n                import: 'custom',\n                jump: true,\n                skip: true,\n                reorder: true,\n                dispatch: true,\n                test: true,\n            },\n        };\n        var options = typeof _options === 'function' ? _options() : _options;\n        var logOnly = options.logOnly\n            ? { pause: true, export: true, test: true }\n            : false;\n        var features = options.features || logOnly || DEFAULT_OPTIONS.features;\n        var config = Object.assign({}, DEFAULT_OPTIONS, { features: features }, options);\n        if (config.maxAge && config.maxAge < 2) {\n            throw new Error(\"Devtools 'maxAge' cannot be less than 2, got \" + config.maxAge);\n        }\n        return config;\n    }\n\n    var PERFORM_ACTION = 'PERFORM_ACTION';\n    var REFRESH = 'REFRESH';\n    var RESET = 'RESET';\n    var ROLLBACK = 'ROLLBACK';\n    var COMMIT = 'COMMIT';\n    var SWEEP = 'SWEEP';\n    var TOGGLE_ACTION = 'TOGGLE_ACTION';\n    var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\n    var JUMP_TO_STATE = 'JUMP_TO_STATE';\n    var JUMP_TO_ACTION = 'JUMP_TO_ACTION';\n    var IMPORT_STATE = 'IMPORT_STATE';\n    var LOCK_CHANGES = 'LOCK_CHANGES';\n    var PAUSE_RECORDING = 'PAUSE_RECORDING';\n    var PerformAction = /** @class */ (function () {\n        function PerformAction(action, timestamp) {\n            this.action = action;\n            this.timestamp = timestamp;\n            this.type = PERFORM_ACTION;\n            if (typeof action.type === 'undefined') {\n                throw new Error('Actions may not have an undefined \"type\" property. ' +\n                    'Have you misspelled a constant?');\n            }\n        }\n        return PerformAction;\n    }());\n    var Refresh = /** @class */ (function () {\n        function Refresh() {\n            this.type = REFRESH;\n        }\n        return Refresh;\n    }());\n    var Reset = /** @class */ (function () {\n        function Reset(timestamp) {\n            this.timestamp = timestamp;\n            this.type = RESET;\n        }\n        return Reset;\n    }());\n    var Rollback = /** @class */ (function () {\n        function Rollback(timestamp) {\n            this.timestamp = timestamp;\n            this.type = ROLLBACK;\n        }\n        return Rollback;\n    }());\n    var Commit = /** @class */ (function () {\n        function Commit(timestamp) {\n            this.timestamp = timestamp;\n            this.type = COMMIT;\n        }\n        return Commit;\n    }());\n    var Sweep = /** @class */ (function () {\n        function Sweep() {\n            this.type = SWEEP;\n        }\n        return Sweep;\n    }());\n    var ToggleAction = /** @class */ (function () {\n        function ToggleAction(id) {\n            this.id = id;\n            this.type = TOGGLE_ACTION;\n        }\n        return ToggleAction;\n    }());\n    var JumpToState = /** @class */ (function () {\n        function JumpToState(index) {\n            this.index = index;\n            this.type = JUMP_TO_STATE;\n        }\n        return JumpToState;\n    }());\n    var JumpToAction = /** @class */ (function () {\n        function JumpToAction(actionId) {\n            this.actionId = actionId;\n            this.type = JUMP_TO_ACTION;\n        }\n        return JumpToAction;\n    }());\n    var ImportState = /** @class */ (function () {\n        function ImportState(nextLiftedState) {\n            this.nextLiftedState = nextLiftedState;\n            this.type = IMPORT_STATE;\n        }\n        return ImportState;\n    }());\n    var LockChanges = /** @class */ (function () {\n        function LockChanges(status) {\n            this.status = status;\n            this.type = LOCK_CHANGES;\n        }\n        return LockChanges;\n    }());\n    var PauseRecording = /** @class */ (function () {\n        function PauseRecording(status) {\n            this.status = status;\n            this.type = PAUSE_RECORDING;\n        }\n        return PauseRecording;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    function difference(first, second) {\n        return first.filter(function (item) { return second.indexOf(item) < 0; });\n    }\n    /**\n     * Provides an app's view into the state of the lifted store.\n     */\n    function unliftState(liftedState) {\n        var computedStates = liftedState.computedStates, currentStateIndex = liftedState.currentStateIndex;\n        var state = computedStates[currentStateIndex].state;\n        return state;\n    }\n    /**\n     * Lifts an app's action into an action on the lifted store.\n     */\n    function liftAction(action) {\n        return new PerformAction(action, +Date.now());\n    }\n    /**\n     * Sanitizes given actions with given function.\n     */\n    function sanitizeActions(actionSanitizer, actions) {\n        return Object.keys(actions).reduce(function (sanitizedActions, actionIdx) {\n            var idx = Number(actionIdx);\n            sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n            return sanitizedActions;\n        }, {});\n    }\n    /**\n     * Sanitizes given action with given function.\n     */\n    function sanitizeAction(actionSanitizer, action, actionIdx) {\n        return __assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n    }\n    /**\n     * Sanitizes given states with given function.\n     */\n    function sanitizeStates(stateSanitizer, states) {\n        return states.map(function (computedState, idx) { return ({\n            state: sanitizeState(stateSanitizer, computedState.state, idx),\n            error: computedState.error,\n        }); });\n    }\n    /**\n     * Sanitizes given state with given function.\n     */\n    function sanitizeState(stateSanitizer, state, stateIdx) {\n        return stateSanitizer(state, stateIdx);\n    }\n    /**\n     * Read the config and tell if actions should be filtered\n     */\n    function shouldFilterActions(config) {\n        return config.predicate || config.actionsWhitelist || config.actionsBlacklist;\n    }\n    /**\n     * Return a full filtered lifted state\n     */\n    function filterLiftedState(liftedState, predicate, whitelist, blacklist) {\n        var filteredStagedActionIds = [];\n        var filteredActionsById = {};\n        var filteredComputedStates = [];\n        liftedState.stagedActionIds.forEach(function (id, idx) {\n            var liftedAction = liftedState.actionsById[id];\n            if (!liftedAction)\n                return;\n            if (idx &&\n                isActionFiltered(liftedState.computedStates[idx], liftedAction, predicate, whitelist, blacklist)) {\n                return;\n            }\n            filteredActionsById[id] = liftedAction;\n            filteredStagedActionIds.push(id);\n            filteredComputedStates.push(liftedState.computedStates[idx]);\n        });\n        return __assign({}, liftedState, { stagedActionIds: filteredStagedActionIds, actionsById: filteredActionsById, computedStates: filteredComputedStates });\n    }\n    /**\n     * Return true is the action should be ignored\n     */\n    function isActionFiltered(state, action, predicate, whitelist, blacklist) {\n        return ((predicate && !predicate(state, action.action)) ||\n            (whitelist && !action.action.type.match(whitelist.join('|'))) ||\n            (blacklist && action.action.type.match(blacklist.join('|'))));\n    }\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var DevtoolsDispatcher = /** @class */ (function (_super) {\n        __extends(DevtoolsDispatcher, _super);\n        function DevtoolsDispatcher() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DevtoolsDispatcher.decorators = [\n            { type: core.Injectable }\n        ];\n        return DevtoolsDispatcher;\n    }(store.ActionsSubject));\n\n    var __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var ExtensionActionTypes = {\n        START: 'START',\n        DISPATCH: 'DISPATCH',\n        STOP: 'STOP',\n        ACTION: 'ACTION',\n    };\n    var REDUX_DEVTOOLS_EXTENSION = new core.InjectionToken('Redux Devtools Extension');\n    var DevtoolsExtension = /** @class */ (function () {\n        function DevtoolsExtension(devtoolsExtension, config, dispatcher) {\n            this.config = config;\n            this.dispatcher = dispatcher;\n            this.devtoolsExtension = devtoolsExtension;\n            this.createActionStreams();\n        }\n        DevtoolsExtension.prototype.notify = function (action, state) {\n            if (!this.devtoolsExtension) {\n                return;\n            }\n            // Check to see if the action requires a full update of the liftedState.\n            // If it is a simple action generated by the user's app and the recording\n            // is not locked/paused, only send the action and the current state (fast).\n            //\n            // A full liftedState update (slow: serializes the entire liftedState) is\n            // only required when:\n            //   a) redux-devtools-extension fires the @@Init action (ignored by\n            //      @ngrx/store-devtools)\n            //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n            //      or @ngrx/store/update-reducers)\n            //   c) the state has been recomputed due to time-traveling\n            //   d) any action that is not a PerformAction to err on the side of\n            //      caution.\n            if (action.type === PERFORM_ACTION) {\n                if (state.isLocked || state.isPaused) {\n                    return;\n                }\n                var currentState = unliftState(state);\n                if (shouldFilterActions(this.config) &&\n                    isActionFiltered(currentState, action, this.config.predicate, this.config.actionsWhitelist, this.config.actionsBlacklist)) {\n                    return;\n                }\n                var sanitizedState = this.config.stateSanitizer\n                    ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                    : currentState;\n                var sanitizedAction = this.config.actionSanitizer\n                    ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                    : action;\n                this.extensionConnection.send(sanitizedAction, sanitizedState);\n            }\n            else {\n                // Requires full state update\n                var sanitizedLiftedState = __assign$1({}, state, { stagedActionIds: state.stagedActionIds, actionsById: this.config.actionSanitizer\n                        ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                        : state.actionsById, computedStates: this.config.stateSanitizer\n                        ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                        : state.computedStates });\n                this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.config));\n            }\n        };\n        DevtoolsExtension.prototype.createChangesObservable = function () {\n            var _this = this;\n            if (!this.devtoolsExtension) {\n                return rxjs.empty();\n            }\n            return new rxjs.Observable(function (subscriber) {\n                var connection = _this.devtoolsExtension.connect(_this.getExtensionConfig(_this.config));\n                _this.extensionConnection = connection;\n                connection.init();\n                connection.subscribe(function (change) { return subscriber.next(change); });\n                return connection.unsubscribe;\n            });\n        };\n        DevtoolsExtension.prototype.createActionStreams = function () {\n            var _this = this;\n            // Listens to all changes\n            var changes$ = this.createChangesObservable().pipe(operators.share());\n            // Listen for the start action\n            var start$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.START; }));\n            // Listen for the stop action\n            var stop$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.STOP; }));\n            // Listen for lifted actions\n            var liftedActions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.DISPATCH; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }), operators.concatMap(function (action) {\n                if (action.type === IMPORT_STATE) {\n                    // State imports may happen in two situations:\n                    // 1. Explicitly by user\n                    // 2. User activated the \"persist state accross reloads\" option\n                    //    and now the state is imported during reload.\n                    // Because of option 2, we need to give possible\n                    // lazy loaded reducers time to instantiate.\n                    // As soon as there is no UPDATE action within 1 second,\n                    // it is assumed that all reducers are loaded.\n                    return _this.dispatcher.pipe(operators.filter(function (action) { return action.type === store.UPDATE; }), operators.timeout(1000), operators.debounceTime(1000), operators.map(function () { return action; }), operators.catchError(function () { return rxjs.of(action); }), operators.take(1));\n                }\n                else {\n                    return rxjs.of(action);\n                }\n            }));\n            // Listen for unlifted actions\n            var actions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.ACTION; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }));\n            var actionsUntilStop$ = actions$.pipe(operators.takeUntil(stop$));\n            var liftedUntilStop$ = liftedActions$.pipe(operators.takeUntil(stop$));\n            this.start$ = start$.pipe(operators.takeUntil(stop$));\n            // Only take the action sources between the start/stop events\n            this.actions$ = this.start$.pipe(operators.switchMap(function () { return actionsUntilStop$; }));\n            this.liftedActions$ = this.start$.pipe(operators.switchMap(function () { return liftedUntilStop$; }));\n        };\n        DevtoolsExtension.prototype.unwrapAction = function (action) {\n            return typeof action === 'string' ? eval(\"(\" + action + \")\") : action;\n        };\n        DevtoolsExtension.prototype.getExtensionConfig = function (config) {\n            var extensionOptions = {\n                name: config.name,\n                features: config.features,\n                serialize: config.serialize,\n            };\n            if (config.maxAge !== false /* support === 0 */) {\n                extensionOptions.maxAge = config.maxAge;\n            }\n            return extensionOptions;\n        };\n        DevtoolsExtension.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        DevtoolsExtension.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [REDUX_DEVTOOLS_EXTENSION,] }] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] }] },\n            { type: DevtoolsDispatcher }\n        ]; };\n        return DevtoolsExtension;\n    }());\n\n    var __assign$2 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var INIT_ACTION = { type: store.INIT };\n    /**\n     * Computes the next entry in the log by applying an action.\n     */\n    function computeNextEntry(reducer, action, state, error, errorHandler) {\n        if (error) {\n            return {\n                state: state,\n                error: 'Interrupted by an error up the chain',\n            };\n        }\n        var nextState = state;\n        var nextError;\n        try {\n            nextState = reducer(state, action);\n        }\n        catch (err) {\n            nextError = err.toString();\n            errorHandler.handleError(err.stack || err);\n        }\n        return {\n            state: nextState,\n            error: nextError,\n        };\n    }\n    /**\n     * Runs the reducer on invalidated actions to get a fresh computation log.\n     */\n    function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused) {\n        // Optimization: exit early and return the same reference\n        // if we know nothing could have changed.\n        if (minInvalidatedStateIndex >= computedStates.length &&\n            computedStates.length === stagedActionIds.length) {\n            return computedStates;\n        }\n        var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n        // If the recording is paused, recompute all states up until the pause state,\n        // else recompute all states.\n        var lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n        for (var i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n            var actionId = stagedActionIds[i];\n            var action = actionsById[actionId].action;\n            var previousEntry = nextComputedStates[i - 1];\n            var previousState = previousEntry ? previousEntry.state : committedState;\n            var previousError = previousEntry ? previousEntry.error : undefined;\n            var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n            var entry = shouldSkip\n                ? previousEntry\n                : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n            nextComputedStates.push(entry);\n        }\n        // If the recording is paused, the last state will not be recomputed,\n        // because it's essentially not part of the state history.\n        if (isPaused) {\n            nextComputedStates.push(computedStates[computedStates.length - 1]);\n        }\n        return nextComputedStates;\n    }\n    function liftInitialState(initialCommittedState, monitorReducer) {\n        return {\n            monitorState: monitorReducer(undefined, {}),\n            nextActionId: 1,\n            actionsById: { 0: liftAction(INIT_ACTION) },\n            stagedActionIds: [0],\n            skippedActionIds: [],\n            committedState: initialCommittedState,\n            currentStateIndex: 0,\n            computedStates: [],\n            isLocked: false,\n            isPaused: false,\n        };\n    }\n    /**\n     * Creates a history state reducer from an app's reducer.\n     */\n    function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * Manages how the history actions modify the history state.\n         */\n        return function (reducer) { return function (liftedState, liftedAction) {\n            var _a = liftedState || initialLiftedState, monitorState = _a.monitorState, actionsById = _a.actionsById, nextActionId = _a.nextActionId, stagedActionIds = _a.stagedActionIds, skippedActionIds = _a.skippedActionIds, committedState = _a.committedState, currentStateIndex = _a.currentStateIndex, computedStates = _a.computedStates, isLocked = _a.isLocked, isPaused = _a.isPaused;\n            if (!liftedState) {\n                // Prevent mutating initialLiftedState\n                actionsById = Object.create(actionsById);\n            }\n            function commitExcessActions(n) {\n                // Auto-commits n-number of excess actions.\n                var excess = n;\n                var idsToDelete = stagedActionIds.slice(1, excess + 1);\n                for (var i = 0; i < idsToDelete.length; i++) {\n                    if (computedStates[i + 1].error) {\n                        // Stop if error is found. Commit actions up to error.\n                        excess = i;\n                        idsToDelete = stagedActionIds.slice(1, excess + 1);\n                        break;\n                    }\n                    else {\n                        delete actionsById[idsToDelete[i]];\n                    }\n                }\n                skippedActionIds = skippedActionIds.filter(function (id) { return idsToDelete.indexOf(id) === -1; });\n                stagedActionIds = __spread([0], stagedActionIds.slice(excess + 1));\n                committedState = computedStates[excess].state;\n                computedStates = computedStates.slice(excess);\n                currentStateIndex =\n                    currentStateIndex > excess ? currentStateIndex - excess : 0;\n            }\n            function commitChanges() {\n                // Consider the last committed state the new starting point.\n                // Squash any staged actions into a single committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = computedStates[currentStateIndex].state;\n                currentStateIndex = 0;\n                computedStates = [];\n            }\n            // By default, aggressively recompute every state whatever happens.\n            // This has O(n) performance, so we'll override this to a sensible\n            // value whenever we feel like we don't have to recompute the states.\n            var minInvalidatedStateIndex = 0;\n            switch (liftedAction.type) {\n                case LOCK_CHANGES: {\n                    isLocked = liftedAction.status;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case PAUSE_RECORDING: {\n                    isPaused = liftedAction.status;\n                    if (isPaused) {\n                        // Add a pause action to signal the devtools-user the recording is paused.\n                        // The corresponding state will be overwritten on each update to always contain\n                        // the latest state (see Actions.PERFORM_ACTION).\n                        stagedActionIds = __spread(stagedActionIds, [nextActionId]);\n                        actionsById[nextActionId] = new PerformAction({\n                            type: '@ngrx/devtools/pause',\n                        }, +Date.now());\n                        nextActionId++;\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        computedStates = computedStates.concat(computedStates[computedStates.length - 1]);\n                        if (currentStateIndex === stagedActionIds.length - 2) {\n                            currentStateIndex++;\n                        }\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    else {\n                        commitChanges();\n                    }\n                    break;\n                }\n                case RESET: {\n                    // Get back to the state the store was created with.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    committedState = initialCommittedState;\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case COMMIT: {\n                    commitChanges();\n                    break;\n                }\n                case ROLLBACK: {\n                    // Forget about any staged actions.\n                    // Start again from the last committed state.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case TOGGLE_ACTION: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var actionId_1 = liftedAction.id;\n                    var index = skippedActionIds.indexOf(actionId_1);\n                    if (index === -1) {\n                        skippedActionIds = __spread([actionId_1], skippedActionIds);\n                    }\n                    else {\n                        skippedActionIds = skippedActionIds.filter(function (id) { return id !== actionId_1; });\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(actionId_1);\n                    break;\n                }\n                case SET_ACTIONS_ACTIVE: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var start = liftedAction.start, end = liftedAction.end, active = liftedAction.active;\n                    var actionIds = [];\n                    for (var i = start; i < end; i++)\n                        actionIds.push(i);\n                    if (active) {\n                        skippedActionIds = difference(skippedActionIds, actionIds);\n                    }\n                    else {\n                        skippedActionIds = __spread(skippedActionIds, actionIds);\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                    break;\n                }\n                case JUMP_TO_STATE: {\n                    // Without recomputing anything, move the pointer that tell us\n                    // which state is considered the current one. Useful for sliders.\n                    currentStateIndex = liftedAction.index;\n                    // Optimization: we know the history has not changed.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case JUMP_TO_ACTION: {\n                    // Jumps to a corresponding state to a specific action.\n                    // Useful when filtering actions.\n                    var index = stagedActionIds.indexOf(liftedAction.actionId);\n                    if (index !== -1)\n                        currentStateIndex = index;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case SWEEP: {\n                    // Forget any actions that are currently being skipped.\n                    stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                    skippedActionIds = [];\n                    currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                    break;\n                }\n                case PERFORM_ACTION: {\n                    // Ignore action and return state as is if recording is locked\n                    if (isLocked) {\n                        return liftedState || initialLiftedState;\n                    }\n                    if (isPaused) {\n                        // If recording is paused, overwrite the last state\n                        // (corresponds to the pause action) and keep everything else as is.\n                        // This way, the app gets the new current state while the devtools\n                        // do not record another action.\n                        var lastState = computedStates[computedStates.length - 1];\n                        computedStates = __spread(computedStates.slice(0, -1), [\n                            computeNextEntry(reducer, liftedAction.action, lastState.state, lastState.error, errorHandler),\n                        ]);\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                    // Auto-commit as new actions come in.\n                    if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                        commitExcessActions(1);\n                    }\n                    if (currentStateIndex === stagedActionIds.length - 1) {\n                        currentStateIndex++;\n                    }\n                    var actionId = nextActionId++;\n                    // Mutation! This is the hottest path, and we optimize on purpose.\n                    // It is safe because we set a new key in a cache dictionary.\n                    actionsById[actionId] = liftedAction;\n                    stagedActionIds = __spread(stagedActionIds, [actionId]);\n                    // Optimization: we know that only the new action needs computing.\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    break;\n                }\n                case IMPORT_STATE: {\n                    // Completely replace everything.\n                    (_b = liftedAction.nextLiftedState, monitorState = _b.monitorState, actionsById = _b.actionsById, nextActionId = _b.nextActionId, stagedActionIds = _b.stagedActionIds, skippedActionIds = _b.skippedActionIds, committedState = _b.committedState, currentStateIndex = _b.currentStateIndex, computedStates = _b.computedStates, isLocked = _b.isLocked, \n                    // prettier-ignore\n                    isPaused = _b.isPaused);\n                    break;\n                }\n                case store.INIT: {\n                    // Always recompute states on hot reload and init.\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                case store.UPDATE: {\n                    var stateHasErrors = computedStates.filter(function (state) { return state.error; }).length > 0;\n                    if (stateHasErrors) {\n                        // Recompute all states\n                        minInvalidatedStateIndex = 0;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                    }\n                    else {\n                        // If not paused/locked, add a new action to signal devtools-user\n                        // that there was a reducer update.\n                        if (!isPaused && !isLocked) {\n                            if (currentStateIndex === stagedActionIds.length - 1) {\n                                currentStateIndex++;\n                            }\n                            // Add a new action to only recompute state\n                            var actionId = nextActionId++;\n                            actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                            stagedActionIds = __spread(stagedActionIds, [actionId]);\n                            minInvalidatedStateIndex = stagedActionIds.length - 1;\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        }\n                        // Recompute state history with latest reducer and update action\n                        computedStates = computedStates.map(function (cmp) { return (__assign$2({}, cmp, { state: reducer(cmp.state, liftedAction) })); });\n                        currentStateIndex = stagedActionIds.length - 1;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                        }\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                default: {\n                    // If the action is not recognized, it's a monitor action.\n                    // Optimization: a monitor action can't change history.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n            }\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n            monitorState = monitorReducer(monitorState, liftedAction);\n            return {\n                monitorState: monitorState,\n                actionsById: actionsById,\n                nextActionId: nextActionId,\n                stagedActionIds: stagedActionIds,\n                skippedActionIds: skippedActionIds,\n                committedState: committedState,\n                currentStateIndex: currentStateIndex,\n                computedStates: computedStates,\n                isLocked: isLocked,\n                isPaused: isPaused,\n            };\n            var _b;\n        }; };\n    }\n\n    var __read$1 = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var StoreDevtools = /** @class */ (function () {\n        function StoreDevtools(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n            var _this = this;\n            var liftedInitialState = liftInitialState(initialState, config.monitor);\n            var liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n            var liftedAction$ = rxjs.merge(rxjs.merge(actions$.asObservable().pipe(operators.skip(1)), extension.actions$).pipe(operators.map(liftAction)), dispatcher, extension.liftedActions$).pipe(operators.observeOn(rxjs.queueScheduler));\n            var liftedReducer$ = reducers$.pipe(operators.map(liftReducer));\n            var liftedStateSubject = new rxjs.ReplaySubject(1);\n            var liftedStateSubscription = liftedAction$\n                .pipe(operators.withLatestFrom(liftedReducer$), operators.scan(function (_a, _b) {\n                var liftedState = _a.state;\n                var _c = __read$1(_b, 2), action = _c[0], reducer = _c[1];\n                var reducedLiftedState = reducer(liftedState, action);\n                // On full state update\n                // If we have actions filters, we must filter completly our lifted state to be sync with the extension\n                if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n                    reducedLiftedState = filterLiftedState(reducedLiftedState, config.predicate, config.actionsWhitelist, config.actionsBlacklist);\n                }\n                // Extension should be sent the sanitized lifted state\n                extension.notify(action, reducedLiftedState);\n                return { state: reducedLiftedState, action: action };\n            }, { state: liftedInitialState, action: null }))\n                .subscribe(function (_a) {\n                var state = _a.state, action = _a.action;\n                liftedStateSubject.next(state);\n                if (action.type === PERFORM_ACTION) {\n                    var unliftedAction = action.action;\n                    scannedActions.next(unliftedAction);\n                }\n            });\n            var extensionStartSubscription = extension.start$.subscribe(function () {\n                _this.refresh();\n            });\n            var liftedState$ = liftedStateSubject.asObservable();\n            var state$ = liftedState$.pipe(operators.map(unliftState));\n            this.extensionStartSubscription = extensionStartSubscription;\n            this.stateSubscription = liftedStateSubscription;\n            this.dispatcher = dispatcher;\n            this.liftedState = liftedState$;\n            this.state = state$;\n        }\n        StoreDevtools.prototype.dispatch = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.next = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.error = function (error) { };\n        StoreDevtools.prototype.complete = function () { };\n        StoreDevtools.prototype.performAction = function (action) {\n            this.dispatch(new PerformAction(action, +Date.now()));\n        };\n        StoreDevtools.prototype.refresh = function () {\n            this.dispatch(new Refresh());\n        };\n        StoreDevtools.prototype.reset = function () {\n            this.dispatch(new Reset(+Date.now()));\n        };\n        StoreDevtools.prototype.rollback = function () {\n            this.dispatch(new Rollback(+Date.now()));\n        };\n        StoreDevtools.prototype.commit = function () {\n            this.dispatch(new Commit(+Date.now()));\n        };\n        StoreDevtools.prototype.sweep = function () {\n            this.dispatch(new Sweep());\n        };\n        StoreDevtools.prototype.toggleAction = function (id) {\n            this.dispatch(new ToggleAction(id));\n        };\n        StoreDevtools.prototype.jumpToAction = function (actionId) {\n            this.dispatch(new JumpToAction(actionId));\n        };\n        StoreDevtools.prototype.jumpToState = function (index) {\n            this.dispatch(new JumpToState(index));\n        };\n        StoreDevtools.prototype.importState = function (nextLiftedState) {\n            this.dispatch(new ImportState(nextLiftedState));\n        };\n        StoreDevtools.prototype.lockChanges = function (status) {\n            this.dispatch(new LockChanges(status));\n        };\n        StoreDevtools.prototype.pauseRecording = function (status) {\n            this.dispatch(new PauseRecording(status));\n        };\n        StoreDevtools.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        StoreDevtools.ctorParameters = function () { return [\n            { type: DevtoolsDispatcher },\n            { type: store.ActionsSubject },\n            { type: store.ReducerObservable },\n            { type: DevtoolsExtension },\n            { type: store.ScannedActionsSubject },\n            { type: core.ErrorHandler },\n            { type: undefined, decorators: [{ type: core.Inject, args: [store.INITIAL_STATE,] }] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] }] }\n        ]; };\n        return StoreDevtools;\n    }());\n\n    var IS_EXTENSION_OR_MONITOR_PRESENT = new core.InjectionToken('Is Devtools Extension or Monitor Present');\n    function createIsExtensionOrMonitorPresent(extension, config) {\n        return Boolean(extension) || config.monitor !== noMonitor;\n    }\n    function createReduxDevtoolsExtension() {\n        var extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n        if (typeof window === 'object' &&\n            typeof window[extensionKey] !== 'undefined') {\n            return window[extensionKey];\n        }\n        else {\n            return null;\n        }\n    }\n    function createStateObservable(devtools) {\n        return devtools.state;\n    }\n    var StoreDevtoolsModule = /** @class */ (function () {\n        function StoreDevtoolsModule() {\n        }\n        StoreDevtoolsModule.instrument = function (options) {\n            if (options === void 0) { options = {}; }\n            return {\n                ngModule: StoreDevtoolsModule,\n                providers: [\n                    DevtoolsExtension,\n                    DevtoolsDispatcher,\n                    StoreDevtools,\n                    {\n                        provide: INITIAL_OPTIONS,\n                        useValue: options,\n                    },\n                    {\n                        provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                        deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                        useFactory: createIsExtensionOrMonitorPresent,\n                    },\n                    {\n                        provide: REDUX_DEVTOOLS_EXTENSION,\n                        useFactory: createReduxDevtoolsExtension,\n                    },\n                    {\n                        provide: STORE_DEVTOOLS_CONFIG,\n                        deps: [INITIAL_OPTIONS],\n                        useFactory: createConfig,\n                    },\n                    {\n                        provide: store.StateObservable,\n                        deps: [StoreDevtools],\n                        useFactory: createStateObservable,\n                    },\n                    {\n                        provide: store.ReducerManagerDispatcher,\n                        useExisting: DevtoolsDispatcher,\n                    },\n                ],\n            };\n        };\n        StoreDevtoolsModule.decorators = [\n            { type: core.NgModule, args: [{},] }\n        ];\n        return StoreDevtoolsModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_store_devtools_store_devtools_f = INITIAL_OPTIONS;\n    exports.ɵngrx_modules_store_devtools_store_devtools_e = STORE_DEVTOOLS_CONFIG;\n    exports.ɵngrx_modules_store_devtools_store_devtools_h = createConfig;\n    exports.ɵngrx_modules_store_devtools_store_devtools_g = noMonitor;\n    exports.ɵngrx_modules_store_devtools_store_devtools_k = DevtoolsDispatcher;\n    exports.ɵngrx_modules_store_devtools_store_devtools_j = DevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_i = REDUX_DEVTOOLS_EXTENSION;\n    exports.ɵngrx_modules_store_devtools_store_devtools_a = IS_EXTENSION_OR_MONITOR_PRESENT;\n    exports.ɵngrx_modules_store_devtools_store_devtools_b = createIsExtensionOrMonitorPresent;\n    exports.ɵngrx_modules_store_devtools_store_devtools_c = createReduxDevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_d = createStateObservable;\n    exports.StoreDevtoolsModule = StoreDevtoolsModule;\n    exports.StoreDevtools = StoreDevtools;\n    exports.StoreDevtoolsConfig = StoreDevtoolsConfig;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=store-devtools.umd.js.map\n"]}