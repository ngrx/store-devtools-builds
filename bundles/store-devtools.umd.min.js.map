{"version":3,"sources":["modules/store-devtools/store-devtools.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","storeDevtools","ng","core","rxjs","operators","this","store","StoreDevtoolsConfig","STORE_DEVTOOLS_CONFIG","InjectionToken","INITIAL_OPTIONS","noMonitor","DEFAULT_NAME","createConfig","_options","DEFAULT_OPTIONS","maxAge","monitor","actionSanitizer","undefined","stateSanitizer","name","serialize","logOnly","features","pause","lock","persist","export","import","jump","skip","reorder","dispatch","test","options","config","Object","assign","Error","PERFORM_ACTION","REFRESH","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","IMPORT_STATE","LOCK_CHANGES","PAUSE_RECORDING","PerformAction","action","timestamp","type","Refresh","Reset","Rollback","Commit","Sweep","ToggleAction","id","JumpToState","index","JumpToAction","actionId","ImportState","nextLiftedState","LockChanges","status","PauseRecording","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","difference","first","second","filter","item","indexOf","unliftState","liftedState","computedStates","currentStateIndex","state","liftAction","Date","now","sanitizeActions","actions","keys","reduce","sanitizedActions","actionIdx","idx","Number","sanitizeAction","sanitizeStates","states","map","computedState","sanitizeState","error","stateIdx","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","create","DevtoolsDispatcher","_super","apply","decorators","Injectable","ActionsSubject","__assign$1","ExtensionActionTypes","START","DISPATCH","STOP","ACTION","REDUX_DEVTOOLS_EXTENSION","DevtoolsExtension","devtoolsExtension","dispatcher","createActionStreams","notify","isLocked","isPaused","currentState","sanitizedState","sanitizedAction","nextActionId","extensionConnection","send","sanitizedLiftedState","actionsById","getExtensionConfig","createChangesObservable","_this","Observable","subscriber","connection","connect","init","subscribe","change","next","unsubscribe","empty","changes$","pipe","share","start$","stop$","liftedActions$","unwrapAction","payload","concatMap","UPDATE","timeout","debounceTime","catchError","of","take","actionsUntilStop$","takeUntil","liftedUntilStop$","actions$","switchMap","eval","extensionOptions","ctorParameters","Inject","args","__assign$2","__read","o","m","Symbol","iterator","r","e","ar","done","push","value","__spread","concat","INIT_ACTION","INIT","computeNextEntry","reducer","errorHandler","nextError","nextState","err","toString","handleError","stack","recomputeStates","minInvalidatedStateIndex","committedState","stagedActionIds","skippedActionIds","nextComputedStates","slice","lastIncludedActionId","previousEntry","previousState","previousError","entry","liftInitialState","initialCommittedState","monitorReducer","monitorState","0","liftReducerWith","initialLiftedState","liftedAction","_a","commitExcessActions","excess","idsToDelete","commitChanges","_b","Infinity","actionId_1","start","end","active","actionIds","Math","min","lastState","cmp","__read$1","StoreDevtools","reducers$","extension","scannedActions","initialState","liftedInitialState","liftReducer","liftedAction$","merge","asObservable","observeOn","queueScheduler","liftedReducer$","liftedStateSubject","ReplaySubject","liftedStateSubscription","withLatestFrom","scan","_c","reducedLiftedState","extensionStartSubscription","refresh","liftedState$","state$","stateSubscription","complete","performAction","reset","rollback","commit","sweep","toggleAction","jumpToAction","jumpToState","importState","lockChanges","pauseRecording","ReducerObservable","ScannedActionsSubject","ErrorHandler","INITIAL_STATE","IS_EXTENSION_OR_MONITOR_PRESENT","createIsExtensionOrMonitorPresent","Boolean","createReduxDevtoolsExtension","window","createStateObservable","devtools","StoreDevtoolsModule","instrument","ngModule","providers","provide","useValue","deps","useFactory","StateObservable","ReducerManagerDispatcher","useExisting","NgModule","ɵngrx_modules_store_devtools_store_devtools_f","ɵngrx_modules_store_devtools_store_devtools_e","ɵngrx_modules_store_devtools_store_devtools_h","ɵngrx_modules_store_devtools_store_devtools_g","ɵngrx_modules_store_devtools_store_devtools_k","ɵngrx_modules_store_devtools_store_devtools_j","ɵngrx_modules_store_devtools_store_devtools_i","ɵngrx_modules_store_devtools_store_devtools_a","ɵngrx_modules_store_devtools_store_devtools_b","ɵngrx_modules_store_devtools_store_devtools_c","ɵngrx_modules_store_devtools_store_devtools_d","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.0+50.sha-0cd7460\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/store-devtools', ['exports', '@angular/core', '@ngrx/store', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.storeDevtools = {}),global.ng.core,global['@ngrx/store'],global.rxjs,global.rxjs.operators));\n}(this, (function (exports,core,store,rxjs,operators) { 'use strict';\n\n    var StoreDevtoolsConfig = /** @class */ (function () {\n        function StoreDevtoolsConfig() {\n        }\n        return StoreDevtoolsConfig;\n    }());\n    var STORE_DEVTOOLS_CONFIG = new core.InjectionToken('@ngrx/devtools Options');\n    var INITIAL_OPTIONS = new core.InjectionToken('@ngrx/devtools Initial Config');\n    function noMonitor() {\n        return null;\n    }\n    var DEFAULT_NAME = 'NgRx Store DevTools';\n    function createConfig(_options) {\n        var DEFAULT_OPTIONS = {\n            maxAge: false,\n            monitor: noMonitor,\n            actionSanitizer: undefined,\n            stateSanitizer: undefined,\n            name: DEFAULT_NAME,\n            serialize: false,\n            logOnly: false,\n            // Add all features explicitely. This prevent buggy behavior for\n            // options like \"lock\" which might otherwise not show up.\n            features: {\n                pause: true,\n                lock: true,\n                persist: true,\n                export: true,\n                import: 'custom',\n                jump: true,\n                skip: true,\n                reorder: true,\n                dispatch: true,\n                test: true,\n            },\n        };\n        var options = typeof _options === 'function' ? _options() : _options;\n        var logOnly = options.logOnly\n            ? { pause: true, export: true, test: true }\n            : false;\n        var features = options.features || logOnly || DEFAULT_OPTIONS.features;\n        var config = Object.assign({}, DEFAULT_OPTIONS, { features: features }, options);\n        if (config.maxAge && config.maxAge < 2) {\n            throw new Error(\"Devtools 'maxAge' cannot be less than 2, got \" + config.maxAge);\n        }\n        return config;\n    }\n\n    var PERFORM_ACTION = 'PERFORM_ACTION';\n    var REFRESH = 'REFRESH';\n    var RESET = 'RESET';\n    var ROLLBACK = 'ROLLBACK';\n    var COMMIT = 'COMMIT';\n    var SWEEP = 'SWEEP';\n    var TOGGLE_ACTION = 'TOGGLE_ACTION';\n    var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\n    var JUMP_TO_STATE = 'JUMP_TO_STATE';\n    var JUMP_TO_ACTION = 'JUMP_TO_ACTION';\n    var IMPORT_STATE = 'IMPORT_STATE';\n    var LOCK_CHANGES = 'LOCK_CHANGES';\n    var PAUSE_RECORDING = 'PAUSE_RECORDING';\n    var PerformAction = /** @class */ (function () {\n        function PerformAction(action, timestamp) {\n            this.action = action;\n            this.timestamp = timestamp;\n            this.type = PERFORM_ACTION;\n            if (typeof action.type === 'undefined') {\n                throw new Error('Actions may not have an undefined \"type\" property. ' +\n                    'Have you misspelled a constant?');\n            }\n        }\n        return PerformAction;\n    }());\n    var Refresh = /** @class */ (function () {\n        function Refresh() {\n            this.type = REFRESH;\n        }\n        return Refresh;\n    }());\n    var Reset = /** @class */ (function () {\n        function Reset(timestamp) {\n            this.timestamp = timestamp;\n            this.type = RESET;\n        }\n        return Reset;\n    }());\n    var Rollback = /** @class */ (function () {\n        function Rollback(timestamp) {\n            this.timestamp = timestamp;\n            this.type = ROLLBACK;\n        }\n        return Rollback;\n    }());\n    var Commit = /** @class */ (function () {\n        function Commit(timestamp) {\n            this.timestamp = timestamp;\n            this.type = COMMIT;\n        }\n        return Commit;\n    }());\n    var Sweep = /** @class */ (function () {\n        function Sweep() {\n            this.type = SWEEP;\n        }\n        return Sweep;\n    }());\n    var ToggleAction = /** @class */ (function () {\n        function ToggleAction(id) {\n            this.id = id;\n            this.type = TOGGLE_ACTION;\n        }\n        return ToggleAction;\n    }());\n    var JumpToState = /** @class */ (function () {\n        function JumpToState(index) {\n            this.index = index;\n            this.type = JUMP_TO_STATE;\n        }\n        return JumpToState;\n    }());\n    var JumpToAction = /** @class */ (function () {\n        function JumpToAction(actionId) {\n            this.actionId = actionId;\n            this.type = JUMP_TO_ACTION;\n        }\n        return JumpToAction;\n    }());\n    var ImportState = /** @class */ (function () {\n        function ImportState(nextLiftedState) {\n            this.nextLiftedState = nextLiftedState;\n            this.type = IMPORT_STATE;\n        }\n        return ImportState;\n    }());\n    var LockChanges = /** @class */ (function () {\n        function LockChanges(status) {\n            this.status = status;\n            this.type = LOCK_CHANGES;\n        }\n        return LockChanges;\n    }());\n    var PauseRecording = /** @class */ (function () {\n        function PauseRecording(status) {\n            this.status = status;\n            this.type = PAUSE_RECORDING;\n        }\n        return PauseRecording;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    function difference(first, second) {\n        return first.filter(function (item) { return second.indexOf(item) < 0; });\n    }\n    /**\n     * Provides an app's view into the state of the lifted store.\n     */\n    function unliftState(liftedState) {\n        var computedStates = liftedState.computedStates, currentStateIndex = liftedState.currentStateIndex;\n        var state = computedStates[currentStateIndex].state;\n        return state;\n    }\n    /**\n     * Lifts an app's action into an action on the lifted store.\n     */\n    function liftAction(action) {\n        return new PerformAction(action, +Date.now());\n    }\n    /**\n     * Sanitizes given actions with given function.\n     */\n    function sanitizeActions(actionSanitizer, actions) {\n        return Object.keys(actions).reduce(function (sanitizedActions, actionIdx) {\n            var idx = Number(actionIdx);\n            sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n            return sanitizedActions;\n        }, {});\n    }\n    /**\n     * Sanitizes given action with given function.\n     */\n    function sanitizeAction(actionSanitizer, action, actionIdx) {\n        return __assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n    }\n    /**\n     * Sanitizes given states with given function.\n     */\n    function sanitizeStates(stateSanitizer, states) {\n        return states.map(function (computedState, idx) { return ({\n            state: sanitizeState(stateSanitizer, computedState.state, idx),\n            error: computedState.error,\n        }); });\n    }\n    /**\n     * Sanitizes given state with given function.\n     */\n    function sanitizeState(stateSanitizer, state, stateIdx) {\n        return stateSanitizer(state, stateIdx);\n    }\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var DevtoolsDispatcher = /** @class */ (function (_super) {\n        __extends(DevtoolsDispatcher, _super);\n        function DevtoolsDispatcher() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DevtoolsDispatcher.decorators = [\n            { type: core.Injectable }\n        ];\n        return DevtoolsDispatcher;\n    }(store.ActionsSubject));\n\n    var __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var ExtensionActionTypes = {\n        START: 'START',\n        DISPATCH: 'DISPATCH',\n        STOP: 'STOP',\n        ACTION: 'ACTION',\n    };\n    var REDUX_DEVTOOLS_EXTENSION = new core.InjectionToken('Redux Devtools Extension');\n    var DevtoolsExtension = /** @class */ (function () {\n        function DevtoolsExtension(devtoolsExtension, config, dispatcher) {\n            this.config = config;\n            this.dispatcher = dispatcher;\n            this.devtoolsExtension = devtoolsExtension;\n            this.createActionStreams();\n        }\n        DevtoolsExtension.prototype.notify = function (action, state) {\n            if (!this.devtoolsExtension) {\n                return;\n            }\n            // Check to see if the action requires a full update of the liftedState.\n            // If it is a simple action generated by the user's app and the recording\n            // is not locked/paused, only send the action and the current state (fast).\n            //\n            // A full liftedState update (slow: serializes the entire liftedState) is\n            // only required when:\n            //   a) redux-devtools-extension fires the @@Init action (ignored by\n            //      @ngrx/store-devtools)\n            //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n            //      or @ngrx/store/update-reducers)\n            //   c) the state has been recomputed due to time-traveling\n            //   d) any action that is not a PerformAction to err on the side of\n            //      caution.\n            if (action.type === PERFORM_ACTION) {\n                if (state.isLocked || state.isPaused) {\n                    return;\n                }\n                var currentState = unliftState(state);\n                var sanitizedState = this.config.stateSanitizer\n                    ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                    : currentState;\n                var sanitizedAction = this.config.actionSanitizer\n                    ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                    : action;\n                this.extensionConnection.send(sanitizedAction, sanitizedState);\n            }\n            else {\n                // Requires full state update\n                var sanitizedLiftedState = __assign$1({}, state, { actionsById: this.config.actionSanitizer\n                        ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                        : state.actionsById, computedStates: this.config.stateSanitizer\n                        ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                        : state.computedStates });\n                this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.config));\n            }\n        };\n        DevtoolsExtension.prototype.createChangesObservable = function () {\n            var _this = this;\n            if (!this.devtoolsExtension) {\n                return rxjs.empty();\n            }\n            return new rxjs.Observable(function (subscriber) {\n                var connection = _this.devtoolsExtension.connect(_this.getExtensionConfig(_this.config));\n                _this.extensionConnection = connection;\n                connection.init();\n                connection.subscribe(function (change) { return subscriber.next(change); });\n                return connection.unsubscribe;\n            });\n        };\n        DevtoolsExtension.prototype.createActionStreams = function () {\n            var _this = this;\n            // Listens to all changes\n            var changes$ = this.createChangesObservable().pipe(operators.share());\n            // Listen for the start action\n            var start$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.START; }));\n            // Listen for the stop action\n            var stop$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.STOP; }));\n            // Listen for lifted actions\n            var liftedActions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.DISPATCH; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }), operators.concatMap(function (action) {\n                if (action.type === IMPORT_STATE) {\n                    // State imports may happen in two situations:\n                    // 1. Explicitly by user\n                    // 2. User activated the \"persist state accross reloads\" option\n                    //    and now the state is imported during reload.\n                    // Because of option 2, we need to give possible\n                    // lazy loaded reducers time to instantiate.\n                    // As soon as there is no UPDATE action within 1 second,\n                    // it is assumed that all reducers are loaded.\n                    return _this.dispatcher.pipe(operators.filter(function (action) { return action.type === store.UPDATE; }), operators.timeout(1000), operators.debounceTime(1000), operators.map(function () { return action; }), operators.catchError(function () { return rxjs.of(action); }), operators.take(1));\n                }\n                else {\n                    return rxjs.of(action);\n                }\n            }));\n            // Listen for unlifted actions\n            var actions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.ACTION; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }));\n            var actionsUntilStop$ = actions$.pipe(operators.takeUntil(stop$));\n            var liftedUntilStop$ = liftedActions$.pipe(operators.takeUntil(stop$));\n            this.start$ = start$.pipe(operators.takeUntil(stop$));\n            // Only take the action sources between the start/stop events\n            this.actions$ = this.start$.pipe(operators.switchMap(function () { return actionsUntilStop$; }));\n            this.liftedActions$ = this.start$.pipe(operators.switchMap(function () { return liftedUntilStop$; }));\n        };\n        DevtoolsExtension.prototype.unwrapAction = function (action) {\n            return typeof action === 'string' ? eval(\"(\" + action + \")\") : action;\n        };\n        DevtoolsExtension.prototype.getExtensionConfig = function (config) {\n            var extensionOptions = {\n                name: config.name,\n                features: config.features,\n                serialize: config.serialize,\n            };\n            if (config.maxAge !== false /* support === 0 */) {\n                extensionOptions.maxAge = config.maxAge;\n            }\n            return extensionOptions;\n        };\n        DevtoolsExtension.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        DevtoolsExtension.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [REDUX_DEVTOOLS_EXTENSION,] }] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] }] },\n            { type: DevtoolsDispatcher }\n        ]; };\n        return DevtoolsExtension;\n    }());\n\n    var __assign$2 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var INIT_ACTION = { type: store.INIT };\n    /**\n     * Computes the next entry in the log by applying an action.\n     */\n    function computeNextEntry(reducer, action, state, error, errorHandler) {\n        if (error) {\n            return {\n                state: state,\n                error: 'Interrupted by an error up the chain',\n            };\n        }\n        var nextState = state;\n        var nextError;\n        try {\n            nextState = reducer(state, action);\n        }\n        catch (err) {\n            nextError = err.toString();\n            errorHandler.handleError(err.stack || err);\n        }\n        return {\n            state: nextState,\n            error: nextError,\n        };\n    }\n    /**\n     * Runs the reducer on invalidated actions to get a fresh computation log.\n     */\n    function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused) {\n        // Optimization: exit early and return the same reference\n        // if we know nothing could have changed.\n        if (minInvalidatedStateIndex >= computedStates.length &&\n            computedStates.length === stagedActionIds.length) {\n            return computedStates;\n        }\n        var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n        // If the recording is paused, recompute all states up until the pause state,\n        // else recompute all states.\n        var lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n        for (var i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n            var actionId = stagedActionIds[i];\n            var action = actionsById[actionId].action;\n            var previousEntry = nextComputedStates[i - 1];\n            var previousState = previousEntry ? previousEntry.state : committedState;\n            var previousError = previousEntry ? previousEntry.error : undefined;\n            var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n            var entry = shouldSkip\n                ? previousEntry\n                : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n            nextComputedStates.push(entry);\n        }\n        // If the recording is paused, the last state will not be recomputed,\n        // because it's essentially not part of the state history.\n        if (isPaused) {\n            nextComputedStates.push(computedStates[computedStates.length - 1]);\n        }\n        return nextComputedStates;\n    }\n    function liftInitialState(initialCommittedState, monitorReducer) {\n        return {\n            monitorState: monitorReducer(undefined, {}),\n            nextActionId: 1,\n            actionsById: { 0: liftAction(INIT_ACTION) },\n            stagedActionIds: [0],\n            skippedActionIds: [],\n            committedState: initialCommittedState,\n            currentStateIndex: 0,\n            computedStates: [],\n            isLocked: false,\n            isPaused: false,\n        };\n    }\n    /**\n     * Creates a history state reducer from an app's reducer.\n     */\n    function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * Manages how the history actions modify the history state.\n         */\n        return function (reducer) { return function (liftedState, liftedAction) {\n            var _a = liftedState || initialLiftedState, monitorState = _a.monitorState, actionsById = _a.actionsById, nextActionId = _a.nextActionId, stagedActionIds = _a.stagedActionIds, skippedActionIds = _a.skippedActionIds, committedState = _a.committedState, currentStateIndex = _a.currentStateIndex, computedStates = _a.computedStates, isLocked = _a.isLocked, isPaused = _a.isPaused;\n            if (!liftedState) {\n                // Prevent mutating initialLiftedState\n                actionsById = Object.create(actionsById);\n            }\n            function commitExcessActions(n) {\n                // Auto-commits n-number of excess actions.\n                var excess = n;\n                var idsToDelete = stagedActionIds.slice(1, excess + 1);\n                for (var i = 0; i < idsToDelete.length; i++) {\n                    if (computedStates[i + 1].error) {\n                        // Stop if error is found. Commit actions up to error.\n                        excess = i;\n                        idsToDelete = stagedActionIds.slice(1, excess + 1);\n                        break;\n                    }\n                    else {\n                        delete actionsById[idsToDelete[i]];\n                    }\n                }\n                skippedActionIds = skippedActionIds.filter(function (id) { return idsToDelete.indexOf(id) === -1; });\n                stagedActionIds = __spread([0], stagedActionIds.slice(excess + 1));\n                committedState = computedStates[excess].state;\n                computedStates = computedStates.slice(excess);\n                currentStateIndex =\n                    currentStateIndex > excess ? currentStateIndex - excess : 0;\n            }\n            function commitChanges() {\n                // Consider the last committed state the new starting point.\n                // Squash any staged actions into a single committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = computedStates[currentStateIndex].state;\n                currentStateIndex = 0;\n                computedStates = [];\n            }\n            // By default, aggressively recompute every state whatever happens.\n            // This has O(n) performance, so we'll override this to a sensible\n            // value whenever we feel like we don't have to recompute the states.\n            var minInvalidatedStateIndex = 0;\n            switch (liftedAction.type) {\n                case LOCK_CHANGES: {\n                    isLocked = liftedAction.status;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case PAUSE_RECORDING: {\n                    isPaused = liftedAction.status;\n                    if (isPaused) {\n                        // Add a pause action to signal the devtools-user the recording is paused.\n                        // The corresponding state will be overwritten on each update to always contain\n                        // the latest state (see Actions.PERFORM_ACTION).\n                        stagedActionIds = __spread(stagedActionIds, [nextActionId]);\n                        actionsById[nextActionId] = new PerformAction({\n                            type: '@ngrx/devtools/pause',\n                        }, +Date.now());\n                        nextActionId++;\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        computedStates = computedStates.concat(computedStates[computedStates.length - 1]);\n                        if (currentStateIndex === stagedActionIds.length - 2) {\n                            currentStateIndex++;\n                        }\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    else {\n                        commitChanges();\n                    }\n                    break;\n                }\n                case RESET: {\n                    // Get back to the state the store was created with.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    committedState = initialCommittedState;\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case COMMIT: {\n                    commitChanges();\n                    break;\n                }\n                case ROLLBACK: {\n                    // Forget about any staged actions.\n                    // Start again from the last committed state.\n                    actionsById = { 0: liftAction(INIT_ACTION) };\n                    nextActionId = 1;\n                    stagedActionIds = [0];\n                    skippedActionIds = [];\n                    currentStateIndex = 0;\n                    computedStates = [];\n                    break;\n                }\n                case TOGGLE_ACTION: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var actionId_1 = liftedAction.id;\n                    var index = skippedActionIds.indexOf(actionId_1);\n                    if (index === -1) {\n                        skippedActionIds = __spread([actionId_1], skippedActionIds);\n                    }\n                    else {\n                        skippedActionIds = skippedActionIds.filter(function (id) { return id !== actionId_1; });\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(actionId_1);\n                    break;\n                }\n                case SET_ACTIONS_ACTIVE: {\n                    // Toggle whether an action with given ID is skipped.\n                    // Being skipped means it is a no-op during the computation.\n                    var start = liftedAction.start, end = liftedAction.end, active = liftedAction.active;\n                    var actionIds = [];\n                    for (var i = start; i < end; i++)\n                        actionIds.push(i);\n                    if (active) {\n                        skippedActionIds = difference(skippedActionIds, actionIds);\n                    }\n                    else {\n                        skippedActionIds = __spread(skippedActionIds, actionIds);\n                    }\n                    // Optimization: we know history before this action hasn't changed\n                    minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                    break;\n                }\n                case JUMP_TO_STATE: {\n                    // Without recomputing anything, move the pointer that tell us\n                    // which state is considered the current one. Useful for sliders.\n                    currentStateIndex = liftedAction.index;\n                    // Optimization: we know the history has not changed.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case JUMP_TO_ACTION: {\n                    // Jumps to a corresponding state to a specific action.\n                    // Useful when filtering actions.\n                    var index = stagedActionIds.indexOf(liftedAction.actionId);\n                    if (index !== -1)\n                        currentStateIndex = index;\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                case SWEEP: {\n                    // Forget any actions that are currently being skipped.\n                    stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                    skippedActionIds = [];\n                    currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                    break;\n                }\n                case PERFORM_ACTION: {\n                    // Ignore action and return state as is if recording is locked\n                    if (isLocked) {\n                        return liftedState || initialLiftedState;\n                    }\n                    if (isPaused) {\n                        // If recording is paused, overwrite the last state\n                        // (corresponds to the pause action) and keep everything else as is.\n                        // This way, the app gets the new current state while the devtools\n                        // do not record another action.\n                        var lastState = computedStates[computedStates.length - 1];\n                        computedStates = __spread(computedStates.slice(0, -1), [\n                            computeNextEntry(reducer, liftedAction.action, lastState.state, lastState.error, errorHandler),\n                        ]);\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                    // Auto-commit as new actions come in.\n                    if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                        commitExcessActions(1);\n                    }\n                    if (currentStateIndex === stagedActionIds.length - 1) {\n                        currentStateIndex++;\n                    }\n                    var actionId = nextActionId++;\n                    // Mutation! This is the hottest path, and we optimize on purpose.\n                    // It is safe because we set a new key in a cache dictionary.\n                    actionsById[actionId] = liftedAction;\n                    stagedActionIds = __spread(stagedActionIds, [actionId]);\n                    // Optimization: we know that only the new action needs computing.\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    break;\n                }\n                case IMPORT_STATE: {\n                    // Completely replace everything.\n                    (_b = liftedAction.nextLiftedState, monitorState = _b.monitorState, actionsById = _b.actionsById, nextActionId = _b.nextActionId, stagedActionIds = _b.stagedActionIds, skippedActionIds = _b.skippedActionIds, committedState = _b.committedState, currentStateIndex = _b.currentStateIndex, computedStates = _b.computedStates, isLocked = _b.isLocked, \n                    // prettier-ignore\n                    isPaused = _b.isPaused);\n                    break;\n                }\n                case store.INIT: {\n                    // Always recompute states on hot reload and init.\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                case store.UPDATE: {\n                    var stateHasErrors = computedStates.filter(function (state) { return state.error; }).length > 0;\n                    if (stateHasErrors) {\n                        // Recompute all states\n                        minInvalidatedStateIndex = 0;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                    }\n                    else {\n                        // If not paused/locked, add a new action to signal devtools-user\n                        // that there was a reducer update.\n                        if (!isPaused && !isLocked) {\n                            if (currentStateIndex === stagedActionIds.length - 1) {\n                                currentStateIndex++;\n                            }\n                            // Add a new action to only recompute state\n                            var actionId = nextActionId++;\n                            actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                            stagedActionIds = __spread(stagedActionIds, [actionId]);\n                            minInvalidatedStateIndex = stagedActionIds.length - 1;\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        }\n                        // Recompute state history with latest reducer and update action\n                        computedStates = computedStates.map(function (cmp) { return (__assign$2({}, cmp, { state: reducer(cmp.state, liftedAction) })); });\n                        currentStateIndex = stagedActionIds.length - 1;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                        }\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                    break;\n                }\n                default: {\n                    // If the action is not recognized, it's a monitor action.\n                    // Optimization: a monitor action can't change history.\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n            }\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n            monitorState = monitorReducer(monitorState, liftedAction);\n            return {\n                monitorState: monitorState,\n                actionsById: actionsById,\n                nextActionId: nextActionId,\n                stagedActionIds: stagedActionIds,\n                skippedActionIds: skippedActionIds,\n                committedState: committedState,\n                currentStateIndex: currentStateIndex,\n                computedStates: computedStates,\n                isLocked: isLocked,\n                isPaused: isPaused,\n            };\n            var _b;\n        }; };\n    }\n\n    var __read$1 = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var StoreDevtools = /** @class */ (function () {\n        function StoreDevtools(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n            var _this = this;\n            var liftedInitialState = liftInitialState(initialState, config.monitor);\n            var liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n            var liftedAction$ = rxjs.merge(rxjs.merge(actions$.asObservable().pipe(operators.skip(1)), extension.actions$).pipe(operators.map(liftAction)), dispatcher, extension.liftedActions$).pipe(operators.observeOn(rxjs.queueScheduler));\n            var liftedReducer$ = reducers$.pipe(operators.map(liftReducer));\n            var liftedStateSubject = new rxjs.ReplaySubject(1);\n            var liftedStateSubscription = liftedAction$\n                .pipe(operators.withLatestFrom(liftedReducer$), operators.scan(function (_a, _b) {\n                var liftedState = _a.state;\n                var _c = __read$1(_b, 2), action = _c[0], reducer = _c[1];\n                var reducedLiftedState = reducer(liftedState, action);\n                // // Extension should be sent the sanitized lifted state\n                extension.notify(action, reducedLiftedState);\n                return { state: reducedLiftedState, action: action };\n            }, { state: liftedInitialState, action: null }))\n                .subscribe(function (_a) {\n                var state = _a.state, action = _a.action;\n                liftedStateSubject.next(state);\n                if (action.type === PERFORM_ACTION) {\n                    var unliftedAction = action.action;\n                    scannedActions.next(unliftedAction);\n                }\n            });\n            var extensionStartSubscription = extension.start$.subscribe(function () {\n                _this.refresh();\n            });\n            var liftedState$ = liftedStateSubject.asObservable();\n            var state$ = liftedState$.pipe(operators.map(unliftState));\n            this.extensionStartSubscription = extensionStartSubscription;\n            this.stateSubscription = liftedStateSubscription;\n            this.dispatcher = dispatcher;\n            this.liftedState = liftedState$;\n            this.state = state$;\n        }\n        StoreDevtools.prototype.dispatch = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.next = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.error = function (error) { };\n        StoreDevtools.prototype.complete = function () { };\n        StoreDevtools.prototype.performAction = function (action) {\n            this.dispatch(new PerformAction(action, +Date.now()));\n        };\n        StoreDevtools.prototype.refresh = function () {\n            this.dispatch(new Refresh());\n        };\n        StoreDevtools.prototype.reset = function () {\n            this.dispatch(new Reset(+Date.now()));\n        };\n        StoreDevtools.prototype.rollback = function () {\n            this.dispatch(new Rollback(+Date.now()));\n        };\n        StoreDevtools.prototype.commit = function () {\n            this.dispatch(new Commit(+Date.now()));\n        };\n        StoreDevtools.prototype.sweep = function () {\n            this.dispatch(new Sweep());\n        };\n        StoreDevtools.prototype.toggleAction = function (id) {\n            this.dispatch(new ToggleAction(id));\n        };\n        StoreDevtools.prototype.jumpToAction = function (actionId) {\n            this.dispatch(new JumpToAction(actionId));\n        };\n        StoreDevtools.prototype.jumpToState = function (index) {\n            this.dispatch(new JumpToState(index));\n        };\n        StoreDevtools.prototype.importState = function (nextLiftedState) {\n            this.dispatch(new ImportState(nextLiftedState));\n        };\n        StoreDevtools.prototype.lockChanges = function (status) {\n            this.dispatch(new LockChanges(status));\n        };\n        StoreDevtools.prototype.pauseRecording = function (status) {\n            this.dispatch(new PauseRecording(status));\n        };\n        StoreDevtools.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        StoreDevtools.ctorParameters = function () { return [\n            { type: DevtoolsDispatcher },\n            { type: store.ActionsSubject },\n            { type: store.ReducerObservable },\n            { type: DevtoolsExtension },\n            { type: store.ScannedActionsSubject },\n            { type: core.ErrorHandler },\n            { type: undefined, decorators: [{ type: core.Inject, args: [store.INITIAL_STATE,] }] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] }] }\n        ]; };\n        return StoreDevtools;\n    }());\n\n    var IS_EXTENSION_OR_MONITOR_PRESENT = new core.InjectionToken('Is Devtools Extension or Monitor Present');\n    function createIsExtensionOrMonitorPresent(extension, config) {\n        return Boolean(extension) || config.monitor !== noMonitor;\n    }\n    function createReduxDevtoolsExtension() {\n        var extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n        if (typeof window === 'object' &&\n            typeof window[extensionKey] !== 'undefined') {\n            return window[extensionKey];\n        }\n        else {\n            return null;\n        }\n    }\n    function createStateObservable(devtools) {\n        return devtools.state;\n    }\n    var StoreDevtoolsModule = /** @class */ (function () {\n        function StoreDevtoolsModule() {\n        }\n        StoreDevtoolsModule.instrument = function (options) {\n            if (options === void 0) { options = {}; }\n            return {\n                ngModule: StoreDevtoolsModule,\n                providers: [\n                    DevtoolsExtension,\n                    DevtoolsDispatcher,\n                    StoreDevtools,\n                    {\n                        provide: INITIAL_OPTIONS,\n                        useValue: options,\n                    },\n                    {\n                        provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                        deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                        useFactory: createIsExtensionOrMonitorPresent,\n                    },\n                    {\n                        provide: REDUX_DEVTOOLS_EXTENSION,\n                        useFactory: createReduxDevtoolsExtension,\n                    },\n                    {\n                        provide: STORE_DEVTOOLS_CONFIG,\n                        deps: [INITIAL_OPTIONS],\n                        useFactory: createConfig,\n                    },\n                    {\n                        provide: store.StateObservable,\n                        deps: [StoreDevtools],\n                        useFactory: createStateObservable,\n                    },\n                    {\n                        provide: store.ReducerManagerDispatcher,\n                        useExisting: DevtoolsDispatcher,\n                    },\n                ],\n            };\n        };\n        StoreDevtoolsModule.decorators = [\n            { type: core.NgModule, args: [{},] }\n        ];\n        return StoreDevtoolsModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_store_devtools_store_devtools_f = INITIAL_OPTIONS;\n    exports.ɵngrx_modules_store_devtools_store_devtools_e = STORE_DEVTOOLS_CONFIG;\n    exports.ɵngrx_modules_store_devtools_store_devtools_h = createConfig;\n    exports.ɵngrx_modules_store_devtools_store_devtools_g = noMonitor;\n    exports.ɵngrx_modules_store_devtools_store_devtools_k = DevtoolsDispatcher;\n    exports.ɵngrx_modules_store_devtools_store_devtools_j = DevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_i = REDUX_DEVTOOLS_EXTENSION;\n    exports.ɵngrx_modules_store_devtools_store_devtools_a = IS_EXTENSION_OR_MONITOR_PRESENT;\n    exports.ɵngrx_modules_store_devtools_store_devtools_b = createIsExtensionOrMonitorPresent;\n    exports.ɵngrx_modules_store_devtools_store_devtools_c = createReduxDevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_d = createStateObservable;\n    exports.StoreDevtoolsModule = StoreDevtoolsModule;\n    exports.StoreDevtools = StoreDevtools;\n    exports.StoreDevtoolsConfig = StoreDevtoolsConfig;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=store-devtools.umd.js.map\n"]}