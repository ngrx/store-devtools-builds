{"version":3,"file":"store-devtools.js","sources":["../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/config.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/actions.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/utils.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/extension.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/reducer.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/devtools.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/instrument.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/src/index.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/public_api.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/index.js","../../../../../../../../../../execroot/ngrx/bazel-out/k8-fastbuild/bin/modules/store-devtools/npm_package.es6/modules/store-devtools/store-devtools.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { InjectionToken } from '@angular/core';\nexport class StoreDevtoolsConfig {\n}\nfunction StoreDevtoolsConfig_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.maxAge;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.monitor;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.actionSanitizer;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.stateSanitizer;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.name;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.serialize;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.logOnly;\n    /** @type {?} */\n    StoreDevtoolsConfig.prototype.features;\n}\nexport const /** @type {?} */ STORE_DEVTOOLS_CONFIG = new InjectionToken('@ngrx/devtools Options');\nexport const /** @type {?} */ INITIAL_OPTIONS = new InjectionToken('@ngrx/devtools Initial Config');\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9zdG9yZS1kZXZ0b29scy9zcmMvY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsY0FBYyxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBWXJELE1BQU07Q0FTTDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVELE1BQU0sQ0FBQyx1QkFBTSxxQkFBcUIsR0FBRyxJQUFJLGNBQWMsQ0FDckQsd0JBQXdCLENBQ3pCLENBQUM7QUFDRixNQUFNLENBQUMsdUJBQU0sZUFBZSxHQUFHLElBQUksY0FBYyxDQUMvQywrQkFBK0IsQ0FDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGlvblJlZHVjZXIsIEFjdGlvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IEluamVjdGlvblRva2VuLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIEFjdGlvblNhbml0aXplciA9IChhY3Rpb246IEFjdGlvbiwgaWQ6IG51bWJlcikgPT4gQWN0aW9uO1xuZXhwb3J0IHR5cGUgU3RhdGVTYW5pdGl6ZXIgPSAoc3RhdGU6IGFueSwgaW5kZXg6IG51bWJlcikgPT4gYW55O1xuZXhwb3J0IHR5cGUgU2VyaWFsaXphdGlvbk9wdGlvbnMgPSB7XG4gIG9wdGlvbnM/OiBib29sZWFuIHwgYW55O1xuICByZXBsYWNlcj86IChrZXk6IGFueSwgdmFsdWU6IGFueSkgPT4ge307XG4gIHJldml2ZXI/OiAoa2V5OiBhbnksIHZhbHVlOiBhbnkpID0+IHt9O1xuICBpbW11dGFibGU/OiBhbnk7XG4gIHJlZnM/OiBBcnJheTxhbnk+O1xufTtcblxuZXhwb3J0IGNsYXNzIFN0b3JlRGV2dG9vbHNDb25maWcge1xuICBtYXhBZ2U6IG51bWJlciB8IGZhbHNlO1xuICBtb25pdG9yOiBBY3Rpb25SZWR1Y2VyPGFueSwgYW55PjtcbiAgYWN0aW9uU2FuaXRpemVyPzogQWN0aW9uU2FuaXRpemVyO1xuICBzdGF0ZVNhbml0aXplcj86IFN0YXRlU2FuaXRpemVyO1xuICBuYW1lPzogc3RyaW5nO1xuICBzZXJpYWxpemU/OiBib29sZWFuIHwgU2VyaWFsaXphdGlvbk9wdGlvbnM7XG4gIGxvZ09ubHk/OiBib29sZWFuO1xuICBmZWF0dXJlcz86IGFueTtcbn1cblxuZXhwb3J0IGNvbnN0IFNUT1JFX0RFVlRPT0xTX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxTdG9yZURldnRvb2xzQ29uZmlnPihcbiAgJ0BuZ3J4L2RldnRvb2xzIE9wdGlvbnMnXG4pO1xuZXhwb3J0IGNvbnN0IElOSVRJQUxfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxTdG9yZURldnRvb2xzQ29uZmlnPihcbiAgJ0BuZ3J4L2RldnRvb2xzIEluaXRpYWwgQ29uZmlnJ1xuKTtcblxuZXhwb3J0IHR5cGUgU3RvcmVEZXZ0b29sc09wdGlvbnMgPVxuICB8IFBhcnRpYWw8U3RvcmVEZXZ0b29sc0NvbmZpZz5cbiAgfCAoKCkgPT4gUGFydGlhbDxTdG9yZURldnRvb2xzQ29uZmlnPik7XG4iXX0=","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport const /** @type {?} */ PERFORM_ACTION = 'PERFORM_ACTION';\nexport const /** @type {?} */ REFRESH = 'REFRESH';\nexport const /** @type {?} */ RESET = 'RESET';\nexport const /** @type {?} */ ROLLBACK = 'ROLLBACK';\nexport const /** @type {?} */ COMMIT = 'COMMIT';\nexport const /** @type {?} */ SWEEP = 'SWEEP';\nexport const /** @type {?} */ TOGGLE_ACTION = 'TOGGLE_ACTION';\nexport const /** @type {?} */ SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nexport const /** @type {?} */ JUMP_TO_STATE = 'JUMP_TO_STATE';\nexport const /** @type {?} */ JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nexport const /** @type {?} */ IMPORT_STATE = 'IMPORT_STATE';\nexport class PerformAction {\n    /**\n     * @param {?} action\n     * @param {?} timestamp\n     */\n    constructor(action, timestamp) {\n        this.action = action;\n        this.timestamp = timestamp;\n        this.type = PERFORM_ACTION;\n        if (typeof action.type === 'undefined') {\n            throw new Error('Actions may not have an undefined \"type\" property. ' +\n                'Have you misspelled a constant?');\n        }\n    }\n}\nfunction PerformAction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PerformAction.prototype.type;\n    /** @type {?} */\n    PerformAction.prototype.action;\n    /** @type {?} */\n    PerformAction.prototype.timestamp;\n}\nexport class Refresh {\n    constructor() {\n        this.type = REFRESH;\n    }\n}\nfunction Refresh_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Refresh.prototype.type;\n}\nexport class Reset {\n    /**\n     * @param {?} timestamp\n     */\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = RESET;\n    }\n}\nfunction Reset_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Reset.prototype.type;\n    /** @type {?} */\n    Reset.prototype.timestamp;\n}\nexport class Rollback {\n    /**\n     * @param {?} timestamp\n     */\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = ROLLBACK;\n    }\n}\nfunction Rollback_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Rollback.prototype.type;\n    /** @type {?} */\n    Rollback.prototype.timestamp;\n}\nexport class Commit {\n    /**\n     * @param {?} timestamp\n     */\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = COMMIT;\n    }\n}\nfunction Commit_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Commit.prototype.type;\n    /** @type {?} */\n    Commit.prototype.timestamp;\n}\nexport class Sweep {\n    constructor() {\n        this.type = SWEEP;\n    }\n}\nfunction Sweep_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Sweep.prototype.type;\n}\nexport class ToggleAction {\n    /**\n     * @param {?} id\n     */\n    constructor(id) {\n        this.id = id;\n        this.type = TOGGLE_ACTION;\n    }\n}\nfunction ToggleAction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ToggleAction.prototype.type;\n    /** @type {?} */\n    ToggleAction.prototype.id;\n}\nexport class SetActionsActive {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} active\n     */\n    constructor(start, end, active = true) {\n        this.start = start;\n        this.end = end;\n        this.active = active;\n        this.type = SET_ACTIONS_ACTIVE;\n    }\n}\nfunction SetActionsActive_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SetActionsActive.prototype.type;\n    /** @type {?} */\n    SetActionsActive.prototype.start;\n    /** @type {?} */\n    SetActionsActive.prototype.end;\n    /** @type {?} */\n    SetActionsActive.prototype.active;\n}\nexport class JumpToState {\n    /**\n     * @param {?} index\n     */\n    constructor(index) {\n        this.index = index;\n        this.type = JUMP_TO_STATE;\n    }\n}\nfunction JumpToState_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JumpToState.prototype.type;\n    /** @type {?} */\n    JumpToState.prototype.index;\n}\nexport class JumpToAction {\n    /**\n     * @param {?} actionId\n     */\n    constructor(actionId) {\n        this.actionId = actionId;\n        this.type = JUMP_TO_ACTION;\n    }\n}\nfunction JumpToAction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JumpToAction.prototype.type;\n    /** @type {?} */\n    JumpToAction.prototype.actionId;\n}\nexport class ImportState {\n    /**\n     * @param {?} nextLiftedState\n     */\n    constructor(nextLiftedState) {\n        this.nextLiftedState = nextLiftedState;\n        this.type = IMPORT_STATE;\n    }\n}\nfunction ImportState_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ImportState.prototype.type;\n    /** @type {?} */\n    ImportState.prototype.nextLiftedState;\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvc3JjL2FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE1BQU0sQ0FBQyx1QkFBTSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDL0MsTUFBTSxDQUFDLHVCQUFNLE9BQU8sR0FBRyxTQUFTLENBQUM7QUFDakMsTUFBTSxDQUFDLHVCQUFNLEtBQUssR0FBRyxPQUFPLENBQUM7QUFDN0IsTUFBTSxDQUFDLHVCQUFNLFFBQVEsR0FBRyxVQUFVLENBQUM7QUFDbkMsTUFBTSxDQUFDLHVCQUFNLE1BQU0sR0FBRyxRQUFRLENBQUM7QUFDL0IsTUFBTSxDQUFDLHVCQUFNLEtBQUssR0FBRyxPQUFPLENBQUM7QUFDN0IsTUFBTSxDQUFDLHVCQUFNLGFBQWEsR0FBRyxlQUFlLENBQUM7QUFDN0MsTUFBTSxDQUFDLHVCQUFNLGtCQUFrQixHQUFHLG9CQUFvQixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyx1QkFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBQzdDLE1BQU0sQ0FBQyx1QkFBTSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFDL0MsTUFBTSxDQUFDLHVCQUFNLFlBQVksR0FBRyxjQUFjLENBQUM7QUFFM0MsTUFBTTs7Ozs7SUFHSixZQUFtQixNQUFjLEVBQVMsU0FBaUI7UUFBeEMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFTLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRjNDLGNBQWM7UUFHNUIsRUFBRSxDQUFDLENBQUMsT0FBTyxNQUFNLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FDYixxREFBcUQ7Z0JBQ25ELGlDQUFpQyxDQUNwQyxDQUFDO1NBQ0g7S0FDRjtDQUNGOzs7Ozs7Ozs7QUFFRCxNQUFNOztvQkFDWSxPQUFPOztDQUN4Qjs7Ozs7QUFFRCxNQUFNOzs7O0lBR0osWUFBbUIsU0FBaUI7UUFBakIsY0FBUyxHQUFULFNBQVMsQ0FBUTtvQkFGcEIsS0FBSztLQUVtQjtDQUN6Qzs7Ozs7OztBQUVELE1BQU07Ozs7SUFHSixZQUFtQixTQUFpQjtRQUFqQixjQUFTLEdBQVQsU0FBUyxDQUFRO29CQUZwQixRQUFRO0tBRWdCO0NBQ3pDOzs7Ozs7O0FBRUQsTUFBTTs7OztJQUdKLFlBQW1CLFNBQWlCO1FBQWpCLGNBQVMsR0FBVCxTQUFTLENBQVE7b0JBRnBCLE1BQU07S0FFa0I7Q0FDekM7Ozs7Ozs7QUFFRCxNQUFNOztvQkFDWSxLQUFLOztDQUN0Qjs7Ozs7QUFFRCxNQUFNOzs7O0lBR0osWUFBbUIsRUFBVTtRQUFWLE9BQUUsR0FBRixFQUFFLENBQVE7b0JBRmIsYUFBYTtLQUVJO0NBQ2xDOzs7Ozs7O0FBRUQsTUFBTTs7Ozs7O0lBR0osWUFDUyxPQUNBLEtBQ0EsU0FBa0IsSUFBSTtRQUZ0QixVQUFLLEdBQUwsS0FBSztRQUNMLFFBQUcsR0FBSCxHQUFHO1FBQ0gsV0FBTSxHQUFOLE1BQU07b0JBTEMsa0JBQWtCO0tBTTlCO0NBQ0w7Ozs7Ozs7Ozs7O0FBRUQsTUFBTTs7OztJQUdKLFlBQW1CLEtBQWE7UUFBYixVQUFLLEdBQUwsS0FBSyxDQUFRO29CQUZoQixhQUFhO0tBRU87Q0FDckM7Ozs7Ozs7QUFFRCxNQUFNOzs7O0lBR0osWUFBbUIsUUFBZ0I7UUFBaEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtvQkFGbkIsY0FBYztLQUVTO0NBQ3hDOzs7Ozs7O0FBRUQsTUFBTTs7OztJQUdKLFlBQW1CLGVBQW9CO1FBQXBCLG9CQUFlLEdBQWYsZUFBZSxDQUFLO29CQUZ2QixZQUFZO0tBRWU7Q0FDNUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5cbmV4cG9ydCBjb25zdCBQRVJGT1JNX0FDVElPTiA9ICdQRVJGT1JNX0FDVElPTic7XG5leHBvcnQgY29uc3QgUkVGUkVTSCA9ICdSRUZSRVNIJztcbmV4cG9ydCBjb25zdCBSRVNFVCA9ICdSRVNFVCc7XG5leHBvcnQgY29uc3QgUk9MTEJBQ0sgPSAnUk9MTEJBQ0snO1xuZXhwb3J0IGNvbnN0IENPTU1JVCA9ICdDT01NSVQnO1xuZXhwb3J0IGNvbnN0IFNXRUVQID0gJ1NXRUVQJztcbmV4cG9ydCBjb25zdCBUT0dHTEVfQUNUSU9OID0gJ1RPR0dMRV9BQ1RJT04nO1xuZXhwb3J0IGNvbnN0IFNFVF9BQ1RJT05TX0FDVElWRSA9ICdTRVRfQUNUSU9OU19BQ1RJVkUnO1xuZXhwb3J0IGNvbnN0IEpVTVBfVE9fU1RBVEUgPSAnSlVNUF9UT19TVEFURSc7XG5leHBvcnQgY29uc3QgSlVNUF9UT19BQ1RJT04gPSAnSlVNUF9UT19BQ1RJT04nO1xuZXhwb3J0IGNvbnN0IElNUE9SVF9TVEFURSA9ICdJTVBPUlRfU1RBVEUnO1xuXG5leHBvcnQgY2xhc3MgUGVyZm9ybUFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBQRVJGT1JNX0FDVElPTjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgYWN0aW9uOiBBY3Rpb24sIHB1YmxpYyB0aW1lc3RhbXA6IG51bWJlcikge1xuICAgIGlmICh0eXBlb2YgYWN0aW9uLnR5cGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdBY3Rpb25zIG1heSBub3QgaGF2ZSBhbiB1bmRlZmluZWQgXCJ0eXBlXCIgcHJvcGVydHkuICcgK1xuICAgICAgICAgICdIYXZlIHlvdSBtaXNzcGVsbGVkIGEgY29uc3RhbnQ/J1xuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFJlZnJlc2ggaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gUkVGUkVTSDtcbn1cblxuZXhwb3J0IGNsYXNzIFJlc2V0IGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFJFU0VUO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0aW1lc3RhbXA6IG51bWJlcikge31cbn1cblxuZXhwb3J0IGNsYXNzIFJvbGxiYWNrIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFJPTExCQUNLO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0aW1lc3RhbXA6IG51bWJlcikge31cbn1cblxuZXhwb3J0IGNsYXNzIENvbW1pdCBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDT01NSVQ7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRpbWVzdGFtcDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgU3dlZXAgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU1dFRVA7XG59XG5cbmV4cG9ydCBjbGFzcyBUb2dnbGVBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gVE9HR0xFX0FDVElPTjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgaWQ6IG51bWJlcikge31cbn1cblxuZXhwb3J0IGNsYXNzIFNldEFjdGlvbnNBY3RpdmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0VUX0FDVElPTlNfQUNUSVZFO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBzdGFydDogbnVtYmVyLFxuICAgIHB1YmxpYyBlbmQ6IG51bWJlcixcbiAgICBwdWJsaWMgYWN0aXZlOiBib29sZWFuID0gdHJ1ZVxuICApIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBKdW1wVG9TdGF0ZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBKVU1QX1RPX1NUQVRFO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBpbmRleDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgSnVtcFRvQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IEpVTVBfVE9fQUNUSU9OO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhY3Rpb25JZDogbnVtYmVyKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgSW1wb3J0U3RhdGUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gSU1QT1JUX1NUQVRFO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBuZXh0TGlmdGVkU3RhdGU6IGFueSkge31cbn1cblxuZXhwb3J0IHR5cGUgQWxsID1cbiAgfCBQZXJmb3JtQWN0aW9uXG4gIHwgUmVmcmVzaFxuICB8IFJlc2V0XG4gIHwgUm9sbGJhY2tcbiAgfCBDb21taXRcbiAgfCBTd2VlcFxuICB8IFRvZ2dsZUFjdGlvblxuICB8IFNldEFjdGlvbnNBY3RpdmVcbiAgfCBKdW1wVG9TdGF0ZVxuICB8IEp1bXBUb0FjdGlvblxuICB8IEltcG9ydFN0YXRlO1xuIl19","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport * as Actions from './actions';\n/**\n * @param {?} first\n * @param {?} second\n * @return {?}\n */\nexport function difference(first, second) {\n    return first.filter(item => second.indexOf(item) < 0);\n}\n/**\n * Provides an app's view into the state of the lifted store.\n * @param {?} liftedState\n * @return {?}\n */\nexport function unliftState(liftedState) {\n    const { computedStates, currentStateIndex } = liftedState;\n    const { state } = computedStates[currentStateIndex];\n    return state;\n}\n/**\n * @param {?} liftedState\n * @return {?}\n */\nexport function unliftAction(liftedState) {\n    return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n/**\n * Lifts an app's action into an action on the lifted store.\n * @param {?} action\n * @return {?}\n */\nexport function liftAction(action) {\n    return new Actions.PerformAction(action, +Date.now());\n}\n/**\n * Sanitizes given actions with given function.\n * @param {?} actionSanitizer\n * @param {?} actions\n * @return {?}\n */\nexport function sanitizeActions(actionSanitizer, actions) {\n    return Object.keys(actions).reduce((sanitizedActions, actionIdx) => {\n        const /** @type {?} */ idx = Number(actionIdx);\n        sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n        return sanitizedActions;\n    }, /** @type {?} */ ({}));\n}\n/**\n * Sanitizes given action with given function.\n * @param {?} actionSanitizer\n * @param {?} action\n * @param {?} actionIdx\n * @return {?}\n */\nexport function sanitizeAction(actionSanitizer, action, actionIdx) {\n    return Object.assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n}\n/**\n * Sanitizes given states with given function.\n * @param {?} stateSanitizer\n * @param {?} states\n * @return {?}\n */\nexport function sanitizeStates(stateSanitizer, states) {\n    return states.map((computedState, idx) => ({\n        state: sanitizeState(stateSanitizer, computedState.state, idx),\n        error: computedState.error,\n    }));\n}\n/**\n * Sanitizes given state with given function.\n * @param {?} stateSanitizer\n * @param {?} state\n * @param {?} stateIdx\n * @return {?}\n */\nexport function sanitizeState(stateSanitizer, state, stateIdx) {\n    return stateSanitizer(state, stateIdx);\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3NyYy91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBR0EsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7Ozs7OztBQVNyQyxNQUFNLHFCQUFxQixLQUFZLEVBQUUsTUFBYTtJQUNwRCxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Q0FDdkQ7Ozs7OztBQUtELE1BQU0sc0JBQXNCLFdBQXdCO0lBQ2xELE1BQU0sRUFBRSxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxXQUFXLENBQUM7SUFDMUQsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBRXBELE1BQU0sQ0FBQyxLQUFLLENBQUM7Q0FDZDs7Ozs7QUFFRCxNQUFNLHVCQUF1QixXQUF3QjtJQUNuRCxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO0NBQzlEOzs7Ozs7QUFLRCxNQUFNLHFCQUFxQixNQUFjO0lBQ3ZDLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7Q0FDdkQ7Ozs7Ozs7QUFLRCxNQUFNLDBCQUNKLGVBQWdDLEVBQ2hDLE9BQXNCO0lBRXRCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FDaEMsQ0FBQyxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsRUFBRTtRQUM5Qix1QkFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlCLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLGNBQWMsQ0FDcEMsZUFBZSxFQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFDWixHQUFHLENBQ0osQ0FBQztRQUNGLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztLQUN6QixvQkFDYyxFQUFFLEVBQ2xCLENBQUM7Q0FDSDs7Ozs7Ozs7QUFLRCxNQUFNLHlCQUNKLGVBQWdDLEVBQ2hDLE1BQW9CLEVBQ3BCLFNBQWlCO0lBRWpCLE1BQU0sbUJBQ0QsTUFBTSxJQUNULE1BQU0sRUFBRSxlQUFlLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsSUFDakQ7Q0FDSDs7Ozs7OztBQUtELE1BQU0seUJBQ0osY0FBOEIsRUFDOUIsTUFBdUI7SUFFdkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pDLEtBQUssRUFBRSxhQUFhLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDO1FBQzlELEtBQUssRUFBRSxhQUFhLENBQUMsS0FBSztLQUMzQixDQUFDLENBQUMsQ0FBQztDQUNMOzs7Ozs7OztBQUtELE1BQU0sd0JBQ0osY0FBOEIsRUFDOUIsS0FBVSxFQUNWLFFBQWdCO0lBRWhCLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0NBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgKiBhcyBBY3Rpb25zIGZyb20gJy4vYWN0aW9ucyc7XG5pbXBvcnQgeyBBY3Rpb25TYW5pdGl6ZXIsIFN0YXRlU2FuaXRpemVyIH0gZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHtcbiAgQ29tcHV0ZWRTdGF0ZSxcbiAgTGlmdGVkQWN0aW9uLFxuICBMaWZ0ZWRBY3Rpb25zLFxuICBMaWZ0ZWRTdGF0ZSxcbn0gZnJvbSAnLi9yZWR1Y2VyJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2UoZmlyc3Q6IGFueVtdLCBzZWNvbmQ6IGFueVtdKSB7XG4gIHJldHVybiBmaXJzdC5maWx0ZXIoaXRlbSA9PiBzZWNvbmQuaW5kZXhPZihpdGVtKSA8IDApO1xufVxuXG4vKipcbiAqIFByb3ZpZGVzIGFuIGFwcCdzIHZpZXcgaW50byB0aGUgc3RhdGUgb2YgdGhlIGxpZnRlZCBzdG9yZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVubGlmdFN0YXRlKGxpZnRlZFN0YXRlOiBMaWZ0ZWRTdGF0ZSkge1xuICBjb25zdCB7IGNvbXB1dGVkU3RhdGVzLCBjdXJyZW50U3RhdGVJbmRleCB9ID0gbGlmdGVkU3RhdGU7XG4gIGNvbnN0IHsgc3RhdGUgfSA9IGNvbXB1dGVkU3RhdGVzW2N1cnJlbnRTdGF0ZUluZGV4XTtcblxuICByZXR1cm4gc3RhdGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bmxpZnRBY3Rpb24obGlmdGVkU3RhdGU6IExpZnRlZFN0YXRlKTogTGlmdGVkQWN0aW9uIHtcbiAgcmV0dXJuIGxpZnRlZFN0YXRlLmFjdGlvbnNCeUlkW2xpZnRlZFN0YXRlLm5leHRBY3Rpb25JZCAtIDFdO1xufVxuXG4vKipcbiAqIExpZnRzIGFuIGFwcCdzIGFjdGlvbiBpbnRvIGFuIGFjdGlvbiBvbiB0aGUgbGlmdGVkIHN0b3JlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbGlmdEFjdGlvbihhY3Rpb246IEFjdGlvbikge1xuICByZXR1cm4gbmV3IEFjdGlvbnMuUGVyZm9ybUFjdGlvbihhY3Rpb24sICtEYXRlLm5vdygpKTtcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgZ2l2ZW4gYWN0aW9ucyB3aXRoIGdpdmVuIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FuaXRpemVBY3Rpb25zKFxuICBhY3Rpb25TYW5pdGl6ZXI6IEFjdGlvblNhbml0aXplcixcbiAgYWN0aW9uczogTGlmdGVkQWN0aW9uc1xuKTogTGlmdGVkQWN0aW9ucyB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhhY3Rpb25zKS5yZWR1Y2UoXG4gICAgKHNhbml0aXplZEFjdGlvbnMsIGFjdGlvbklkeCkgPT4ge1xuICAgICAgY29uc3QgaWR4ID0gTnVtYmVyKGFjdGlvbklkeCk7XG4gICAgICBzYW5pdGl6ZWRBY3Rpb25zW2lkeF0gPSBzYW5pdGl6ZUFjdGlvbihcbiAgICAgICAgYWN0aW9uU2FuaXRpemVyLFxuICAgICAgICBhY3Rpb25zW2lkeF0sXG4gICAgICAgIGlkeFxuICAgICAgKTtcbiAgICAgIHJldHVybiBzYW5pdGl6ZWRBY3Rpb25zO1xuICAgIH0sXG4gICAgPExpZnRlZEFjdGlvbnM+e31cbiAgKTtcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgZ2l2ZW4gYWN0aW9uIHdpdGggZ2l2ZW4gZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZUFjdGlvbihcbiAgYWN0aW9uU2FuaXRpemVyOiBBY3Rpb25TYW5pdGl6ZXIsXG4gIGFjdGlvbjogTGlmdGVkQWN0aW9uLFxuICBhY3Rpb25JZHg6IG51bWJlclxuKTogTGlmdGVkQWN0aW9uIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5hY3Rpb24sXG4gICAgYWN0aW9uOiBhY3Rpb25TYW5pdGl6ZXIoYWN0aW9uLmFjdGlvbiwgYWN0aW9uSWR4KSxcbiAgfTtcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgZ2l2ZW4gc3RhdGVzIHdpdGggZ2l2ZW4gZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZVN0YXRlcyhcbiAgc3RhdGVTYW5pdGl6ZXI6IFN0YXRlU2FuaXRpemVyLFxuICBzdGF0ZXM6IENvbXB1dGVkU3RhdGVbXVxuKTogQ29tcHV0ZWRTdGF0ZVtdIHtcbiAgcmV0dXJuIHN0YXRlcy5tYXAoKGNvbXB1dGVkU3RhdGUsIGlkeCkgPT4gKHtcbiAgICBzdGF0ZTogc2FuaXRpemVTdGF0ZShzdGF0ZVNhbml0aXplciwgY29tcHV0ZWRTdGF0ZS5zdGF0ZSwgaWR4KSxcbiAgICBlcnJvcjogY29tcHV0ZWRTdGF0ZS5lcnJvcixcbiAgfSkpO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBnaXZlbiBzdGF0ZSB3aXRoIGdpdmVuIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FuaXRpemVTdGF0ZShcbiAgc3RhdGVTYW5pdGl6ZXI6IFN0YXRlU2FuaXRpemVyLFxuICBzdGF0ZTogYW55LFxuICBzdGF0ZUlkeDogbnVtYmVyXG4pIHtcbiAgcmV0dXJuIHN0YXRlU2FuaXRpemVyKHN0YXRlLCBzdGF0ZUlkeCk7XG59XG4iXX0=","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { empty, Observable } from 'rxjs';\nimport { filter, map, share, switchMap, takeUntil } from 'rxjs/operators';\nimport { PERFORM_ACTION } from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig, } from './config';\nimport { sanitizeAction, sanitizeActions, sanitizeState, sanitizeStates, unliftState, } from './utils';\nexport const /** @type {?} */ ExtensionActionTypes = {\n    START: 'START',\n    DISPATCH: 'DISPATCH',\n    STOP: 'STOP',\n    ACTION: 'ACTION',\n};\nexport const /** @type {?} */ REDUX_DEVTOOLS_EXTENSION = new InjectionToken('Redux Devtools Extension');\n/**\n * @record\n */\nexport function ReduxDevtoolsExtensionConnection() { }\nfunction ReduxDevtoolsExtensionConnection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReduxDevtoolsExtensionConnection.prototype.subscribe;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConnection.prototype.unsubscribe;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConnection.prototype.send;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConnection.prototype.init;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConnection.prototype.error;\n}\n/**\n * @record\n */\nexport function ReduxDevtoolsExtensionConfig() { }\nfunction ReduxDevtoolsExtensionConfig_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    ReduxDevtoolsExtensionConfig.prototype.features;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConfig.prototype.name;\n    /** @type {?} */\n    ReduxDevtoolsExtensionConfig.prototype.instanceId;\n    /** @type {?|undefined} */\n    ReduxDevtoolsExtensionConfig.prototype.maxAge;\n    /** @type {?|undefined} */\n    ReduxDevtoolsExtensionConfig.prototype.serialize;\n}\n/**\n * @record\n */\nexport function ReduxDevtoolsExtension() { }\nfunction ReduxDevtoolsExtension_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReduxDevtoolsExtension.prototype.connect;\n    /** @type {?} */\n    ReduxDevtoolsExtension.prototype.send;\n}\nexport class DevtoolsExtension {\n    /**\n     * @param {?} devtoolsExtension\n     * @param {?} config\n     */\n    constructor(devtoolsExtension, config) {\n        this.config = config;\n        this.instanceId = `ngrx-store-${Date.now()}`;\n        this.devtoolsExtension = devtoolsExtension;\n        this.createActionStreams();\n    }\n    /**\n     * @param {?} action\n     * @param {?} state\n     * @return {?}\n     */\n    notify(action, state) {\n        if (!this.devtoolsExtension) {\n            return;\n        }\n        // Check to see if the action requires a full update of the liftedState.\n        // If it is a simple action generated by the user's app, only send the\n        // action and the current state (fast).\n        //\n        // A full liftedState update (slow: serializes the entire liftedState) is\n        // only required when:\n        //   a) redux-devtools-extension fires the @@Init action (ignored by\n        //      @ngrx/store-devtools)\n        //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n        //      or @ngrx/store/update-reducers)\n        //   c) the state has been recomputed due to time-traveling\n        //   d) any action that is not a PerformAction to err on the side of\n        //      caution.\n        if (action.type === PERFORM_ACTION) {\n            const /** @type {?} */ currentState = unliftState(state);\n            const /** @type {?} */ sanitizedState = this.config.stateSanitizer\n                ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                : currentState;\n            const /** @type {?} */ sanitizedAction = this.config.actionSanitizer\n                ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                : action;\n            this.extensionConnection.send(sanitizedAction, sanitizedState);\n        }\n        else {\n            // Requires full state update\n            const /** @type {?} */ sanitizedLiftedState = Object.assign({}, state, { actionsById: this.config.actionSanitizer\n                    ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                    : state.actionsById, computedStates: this.config.stateSanitizer\n                    ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                    : state.computedStates });\n            this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.instanceId, this.config), this.instanceId);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    createChangesObservable() {\n        if (!this.devtoolsExtension) {\n            return empty();\n        }\n        return new Observable(subscriber => {\n            const /** @type {?} */ connection = this.devtoolsExtension.connect(this.getExtensionConfig(this.instanceId, this.config));\n            this.extensionConnection = connection;\n            connection.init();\n            connection.subscribe((change) => subscriber.next(change));\n            return connection.unsubscribe;\n        });\n    }\n    /**\n     * @return {?}\n     */\n    createActionStreams() {\n        // Listens to all changes based on our instanceId\n        const /** @type {?} */ changes$ = this.createChangesObservable().pipe(share());\n        // Listen for the start action\n        const /** @type {?} */ start$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.START));\n        // Listen for the stop action\n        const /** @type {?} */ stop$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.STOP));\n        // Listen for lifted actions\n        const /** @type {?} */ liftedActions$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.DISPATCH), map(change => this.unwrapAction(change.payload)));\n        // Listen for unlifted actions\n        const /** @type {?} */ actions$ = changes$.pipe(filter(change => change.type === ExtensionActionTypes.ACTION), map(change => this.unwrapAction(change.payload)));\n        const /** @type {?} */ actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n        const /** @type {?} */ liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n        this.start$ = start$.pipe(takeUntil(stop$));\n        // Only take the action sources between the start/stop events\n        this.actions$ = this.start$.pipe(switchMap(() => actionsUntilStop$));\n        this.liftedActions$ = this.start$.pipe(switchMap(() => liftedUntilStop$));\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    unwrapAction(action) {\n        return typeof action === 'string' ? eval(`(${action})`) : action;\n    }\n    /**\n     * @param {?} instanceId\n     * @param {?} config\n     * @return {?}\n     */\n    getExtensionConfig(instanceId, config) {\n        const /** @type {?} */ extensionOptions = {\n            instanceId: instanceId,\n            name: config.name,\n            features: config.features,\n            serialize: config.serialize,\n        };\n        if (config.maxAge !== false /* support === 0 */) {\n            extensionOptions.maxAge = config.maxAge;\n        }\n        return extensionOptions;\n    }\n}\nDevtoolsExtension.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDevtoolsExtension.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [REDUX_DEVTOOLS_EXTENSION,] },] },\n    { type: StoreDevtoolsConfig, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n];\nfunction DevtoolsExtension_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DevtoolsExtension.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DevtoolsExtension.ctorParameters;\n    /** @type {?} */\n    DevtoolsExtension.prototype.instanceId;\n    /** @type {?} */\n    DevtoolsExtension.prototype.devtoolsExtension;\n    /** @type {?} */\n    DevtoolsExtension.prototype.extensionConnection;\n    /** @type {?} */\n    DevtoolsExtension.prototype.liftedActions$;\n    /** @type {?} */\n    DevtoolsExtension.prototype.actions$;\n    /** @type {?} */\n    DevtoolsExtension.prototype.start$;\n    /** @type {?} */\n    DevtoolsExtension.prototype.config;\n}\n\n//# sourceMappingURL=data:application/json;base64,","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { UPDATE, INIT, } from '@ngrx/store';\nimport { difference, liftAction } from './utils';\nimport * as Actions from './actions';\nimport { PerformAction } from './actions';\nexport const /** @type {?} */ INIT_ACTION = { type: INIT };\n/**\n * @record\n */\nexport function ComputedState() { }\nfunction ComputedState_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ComputedState.prototype.state;\n    /** @type {?} */\n    ComputedState.prototype.error;\n}\n/**\n * @record\n */\nexport function LiftedAction() { }\nfunction LiftedAction_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiftedAction.prototype.type;\n    /** @type {?} */\n    LiftedAction.prototype.action;\n}\n/**\n * @record\n */\nexport function LiftedActions() { }\nfunction LiftedActions_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    [id: number]: LiftedAction;\n    */\n}\n/**\n * @record\n */\nexport function LiftedState() { }\nfunction LiftedState_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiftedState.prototype.monitorState;\n    /** @type {?} */\n    LiftedState.prototype.nextActionId;\n    /** @type {?} */\n    LiftedState.prototype.actionsById;\n    /** @type {?} */\n    LiftedState.prototype.stagedActionIds;\n    /** @type {?} */\n    LiftedState.prototype.skippedActionIds;\n    /** @type {?} */\n    LiftedState.prototype.committedState;\n    /** @type {?} */\n    LiftedState.prototype.currentStateIndex;\n    /** @type {?} */\n    LiftedState.prototype.computedStates;\n}\n/**\n * Computes the next entry in the log by applying an action.\n * @param {?} reducer\n * @param {?} action\n * @param {?} state\n * @param {?} error\n * @param {?} errorHandler\n * @return {?}\n */\nfunction computeNextEntry(reducer, action, state, error, errorHandler) {\n    if (error) {\n        return {\n            state,\n            error: 'Interrupted by an error up the chain',\n        };\n    }\n    let /** @type {?} */ nextState = state;\n    let /** @type {?} */ nextError;\n    try {\n        nextState = reducer(state, action);\n    }\n    catch (/** @type {?} */ err) {\n        nextError = err.toString();\n        errorHandler.handleError(err.stack || err);\n    }\n    return {\n        state: nextState,\n        error: nextError,\n    };\n}\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n * @param {?} computedStates\n * @param {?} minInvalidatedStateIndex\n * @param {?} reducer\n * @param {?} committedState\n * @param {?} actionsById\n * @param {?} stagedActionIds\n * @param {?} skippedActionIds\n * @param {?} errorHandler\n * @return {?}\n */\nfunction recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler) {\n    // Optimization: exit early and return the same reference\n    // if we know nothing could have changed.\n    if (minInvalidatedStateIndex >= computedStates.length &&\n        computedStates.length === stagedActionIds.length) {\n        return computedStates;\n    }\n    const /** @type {?} */ nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n    for (let /** @type {?} */ i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {\n        const /** @type {?} */ actionId = stagedActionIds[i];\n        const /** @type {?} */ action = actionsById[actionId].action;\n        const /** @type {?} */ previousEntry = nextComputedStates[i - 1];\n        const /** @type {?} */ previousState = previousEntry ? previousEntry.state : committedState;\n        const /** @type {?} */ previousError = previousEntry ? previousEntry.error : undefined;\n        const /** @type {?} */ shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n        const /** @type {?} */ entry = shouldSkip\n            ? previousEntry\n            : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n        nextComputedStates.push(entry);\n    }\n    return nextComputedStates;\n}\n/**\n * @param {?=} initialCommittedState\n * @param {?=} monitorReducer\n * @return {?}\n */\nexport function liftInitialState(initialCommittedState, monitorReducer) {\n    return {\n        monitorState: monitorReducer(undefined, {}),\n        nextActionId: 1,\n        actionsById: { 0: liftAction(INIT_ACTION) },\n        stagedActionIds: [0],\n        skippedActionIds: [],\n        committedState: initialCommittedState,\n        currentStateIndex: 0,\n        computedStates: [],\n    };\n}\n/**\n * Creates a history state reducer from an app's reducer.\n * @param {?} initialCommittedState\n * @param {?} initialLiftedState\n * @param {?} errorHandler\n * @param {?=} monitorReducer\n * @param {?=} options\n * @return {?}\n */\nexport function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options = {}) {\n    /**\n       * Manages how the history actions modify the history state.\n       */\n    return (reducer) => (liftedState, liftedAction) => {\n        let { monitorState, actionsById, nextActionId, stagedActionIds, skippedActionIds, committedState, currentStateIndex, computedStates, } = liftedState || initialLiftedState;\n        if (!liftedState) {\n            // Prevent mutating initialLiftedState\n            actionsById = Object.create(actionsById);\n        }\n        /**\n         * @param {?} n\n         * @return {?}\n         */\n        function commitExcessActions(n) {\n            // Auto-commits n-number of excess actions.\n            let /** @type {?} */ excess = n;\n            let /** @type {?} */ idsToDelete = stagedActionIds.slice(1, excess + 1);\n            for (let /** @type {?} */ i = 0; i < idsToDelete.length; i++) {\n                if (computedStates[i + 1].error) {\n                    // Stop if error is found. Commit actions up to error.\n                    excess = i;\n                    idsToDelete = stagedActionIds.slice(1, excess + 1);\n                    break;\n                }\n                else {\n                    delete actionsById[idsToDelete[i]];\n                }\n            }\n            skippedActionIds = skippedActionIds.filter(id => idsToDelete.indexOf(id) === -1);\n            stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n            committedState = computedStates[excess].state;\n            computedStates = computedStates.slice(excess);\n            currentStateIndex =\n                currentStateIndex > excess ? currentStateIndex - excess : 0;\n        }\n        // By default, aggressively recompute every state whatever happens.\n        // This has O(n) performance, so we'll override this to a sensible\n        // value whenever we feel like we don't have to recompute the states.\n        let /** @type {?} */ minInvalidatedStateIndex = 0;\n        switch (liftedAction.type) {\n            case Actions.RESET: {\n                // Get back to the state the store was created with.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = initialCommittedState;\n                currentStateIndex = 0;\n                computedStates = [];\n                break;\n            }\n            case Actions.COMMIT: {\n                // Consider the last committed state the new starting point.\n                // Squash any staged actions into a single committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = computedStates[currentStateIndex].state;\n                currentStateIndex = 0;\n                computedStates = [];\n                break;\n            }\n            case Actions.ROLLBACK: {\n                // Forget about any staged actions.\n                // Start again from the last committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                currentStateIndex = 0;\n                computedStates = [];\n                break;\n            }\n            case Actions.TOGGLE_ACTION: {\n                // Toggle whether an action with given ID is skipped.\n                // Being skipped means it is a no-op during the computation.\n                const { id: actionId } = liftedAction;\n                const /** @type {?} */ index = skippedActionIds.indexOf(actionId);\n                if (index === -1) {\n                    skippedActionIds = [actionId, ...skippedActionIds];\n                }\n                else {\n                    skippedActionIds = skippedActionIds.filter(id => id !== actionId);\n                }\n                // Optimization: we know history before this action hasn't changed\n                minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n                break;\n            }\n            case Actions.SET_ACTIONS_ACTIVE: {\n                // Toggle whether an action with given ID is skipped.\n                // Being skipped means it is a no-op during the computation.\n                const { start, end, active } = liftedAction;\n                const /** @type {?} */ actionIds = [];\n                for (let /** @type {?} */ i = start; i < end; i++)\n                    actionIds.push(i);\n                if (active) {\n                    skippedActionIds = difference(skippedActionIds, actionIds);\n                }\n                else {\n                    skippedActionIds = [...skippedActionIds, ...actionIds];\n                }\n                // Optimization: we know history before this action hasn't changed\n                minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                break;\n            }\n            case Actions.JUMP_TO_STATE: {\n                // Without recomputing anything, move the pointer that tell us\n                // which state is considered the current one. Useful for sliders.\n                currentStateIndex = liftedAction.index;\n                // Optimization: we know the history has not changed.\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n            case Actions.JUMP_TO_ACTION: {\n                // Jumps to a corresponding state to a specific action.\n                // Useful when filtering actions.\n                const /** @type {?} */ index = stagedActionIds.indexOf(liftedAction.actionId);\n                if (index !== -1)\n                    currentStateIndex = index;\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n            case Actions.SWEEP: {\n                // Forget any actions that are currently being skipped.\n                stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                skippedActionIds = [];\n                currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                break;\n            }\n            case Actions.PERFORM_ACTION: {\n                // Auto-commit as new actions come in.\n                if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                    commitExcessActions(1);\n                }\n                if (currentStateIndex === stagedActionIds.length - 1) {\n                    currentStateIndex++;\n                }\n                const /** @type {?} */ actionId = nextActionId++;\n                // Mutation! This is the hottest path, and we optimize on purpose.\n                // It is safe because we set a new key in a cache dictionary.\n                actionsById[actionId] = liftedAction;\n                stagedActionIds = [...stagedActionIds, actionId];\n                // Optimization: we know that only the new action needs computing.\n                minInvalidatedStateIndex = stagedActionIds.length - 1;\n                break;\n            }\n            case Actions.IMPORT_STATE: {\n                // Completely replace everything.\n                ({\n                    monitorState,\n                    actionsById,\n                    nextActionId,\n                    stagedActionIds,\n                    skippedActionIds,\n                    committedState,\n                    currentStateIndex,\n                    // prettier-ignore\n                    computedStates\n                } = liftedAction.nextLiftedState);\n                break;\n            }\n            case INIT: {\n                // Always recompute states on hot reload and init.\n                minInvalidatedStateIndex = 0;\n                if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                    // States must be recomputed before committing excess.\n                    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                    commitExcessActions(stagedActionIds.length - options.maxAge);\n                    // Avoid double computation.\n                    minInvalidatedStateIndex = Infinity;\n                }\n                break;\n            }\n            case UPDATE: {\n                const /** @type {?} */ stateHasErrors = computedStates.filter(state => state.error).length > 0;\n                if (stateHasErrors) {\n                    // Recompute all states\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                }\n                else {\n                    if (currentStateIndex === stagedActionIds.length - 1) {\n                        currentStateIndex++;\n                    }\n                    // Add a new action to only recompute state\n                    const /** @type {?} */ actionId = nextActionId++;\n                    actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                    stagedActionIds = [...stagedActionIds, actionId];\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    // States must be recomputed before committing excess.\n                    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                    // Recompute state history with latest reducer and update action\n                    computedStates = computedStates.map(cmp => (Object.assign({}, cmp, { state: reducer(cmp.state, liftedAction) })));\n                    currentStateIndex = minInvalidatedStateIndex;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                    }\n                    // Avoid double computation.\n                    minInvalidatedStateIndex = Infinity;\n                }\n                break;\n            }\n            default: {\n                // If the action is not recognized, it's a monitor action.\n                // Optimization: a monitor action can't change history.\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n        }\n        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n        monitorState = monitorReducer(monitorState, liftedAction);\n        return {\n            monitorState,\n            actionsById,\n            nextActionId,\n            stagedActionIds,\n            skippedActionIds,\n            committedState,\n            currentStateIndex,\n            computedStates,\n        };\n    };\n}\n\n//# sourceMappingURL=data:application/json;base64,","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable, Inject, ErrorHandler } from '@angular/core';\nimport { ActionsSubject, INITIAL_STATE, ReducerObservable, ScannedActionsSubject, } from '@ngrx/store';\nimport { merge, queueScheduler, ReplaySubject, } from 'rxjs';\nimport { map, observeOn, scan, skip, withLatestFrom } from 'rxjs/operators';\nimport * as Actions from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig } from './config';\nimport { DevtoolsExtension } from './extension';\nimport { liftInitialState, liftReducerWith } from './reducer';\nimport { liftAction, unliftState } from './utils';\nexport class DevtoolsDispatcher extends ActionsSubject {\n}\nDevtoolsDispatcher.decorators = [\n    { type: Injectable }\n];\nfunction DevtoolsDispatcher_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DevtoolsDispatcher.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DevtoolsDispatcher.ctorParameters;\n}\nexport class StoreDevtools {\n    /**\n     * @param {?} dispatcher\n     * @param {?} actions$\n     * @param {?} reducers$\n     * @param {?} extension\n     * @param {?} scannedActions\n     * @param {?} errorHandler\n     * @param {?} initialState\n     * @param {?} config\n     */\n    constructor(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n        const /** @type {?} */ liftedInitialState = liftInitialState(initialState, config.monitor);\n        const /** @type {?} */ liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n        const /** @type {?} */ liftedAction$ = merge(merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(map(liftAction)), dispatcher, extension.liftedActions$).pipe(observeOn(queueScheduler));\n        const /** @type {?} */ liftedReducer$ = reducers$.pipe(map(liftReducer));\n        const /** @type {?} */ liftedStateSubject = new ReplaySubject(1);\n        const /** @type {?} */ liftedStateSubscription = liftedAction$\n            .pipe(withLatestFrom(liftedReducer$), scan(({ state: liftedState }, [action, reducer]) => {\n            const /** @type {?} */ reducedLiftedState = reducer(liftedState, action);\n            // // Extension should be sent the sanitized lifted state\n            extension.notify(action, reducedLiftedState);\n            return { state: reducedLiftedState, action };\n        }, { state: liftedInitialState, action: /** @type {?} */ (null) }))\n            .subscribe(({ state, action }) => {\n            liftedStateSubject.next(state);\n            if (action.type === Actions.PERFORM_ACTION) {\n                const /** @type {?} */ unliftedAction = (/** @type {?} */ (action)).action;\n                scannedActions.next(unliftedAction);\n            }\n        });\n        const /** @type {?} */ extensionStartSubscription = extension.start$.subscribe(() => {\n            this.refresh();\n        });\n        const /** @type {?} */ liftedState$ = /** @type {?} */ (liftedStateSubject.asObservable());\n        const /** @type {?} */ state$ = liftedState$.pipe(map(unliftState));\n        this.extensionStartSubscription = extensionStartSubscription;\n        this.stateSubscription = liftedStateSubscription;\n        this.dispatcher = dispatcher;\n        this.liftedState = liftedState$;\n        this.state = state$;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    dispatch(action) {\n        this.dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    next(action) {\n        this.dispatcher.next(action);\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    error(error) { }\n    /**\n     * @return {?}\n     */\n    complete() { }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    performAction(action) {\n        this.dispatch(new Actions.PerformAction(action, +Date.now()));\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        this.dispatch(new Actions.Refresh());\n    }\n    /**\n     * @return {?}\n     */\n    reset() {\n        this.dispatch(new Actions.Reset(+Date.now()));\n    }\n    /**\n     * @return {?}\n     */\n    rollback() {\n        this.dispatch(new Actions.Rollback(+Date.now()));\n    }\n    /**\n     * @return {?}\n     */\n    commit() {\n        this.dispatch(new Actions.Commit(+Date.now()));\n    }\n    /**\n     * @return {?}\n     */\n    sweep() {\n        this.dispatch(new Actions.Sweep());\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    toggleAction(id) {\n        this.dispatch(new Actions.ToggleAction(id));\n    }\n    /**\n     * @param {?} actionId\n     * @return {?}\n     */\n    jumpToAction(actionId) {\n        this.dispatch(new Actions.JumpToAction(actionId));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    jumpToState(index) {\n        this.dispatch(new Actions.JumpToState(index));\n    }\n    /**\n     * @param {?} nextLiftedState\n     * @return {?}\n     */\n    importState(nextLiftedState) {\n        this.dispatch(new Actions.ImportState(nextLiftedState));\n    }\n}\nStoreDevtools.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nStoreDevtools.ctorParameters = () => [\n    { type: DevtoolsDispatcher, },\n    { type: ActionsSubject, },\n    { type: ReducerObservable, },\n    { type: DevtoolsExtension, },\n    { type: ScannedActionsSubject, },\n    { type: ErrorHandler, },\n    { type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE,] },] },\n    { type: StoreDevtoolsConfig, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n];\nfunction StoreDevtools_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    StoreDevtools.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    StoreDevtools.ctorParameters;\n    /** @type {?} */\n    StoreDevtools.prototype.stateSubscription;\n    /** @type {?} */\n    StoreDevtools.prototype.extensionStartSubscription;\n    /** @type {?} */\n    StoreDevtools.prototype.dispatcher;\n    /** @type {?} */\n    StoreDevtools.prototype.liftedState;\n    /** @type {?} */\n    StoreDevtools.prototype.state;\n}\n\n//# sourceMappingURL=data:application/json;base64,","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { ReducerManagerDispatcher, StateObservable } from '@ngrx/store';\nimport { INITIAL_OPTIONS, STORE_DEVTOOLS_CONFIG, } from './config';\nimport { DevtoolsDispatcher, StoreDevtools } from './devtools';\nimport { DevtoolsExtension, REDUX_DEVTOOLS_EXTENSION, } from './extension';\nexport const /** @type {?} */ IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken('Is Devtools Extension or Monitor Present');\n/**\n * @param {?} extension\n * @param {?} config\n * @return {?}\n */\nexport function createIsExtensionOrMonitorPresent(extension, config) {\n    return Boolean(extension) || config.monitor !== noMonitor;\n}\n/**\n * @return {?}\n */\nexport function createReduxDevtoolsExtension() {\n    const /** @type {?} */ extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n    if (typeof window === 'object' &&\n        typeof (/** @type {?} */ (window))[extensionKey] !== 'undefined') {\n        return (/** @type {?} */ (window))[extensionKey];\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} devtools\n * @return {?}\n */\nexport function createStateObservable(devtools) {\n    return devtools.state;\n}\n/**\n * @return {?}\n */\nexport function noMonitor() {\n    return null;\n}\nexport const /** @type {?} */ DEFAULT_NAME = 'NgRx Store DevTools';\n/**\n * @param {?} _options\n * @return {?}\n */\nexport function createConfig(_options) {\n    const /** @type {?} */ DEFAULT_OPTIONS = {\n        maxAge: false,\n        monitor: noMonitor,\n        actionSanitizer: undefined,\n        stateSanitizer: undefined,\n        name: DEFAULT_NAME,\n        serialize: false,\n        logOnly: false,\n        features: false,\n    };\n    let /** @type {?} */ options = typeof _options === 'function' ? _options() : _options;\n    const /** @type {?} */ logOnly = options.logOnly\n        ? { pause: true, export: true, test: true }\n        : false;\n    const /** @type {?} */ features = options.features || logOnly;\n    const /** @type {?} */ config = Object.assign({}, DEFAULT_OPTIONS, { features }, options);\n    if (config.maxAge && config.maxAge < 2) {\n        throw new Error(`Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`);\n    }\n    return config;\n}\nexport class StoreDevtoolsModule {\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    static instrument(options = {}) {\n        return {\n            ngModule: StoreDevtoolsModule,\n            providers: [\n                DevtoolsExtension,\n                DevtoolsDispatcher,\n                StoreDevtools,\n                {\n                    provide: INITIAL_OPTIONS,\n                    useValue: options,\n                },\n                {\n                    provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                    deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                    useFactory: createIsExtensionOrMonitorPresent,\n                },\n                {\n                    provide: REDUX_DEVTOOLS_EXTENSION,\n                    useFactory: createReduxDevtoolsExtension,\n                },\n                {\n                    provide: STORE_DEVTOOLS_CONFIG,\n                    deps: [INITIAL_OPTIONS],\n                    useFactory: createConfig,\n                },\n                {\n                    provide: StateObservable,\n                    deps: [StoreDevtools],\n                    useFactory: createStateObservable,\n                },\n                {\n                    provide: ReducerManagerDispatcher,\n                    useExisting: DevtoolsDispatcher,\n                },\n            ],\n        };\n    }\n}\nStoreDevtoolsModule.decorators = [\n    { type: NgModule, args: [{},] }\n];\nfunction StoreDevtoolsModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    StoreDevtoolsModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    StoreDevtoolsModule.ctorParameters;\n}\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdHJ1bWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvc3JjL2luc3RydW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3hFLE9BQU8sRUFDTCxlQUFlLEVBQ2YscUJBQXFCLEdBR3RCLE1BQU0sVUFBVSxDQUFDO0FBQ2xCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDL0QsT0FBTyxFQUNMLGlCQUFpQixFQUNqQix3QkFBd0IsR0FFekIsTUFBTSxhQUFhLENBQUM7QUFFckIsTUFBTSxDQUFDLHVCQUFNLCtCQUErQixHQUFHLElBQUksY0FBYyxDQUMvRCwwQ0FBMEMsQ0FDM0MsQ0FBQzs7Ozs7O0FBRUYsTUFBTSw0Q0FDSixTQUF3QyxFQUN4QyxNQUEyQjtJQUUzQixNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDO0NBQzNEOzs7O0FBRUQsTUFBTTtJQUNKLHVCQUFNLFlBQVksR0FBRyw4QkFBOEIsQ0FBQztJQUVwRCxFQUFFLENBQUMsQ0FDRCxPQUFPLE1BQU0sS0FBSyxRQUFRO1FBQzFCLE9BQU8sbUJBQUMsTUFBYSxFQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssV0FDM0MsQ0FBQyxDQUFDLENBQUM7UUFDRCxNQUFNLENBQUMsbUJBQUMsTUFBYSxFQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7S0FDdEM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNOLE1BQU0sQ0FBQyxJQUFJLENBQUM7S0FDYjtDQUNGOzs7OztBQUVELE1BQU0sZ0NBQ0osUUFBdUI7SUFFdkIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7Q0FDdkI7Ozs7QUFFRCxNQUFNO0lBQ0osTUFBTSxDQUFDLElBQUksQ0FBQztDQUNiO0FBRUQsTUFBTSxDQUFDLHVCQUFNLFlBQVksR0FBRyxxQkFBcUIsQ0FBQzs7Ozs7QUFFbEQsTUFBTSx1QkFDSixRQUE4QjtJQUU5Qix1QkFBTSxlQUFlLEdBQXdCO1FBQzNDLE1BQU0sRUFBRSxLQUFLO1FBQ2IsT0FBTyxFQUFFLFNBQVM7UUFDbEIsZUFBZSxFQUFFLFNBQVM7UUFDMUIsY0FBYyxFQUFFLFNBQVM7UUFDekIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsT0FBTyxFQUFFLEtBQUs7UUFDZCxRQUFRLEVBQUUsS0FBSztLQUNoQixDQUFDO0lBRUYscUJBQUksT0FBTyxHQUFHLE9BQU8sUUFBUSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUNyRSx1QkFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU87UUFDN0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7UUFDM0MsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNWLHVCQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQztJQUM3Qyx1QkFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsZUFBZSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFekUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FDYixnREFBZ0QsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUNoRSxDQUFDO0tBQ0g7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDO0NBQ2Y7QUFHRCxNQUFNOzs7OztJQUNKLE1BQU0sQ0FBQyxVQUFVLENBQUMsVUFBZ0MsRUFBRTtRQUNsRCxNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFNBQVMsRUFBRTtnQkFDVCxpQkFBaUI7Z0JBQ2pCLGtCQUFrQjtnQkFDbEIsYUFBYTtnQkFDYjtvQkFDRSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsUUFBUSxFQUFFLE9BQU87aUJBQ2xCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSwrQkFBK0I7b0JBQ3hDLElBQUksRUFBRSxDQUFDLHdCQUF3QixFQUFFLHFCQUFxQixDQUFDO29CQUN2RCxVQUFVLEVBQUUsaUNBQWlDO2lCQUM5QztnQkFDRDtvQkFDRSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxVQUFVLEVBQUUsNEJBQTRCO2lCQUN6QztnQkFDRDtvQkFDRSxPQUFPLEVBQUUscUJBQXFCO29CQUM5QixJQUFJLEVBQUUsQ0FBQyxlQUFlLENBQUM7b0JBQ3ZCLFVBQVUsRUFBRSxZQUFZO2lCQUN6QjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO29CQUNyQixVQUFVLEVBQUUscUJBQXFCO2lCQUNsQztnQkFDRDtvQkFDRSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxXQUFXLEVBQUUsa0JBQWtCO2lCQUNoQzthQUNGO1NBQ0YsQ0FBQztLQUNIOzs7WUF0Q0YsUUFBUSxTQUFDLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlZHVjZXJNYW5hZ2VyRGlzcGF0Y2hlciwgU3RhdGVPYnNlcnZhYmxlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1xuICBJTklUSUFMX09QVElPTlMsXG4gIFNUT1JFX0RFVlRPT0xTX0NPTkZJRyxcbiAgU3RvcmVEZXZ0b29sc0NvbmZpZyxcbiAgU3RvcmVEZXZ0b29sc09wdGlvbnMsXG59IGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7IERldnRvb2xzRGlzcGF0Y2hlciwgU3RvcmVEZXZ0b29scyB9IGZyb20gJy4vZGV2dG9vbHMnO1xuaW1wb3J0IHtcbiAgRGV2dG9vbHNFeHRlbnNpb24sXG4gIFJFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTixcbiAgUmVkdXhEZXZ0b29sc0V4dGVuc2lvbixcbn0gZnJvbSAnLi9leHRlbnNpb24nO1xuXG5leHBvcnQgY29uc3QgSVNfRVhURU5TSU9OX09SX01PTklUT1JfUFJFU0VOVCA9IG5ldyBJbmplY3Rpb25Ub2tlbjxib29sZWFuPihcbiAgJ0lzIERldnRvb2xzIEV4dGVuc2lvbiBvciBNb25pdG9yIFByZXNlbnQnXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSXNFeHRlbnNpb25Pck1vbml0b3JQcmVzZW50KFxuICBleHRlbnNpb246IFJlZHV4RGV2dG9vbHNFeHRlbnNpb24gfCBudWxsLFxuICBjb25maWc6IFN0b3JlRGV2dG9vbHNDb25maWdcbikge1xuICByZXR1cm4gQm9vbGVhbihleHRlbnNpb24pIHx8IGNvbmZpZy5tb25pdG9yICE9PSBub01vbml0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWR1eERldnRvb2xzRXh0ZW5zaW9uKCkge1xuICBjb25zdCBleHRlbnNpb25LZXkgPSAnX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyc7XG5cbiAgaWYgKFxuICAgIHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmXG4gICAgdHlwZW9mICh3aW5kb3cgYXMgYW55KVtleHRlbnNpb25LZXldICE9PSAndW5kZWZpbmVkJ1xuICApIHtcbiAgICByZXR1cm4gKHdpbmRvdyBhcyBhbnkpW2V4dGVuc2lvbktleV07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlT2JzZXJ2YWJsZShcbiAgZGV2dG9vbHM6IFN0b3JlRGV2dG9vbHNcbik6IE9ic2VydmFibGU8YW55PiB7XG4gIHJldHVybiBkZXZ0b29scy5zdGF0ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vTW9uaXRvcigpOiBudWxsIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX05BTUUgPSAnTmdSeCBTdG9yZSBEZXZUb29scyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25maWcoXG4gIF9vcHRpb25zOiBTdG9yZURldnRvb2xzT3B0aW9uc1xuKTogU3RvcmVEZXZ0b29sc0NvbmZpZyB7XG4gIGNvbnN0IERFRkFVTFRfT1BUSU9OUzogU3RvcmVEZXZ0b29sc0NvbmZpZyA9IHtcbiAgICBtYXhBZ2U6IGZhbHNlLFxuICAgIG1vbml0b3I6IG5vTW9uaXRvcixcbiAgICBhY3Rpb25TYW5pdGl6ZXI6IHVuZGVmaW5lZCxcbiAgICBzdGF0ZVNhbml0aXplcjogdW5kZWZpbmVkLFxuICAgIG5hbWU6IERFRkFVTFRfTkFNRSxcbiAgICBzZXJpYWxpemU6IGZhbHNlLFxuICAgIGxvZ09ubHk6IGZhbHNlLFxuICAgIGZlYXR1cmVzOiBmYWxzZSxcbiAgfTtcblxuICBsZXQgb3B0aW9ucyA9IHR5cGVvZiBfb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJyA/IF9vcHRpb25zKCkgOiBfb3B0aW9ucztcbiAgY29uc3QgbG9nT25seSA9IG9wdGlvbnMubG9nT25seVxuICAgID8geyBwYXVzZTogdHJ1ZSwgZXhwb3J0OiB0cnVlLCB0ZXN0OiB0cnVlIH1cbiAgICA6IGZhbHNlO1xuICBjb25zdCBmZWF0dXJlcyA9IG9wdGlvbnMuZmVhdHVyZXMgfHwgbG9nT25seTtcbiAgY29uc3QgY29uZmlnID0gT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9PUFRJT05TLCB7IGZlYXR1cmVzIH0sIG9wdGlvbnMpO1xuXG4gIGlmIChjb25maWcubWF4QWdlICYmIGNvbmZpZy5tYXhBZ2UgPCAyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYERldnRvb2xzICdtYXhBZ2UnIGNhbm5vdCBiZSBsZXNzIHRoYW4gMiwgZ290ICR7Y29uZmlnLm1heEFnZX1gXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBjb25maWc7XG59XG5cbkBOZ01vZHVsZSh7fSlcbmV4cG9ydCBjbGFzcyBTdG9yZURldnRvb2xzTW9kdWxlIHtcbiAgc3RhdGljIGluc3RydW1lbnQob3B0aW9uczogU3RvcmVEZXZ0b29sc09wdGlvbnMgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogU3RvcmVEZXZ0b29sc01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICBEZXZ0b29sc0V4dGVuc2lvbixcbiAgICAgICAgRGV2dG9vbHNEaXNwYXRjaGVyLFxuICAgICAgICBTdG9yZURldnRvb2xzLFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogSU5JVElBTF9PUFRJT05TLFxuICAgICAgICAgIHVzZVZhbHVlOiBvcHRpb25zLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogSVNfRVhURU5TSU9OX09SX01PTklUT1JfUFJFU0VOVCxcbiAgICAgICAgICBkZXBzOiBbUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OLCBTVE9SRV9ERVZUT09MU19DT05GSUddLFxuICAgICAgICAgIHVzZUZhY3Rvcnk6IGNyZWF0ZUlzRXh0ZW5zaW9uT3JNb25pdG9yUHJlc2VudCxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFJFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTixcbiAgICAgICAgICB1c2VGYWN0b3J5OiBjcmVhdGVSZWR1eERldnRvb2xzRXh0ZW5zaW9uLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogU1RPUkVfREVWVE9PTFNfQ09ORklHLFxuICAgICAgICAgIGRlcHM6IFtJTklUSUFMX09QVElPTlNdLFxuICAgICAgICAgIHVzZUZhY3Rvcnk6IGNyZWF0ZUNvbmZpZyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFN0YXRlT2JzZXJ2YWJsZSxcbiAgICAgICAgICBkZXBzOiBbU3RvcmVEZXZ0b29sc10sXG4gICAgICAgICAgdXNlRmFjdG9yeTogY3JlYXRlU3RhdGVPYnNlcnZhYmxlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogUmVkdWNlck1hbmFnZXJEaXNwYXRjaGVyLFxuICAgICAgICAgIHVzZUV4aXN0aW5nOiBEZXZ0b29sc0Rpc3BhdGNoZXIsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { StoreDevtoolsModule } from './instrument';\nexport { StoreDevtools } from './devtools';\nexport { StoreDevtoolsConfig } from './config';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRW5ELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDM0MsT0FBTyxFQUFFLG1CQUFtQixFQUF3QixNQUFNLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFN0b3JlRGV2dG9vbHNNb2R1bGUgfSBmcm9tICcuL2luc3RydW1lbnQnO1xuZXhwb3J0IHsgTGlmdGVkU3RhdGUgfSBmcm9tICcuL3JlZHVjZXInO1xuZXhwb3J0IHsgU3RvcmVEZXZ0b29scyB9IGZyb20gJy4vZGV2dG9vbHMnO1xuZXhwb3J0IHsgU3RvcmVEZXZ0b29sc0NvbmZpZywgU3RvcmVEZXZ0b29sc09wdGlvbnMgfSBmcm9tICcuL2NvbmZpZyc7XG4iXX0=","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { StoreDevtoolsModule, StoreDevtools, StoreDevtoolsConfig } from './src/index';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUtZGV2dG9vbHMvcHVibGljX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsd0VBQWMsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9zcmMvaW5kZXgnO1xuIl19","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\nexport { StoreDevtoolsModule, StoreDevtools, StoreDevtoolsConfig } from './public_api';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU1BLHdFQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRE8gTk9UIEVESVRcbiAqXG4gKiBUaGlzIGZpbGUgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYXQgYnVpbGRcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuIl19","/**\n * Generated bundle index. Do not edit.\n */\nexport * from './index';\nexport { INITIAL_OPTIONS as ɵngrx_modules_store_devtools_store_devtools_i, STORE_DEVTOOLS_CONFIG as ɵngrx_modules_store_devtools_store_devtools_h } from './src/config';\nexport { DevtoolsDispatcher as ɵngrx_modules_store_devtools_store_devtools_g } from './src/devtools';\nexport { DevtoolsExtension as ɵngrx_modules_store_devtools_store_devtools_k, REDUX_DEVTOOLS_EXTENSION as ɵngrx_modules_store_devtools_store_devtools_j } from './src/extension';\nexport { IS_EXTENSION_OR_MONITOR_PRESENT as ɵngrx_modules_store_devtools_store_devtools_a, createConfig as ɵngrx_modules_store_devtools_store_devtools_f, createIsExtensionOrMonitorPresent as ɵngrx_modules_store_devtools_store_devtools_b, createReduxDevtoolsExtension as ɵngrx_modules_store_devtools_store_devtools_c, createStateObservable as ɵngrx_modules_store_devtools_store_devtools_d, noMonitor as ɵngrx_modules_store_devtools_store_devtools_e } from './src/instrument';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZGV2dG9vbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLWRldnRvb2xzL3N0b3JlLWRldnRvb2xzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYyxTQUFTLENBQUM7QUFFeEIsT0FBTyxFQUFDLGVBQWUsSUFBSSw2Q0FBNkMsRUFBQyxxQkFBcUIsSUFBSSw2Q0FBNkMsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNySyxPQUFPLEVBQUMsa0JBQWtCLElBQUksNkNBQTZDLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRyxPQUFPLEVBQUMsaUJBQWlCLElBQUksNkNBQTZDLEVBQUMsd0JBQXdCLElBQUksNkNBQTZDLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3SyxPQUFPLEVBQUMsK0JBQStCLElBQUksNkNBQTZDLEVBQUMsWUFBWSxJQUFJLDZDQUE2QyxFQUFDLGlDQUFpQyxJQUFJLDZDQUE2QyxFQUFDLDRCQUE0QixJQUFJLDZDQUE2QyxFQUFDLHFCQUFxQixJQUFJLDZDQUE2QyxFQUFDLFNBQVMsSUFBSSw2Q0FBNkMsRUFBQyxNQUFNLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IHtJTklUSUFMX09QVElPTlMgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfaSxTVE9SRV9ERVZUT09MU19DT05GSUcgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfaH0gZnJvbSAnLi9zcmMvY29uZmlnJztcbmV4cG9ydCB7RGV2dG9vbHNEaXNwYXRjaGVyIGFzIMm1bmdyeF9tb2R1bGVzX3N0b3JlX2RldnRvb2xzX3N0b3JlX2RldnRvb2xzX2d9IGZyb20gJy4vc3JjL2RldnRvb2xzJztcbmV4cG9ydCB7RGV2dG9vbHNFeHRlbnNpb24gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfayxSRURVWF9ERVZUT09MU19FWFRFTlNJT04gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfan0gZnJvbSAnLi9zcmMvZXh0ZW5zaW9uJztcbmV4cG9ydCB7SVNfRVhURU5TSU9OX09SX01PTklUT1JfUFJFU0VOVCBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19hLGNyZWF0ZUNvbmZpZyBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19mLGNyZWF0ZUlzRXh0ZW5zaW9uT3JNb25pdG9yUHJlc2VudCBhcyDJtW5ncnhfbW9kdWxlc19zdG9yZV9kZXZ0b29sc19zdG9yZV9kZXZ0b29sc19iLGNyZWF0ZVJlZHV4RGV2dG9vbHNFeHRlbnNpb24gYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfYyxjcmVhdGVTdGF0ZU9ic2VydmFibGUgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfZCxub01vbml0b3IgYXMgybVuZ3J4X21vZHVsZXNfc3RvcmVfZGV2dG9vbHNfc3RvcmVfZGV2dG9vbHNfZX0gZnJvbSAnLi9zcmMvaW5zdHJ1bWVudCc7Il19"],"names":["Actions.PerformAction","Actions.RESET","Actions.COMMIT","Actions.ROLLBACK","Actions.TOGGLE_ACTION","Actions.SET_ACTIONS_ACTIVE","Actions.JUMP_TO_STATE","Actions.JUMP_TO_ACTION","Actions.SWEEP","Actions.PERFORM_ACTION","Actions.IMPORT_STATE","Actions.Refresh","Actions.Reset","Actions.Rollback","Actions.Commit","Actions.Sweep","Actions.ToggleAction","Actions.JumpToAction","Actions.JumpToState","Actions.ImportState"],"mappings":"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"}