{"version":3,"file":"config.js","sourceRoot":"ng://@ngrx/store-devtools/","sources":["src/config.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;;;;AAY/C,4CAWC;;;IAVC,uCAAgB;;IAChB,sCAAe;;IACf,yCAAkB;;IAClB,wCAAiB;;IACjB,wCAA4B;;IAC5B,sCAAe;;IACf,sCAAe;;IACf,yCAAkB;;IAClB,0CAAmB;;IACnB,sCAAe;;AAGjB,MAAM,OAAO,mBAAmB;IAAhC;QACE,WAAM,GAAmB,KAAK,CAAC;IAWjC,CAAC;CAAA;;;IAXC,qCAA+B;;IAC/B,sCAAkC;;IAClC,8CAAkC;;IAClC,6CAAgC;;IAChC,mCAAc;;IACd,wCAA2C;;IAC3C,sCAAkB;;IAClB,uCAAkC;;IAClC,+CAA4B;;IAC5B,8CAA2B;;IAC3B,wCAAsB;;;AAGxB,MAAM,OAAO,qBAAqB,GAAG,IAAI,cAAc,CACrD,wBAAwB,CACzB;;AACD,MAAM,OAAO,eAAe,GAAG,IAAI,cAAc,CAC/C,+BAA+B,CAChC;;;;AAMD,MAAM,UAAU,SAAS;IACvB,OAAO,IAAI,CAAC;AACd,CAAC;;AAED,MAAM,OAAO,YAAY,GAAG,qBAAqB;;;;;AAEjD,MAAM,UAAU,YAAY,CAC1B,QAA8B;;UAExB,eAAe,GAAwB;QAC3C,MAAM,EAAE,KAAK;QACb,OAAO,EAAE,SAAS;QAClB,eAAe,EAAE,SAAS;QAC1B,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,KAAK;;;QAGd,QAAQ,EAAE;YACR,KAAK,EAAE,IAAI;;YACX,IAAI,EAAE,IAAI;;YACV,OAAO,EAAE,IAAI;;YACb,MAAM,EAAE,IAAI;;YACZ,MAAM,EAAE,QAAQ;;YAChB,IAAI,EAAE,IAAI;;YACV,IAAI,EAAE,IAAI;;YACV,OAAO,EAAE,IAAI;;YACb,QAAQ,EAAE,IAAI;;YACd,IAAI,EAAE,IAAI;SACX;KACF;;QAEG,OAAO,GAAG,OAAO,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ;;UAC9D,OAAO,GAAG,OAAO,CAAC,OAAO;QAC7B,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;QAC3C,CAAC,CAAC,KAAK;;UACH,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,IAAI,eAAe,CAAC,QAAQ;;UAClE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,CAAC;IAExE,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACtC,MAAM,IAAI,KAAK,CACb,gDAAgD,MAAM,CAAC,MAAM,EAAE,CAChE,CAAC;KACH;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { ActionReducer, Action } from '@ngrx/store';\nimport { InjectionToken } from '@angular/core';\n\nexport type ActionSanitizer = (action: Action, id: number) => Action;\nexport type StateSanitizer = (state: any, index: number) => any;\nexport type SerializationOptions = {\n  options?: boolean | any;\n  replacer?: (key: any, value: any) => {};\n  reviver?: (key: any, value: any) => {};\n  immutable?: any;\n  refs?: Array<any>;\n};\nexport type Predicate = (state: any, action: Action) => boolean;\nexport interface DevToolsFeatureOptions {\n  pause?: boolean;\n  lock?: boolean;\n  persist?: boolean;\n  export?: boolean;\n  import?: 'custom' | boolean;\n  jump?: boolean;\n  skip?: boolean;\n  reorder?: boolean;\n  dispatch?: boolean;\n  test?: boolean;\n}\n\nexport class StoreDevtoolsConfig {\n  maxAge: number | false = false;\n  monitor?: ActionReducer<any, any>;\n  actionSanitizer?: ActionSanitizer;\n  stateSanitizer?: StateSanitizer;\n  name?: string;\n  serialize?: boolean | SerializationOptions;\n  logOnly?: boolean;\n  features?: DevToolsFeatureOptions;\n  actionsBlocklist?: string[];\n  actionsSafelist?: string[];\n  predicate?: Predicate;\n}\n\nexport const STORE_DEVTOOLS_CONFIG = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Options'\n);\nexport const INITIAL_OPTIONS = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Initial Config'\n);\n\nexport type StoreDevtoolsOptions =\n  | Partial<StoreDevtoolsConfig>\n  | (() => Partial<StoreDevtoolsConfig>);\n\nexport function noMonitor(): null {\n  return null;\n}\n\nexport const DEFAULT_NAME = 'NgRx Store DevTools';\n\nexport function createConfig(\n  _options: StoreDevtoolsOptions\n): StoreDevtoolsConfig {\n  const DEFAULT_OPTIONS: StoreDevtoolsConfig = {\n    maxAge: false,\n    monitor: noMonitor,\n    actionSanitizer: undefined,\n    stateSanitizer: undefined,\n    name: DEFAULT_NAME,\n    serialize: false,\n    logOnly: false,\n    // Add all features explicitly. This prevent buggy behavior for\n    // options like \"lock\" which might otherwise not show up.\n    features: {\n      pause: true, // start/pause recording of dispatched actions\n      lock: true, // lock/unlock dispatching actions and side effects\n      persist: true, // persist states on page reloading\n      export: true, // export history of actions in a file\n      import: 'custom', // import history of actions from a file\n      jump: true, // jump back and forth (time travelling)\n      skip: true, // skip (cancel) actions\n      reorder: true, // drag and drop actions in the history list\n      dispatch: true, // dispatch custom actions or action creators\n      test: true, // generate tests for the selected actions\n    },\n  };\n\n  let options = typeof _options === 'function' ? _options() : _options;\n  const logOnly = options.logOnly\n    ? { pause: true, export: true, test: true }\n    : false;\n  const features = options.features || logOnly || DEFAULT_OPTIONS.features;\n  const config = Object.assign({}, DEFAULT_OPTIONS, { features }, options);\n\n  if (config.maxAge && config.maxAge < 2) {\n    throw new Error(\n      `Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`\n    );\n  }\n\n  return config;\n}\n"]}